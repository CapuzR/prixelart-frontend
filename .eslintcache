[{"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\index.js":"1","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\theme.js":"2","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\App.js":"3","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\serviceWorker.js":"4","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\expire.js":"5","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\login\\loginPage.jsx":"6","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\gallery\\gallery.jsx":"7","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\userRegistration.jsx":"8","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\prixerRegistration.jsx":"9","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsCatalog.jsx":"10","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\fullscreenPhoto\\fullscreenPhoto.jsx":"11","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordChange\\passwordChange.jsx":"12","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerProfile.jsx":"13","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\adminLogin\\adminLoginPage.jsx":"14","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\home\\home.jsx":"15","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\forgotPassword.jsx":"16","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\passwordReset.jsx":"17","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminMain.jsx":"18","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\validations.js":"19","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\utils.js":"20","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\grid\\grid.jsx":"21","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\TestimonialsCrud\\TestimonialsFeed.jsx":"22","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\TestimonialsCrud\\Testimonials.jsx":"23","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\appBar\\appBar.jsx":"24","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\Copyright\\copyright.jsx":"25","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\artUploader.jsx":"26","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\floatingAddButton\\floatingAddButton.jsx":"27","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\simpleDialog\\simpleDialog.jsx":"28","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\prixerGrid\\prixerGrid.jsx":"29","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\prixers\\prixers.jsx":"30","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\Preferences.jsx":"31","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orders.jsx":"32","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orderServices.js":"33","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\tabPreferences.jsx":"34","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\updateOrder.jsx":"35","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\createOrder.jsx":"36","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\consumerServices.js":"37","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferenceTerms.jsx":"38","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferencesCarousel.jsx":"39","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderDetails.jsx":"40","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\Title.jsx":"41","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderBasicInfo.jsx":"42","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\services.js":"43","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\searchBar\\searchBar.jsx":"44","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\aspectRatioSelector.jsx":"45","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\paymentMethods.jsx":"46","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\products.jsx":"47","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\consumers\\consumers.jsx":"48","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminUser\\adminUser.jsx":"49","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\listItems.jsx":"50","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsGrid.jsx":"51","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\dashboard.jsx":"52","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerOptions\\prixerOptions.jsx":"53","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\userData\\userData.jsx":"54","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\cropImage.js":"55","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\easyCropper.jsx":"56","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\readConsumers.jsx":"57","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\createPaymentMethod.jsx":"58","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\createConsumer.jsx":"59","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\updatePaymentMethod.jsx":"60","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\readPaymentMethods.jsx":"61","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\updateConsumer.jsx":"62","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\readProducts.jsx":"63","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\createProduct.jsx":"64","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\disableProduct.jsx":"65","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\updateProduct.jsx":"66","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\disableAdmin.jsx":"67","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\updateAdmin.jsx":"68","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\createAdmin.jsx":"69","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\orders.jsx":"70","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\chart.jsx":"71","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\readAdmins.jsx":"72","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\deposits.jsx":"73","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\variants.jsx":"74","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\readVariants.jsx":"75","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\createVariant.jsx":"76"},{"size":958,"mtime":1661179060799,"results":"77","hashOfConfig":"78"},{"size":419,"mtime":1661179060827,"results":"79","hashOfConfig":"78"},{"size":3390,"mtime":1661179060773,"results":"80","hashOfConfig":"78"},{"size":5227,"mtime":1661179060817,"results":"81","hashOfConfig":"78"},{"size":418,"mtime":1661179060829,"results":"82","hashOfConfig":"78"},{"size":9855,"mtime":1661179060801,"results":"83","hashOfConfig":"78"},{"size":2585,"mtime":1665492185748,"results":"84","hashOfConfig":"78"},{"size":12335,"mtime":1665462409914,"results":"85","hashOfConfig":"78"},{"size":15597,"mtime":1665492185903,"results":"86","hashOfConfig":"78"},{"size":2405,"mtime":1661179060812,"results":"87","hashOfConfig":"78"},{"size":38316,"mtime":1665534633731,"results":"88","hashOfConfig":"78"},{"size":8779,"mtime":1661179060807,"results":"89","hashOfConfig":"78"},{"size":2419,"mtime":1661263262650,"results":"90","hashOfConfig":"78"},{"size":9100,"mtime":1661179060796,"results":"91","hashOfConfig":"78"},{"size":17332,"mtime":1665462409904,"results":"92","hashOfConfig":"78"},{"size":4822,"mtime":1661179060807,"results":"93","hashOfConfig":"78"},{"size":7383,"mtime":1661179060808,"results":"94","hashOfConfig":"78"},{"size":7723,"mtime":1665462409884,"results":"95","hashOfConfig":"78"},{"size":608,"mtime":1661179060831,"results":"96","hashOfConfig":"78"},{"size":2792,"mtime":1661179060831,"results":"97","hashOfConfig":"78"},{"size":6592,"mtime":1665462409907,"results":"98","hashOfConfig":"78"},{"size":4529,"mtime":1665462409882,"results":"99","hashOfConfig":"78"},{"size":21226,"mtime":1665531543223,"results":"100","hashOfConfig":"78"},{"size":4802,"mtime":1661263262652,"results":"101","hashOfConfig":"78"},{"size":501,"mtime":1661179060818,"results":"102","hashOfConfig":"78"},{"size":31443,"mtime":1665492185906,"results":"103","hashOfConfig":"78"},{"size":1500,"mtime":1661179060825,"results":"104","hashOfConfig":"78"},{"size":1862,"mtime":1661179060826,"results":"105","hashOfConfig":"78"},{"size":9433,"mtime":1665589430412,"results":"106","hashOfConfig":"78"},{"size":9546,"mtime":1665589379672,"results":"107","hashOfConfig":"78"},{"size":207,"mtime":1665462409886,"results":"108","hashOfConfig":"78"},{"size":5443,"mtime":1661179060781,"results":"109","hashOfConfig":"78"},{"size":2794,"mtime":1661179060781,"results":"110","hashOfConfig":"78"},{"size":1661,"mtime":1665462409890,"results":"111","hashOfConfig":"78"},{"size":8857,"mtime":1661179060790,"results":"112","hashOfConfig":"78"},{"size":12883,"mtime":1661179060787,"results":"113","hashOfConfig":"78"},{"size":1082,"mtime":1661179060784,"results":"114","hashOfConfig":"78"},{"size":3598,"mtime":1665462409887,"results":"115","hashOfConfig":"78"},{"size":16437,"mtime":1665492185740,"results":"116","hashOfConfig":"78"},{"size":39777,"mtime":1661179060788,"results":"117","hashOfConfig":"78"},{"size":356,"mtime":1661179060776,"results":"118","hashOfConfig":"78"},{"size":15989,"mtime":1661179060787,"results":"119","hashOfConfig":"78"},{"size":2888,"mtime":1665531543234,"results":"120","hashOfConfig":"78"},{"size":1866,"mtime":1665462409919,"results":"121","hashOfConfig":"78"},{"size":6918,"mtime":1661179060821,"results":"122","hashOfConfig":"78"},{"size":5222,"mtime":1661179060782,"results":"123","hashOfConfig":"78"},{"size":5486,"mtime":1665462409893,"results":"124","hashOfConfig":"78"},{"size":4996,"mtime":1661179060778,"results":"125","hashOfConfig":"78"},{"size":4595,"mtime":1661263262645,"results":"126","hashOfConfig":"78"},{"size":5484,"mtime":1665462409885,"results":"127","hashOfConfig":"78"},{"size":16889,"mtime":1665589361906,"results":"128","hashOfConfig":"78"},{"size":3304,"mtime":1661179060779,"results":"129","hashOfConfig":"78"},{"size":1003,"mtime":1665492185749,"results":"130","hashOfConfig":"78"},{"size":22618,"mtime":1665534633732,"results":"131","hashOfConfig":"78"},{"size":2393,"mtime":1661179060829,"results":"132","hashOfConfig":"78"},{"size":1353,"mtime":1661179060822,"results":"133","hashOfConfig":"78"},{"size":3002,"mtime":1661179060785,"results":"134","hashOfConfig":"78"},{"size":6547,"mtime":1661179060790,"results":"135","hashOfConfig":"78"},{"size":15971,"mtime":1665462409895,"results":"136","hashOfConfig":"78"},{"size":6964,"mtime":1661179060791,"results":"137","hashOfConfig":"78"},{"size":3081,"mtime":1661179060791,"results":"138","hashOfConfig":"78"},{"size":17561,"mtime":1661179060785,"results":"139","hashOfConfig":"78"},{"size":5587,"mtime":1665531543226,"results":"140","hashOfConfig":"78"},{"size":29278,"mtime":1665462409896,"results":"141","hashOfConfig":"78"},{"size":0,"mtime":1661179060793,"results":"142","hashOfConfig":"78"},{"size":27086,"mtime":1665589361901,"results":"143","hashOfConfig":"78"},{"size":0,"mtime":1661179060775,"results":"144","hashOfConfig":"78"},{"size":0,"mtime":1661179060776,"results":"145","hashOfConfig":"78"},{"size":9089,"mtime":1665462409883,"results":"146","hashOfConfig":"78"},{"size":2418,"mtime":1661179060780,"results":"147","hashOfConfig":"78"},{"size":1482,"mtime":1661179060779,"results":"148","hashOfConfig":"78"},{"size":2157,"mtime":1661179060776,"results":"149","hashOfConfig":"78"},{"size":881,"mtime":1661179060779,"results":"150","hashOfConfig":"78"},{"size":5293,"mtime":1661179060783,"results":"151","hashOfConfig":"78"},{"size":4753,"mtime":1665589361904,"results":"152","hashOfConfig":"78"},{"size":29908,"mtime":1665589361903,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"12dukld",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"156"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"156"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"156"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"156"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"156"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"156"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"156"},"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\index.js",[],["316","317"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\theme.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\App.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\serviceWorker.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\expire.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\login\\loginPage.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\gallery\\gallery.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\userRegistration.jsx",["318","319","320","321","322","323","324","325","326"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\prixerRegistration.jsx",["327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsCatalog.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\fullscreenPhoto\\fullscreenPhoto.jsx",["341","342","343","344","345","346","347","348","349","350","351","352","353"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordChange\\passwordChange.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerProfile.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\adminLogin\\adminLoginPage.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\home\\home.jsx",["354","355"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\forgotPassword.jsx",["356","357","358","359","360","361","362","363"],"//Llevar el Password a un componente propio.\r\n\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport Copyright from '../../sharedComponents/Copyright/copyright';\r\n\r\n//material-ui\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n\r\n  //Error states.\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n  const handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n    if(!email) {\r\n      setErrorMessage('Por favor indica tu correo electrónico registrado para reestablecer tu contraseña.');\r\n      setSnackBarError(true);\r\n    } else {\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/forgot-password\";\r\n    const data= {\r\n      'email': email,\r\n      };\r\n    axios.post(base_url,data)\r\n    .then(async response =>{\r\n        if(!response.data.success){\r\n        //   setCurrentPasswordError(true);\r\n          setErrorMessage(response.data.info);\r\n          setSnackBarError(true);\r\n        } else {\r\n          setErrorMessage('Hemos enviado un enlace a tu correo electrónico.');\r\n          setSnackBarError(true);\r\n          await sleep(3000);\r\n          history.push({pathname:'/'});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error.response)\r\n    })\r\n  }\r\n   } \r\n\r\n\r\n   const handleEmailChange = (e)=> {\r\n     setEmail(e.target.value)\r\n   }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Solicita el cambio de contraseña\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    // error={emailError}\r\n                    id=\"email\"\r\n                    label=\"Correo electrónico\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"submit\"\r\n          >\r\n            Recuperar acceso\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={6000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n    </Container>\r\n  );\r\n}","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\passwordReset.jsx",["364"],"//Llevar el Password a un componente propio.\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport validations from '../../utils/validations';\r\nimport Copyright from '../../sharedComponents/Copyright/copyright';\r\n\r\n//material-ui\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function PasswordReset(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const token = props.match.params.token;\r\n  const [backdrop, setBackdrop] = useState(true);\r\n\r\n  //Error states.\r\n  const [newPasswordError, setNewPasswordError] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n//FALTA AGREGAR AQUI LA VALIDACION DE QUE EL LINK EXISTE.\r\n  useEffect(()=>{\r\n\r\n    if(!token) {\r\n        setErrorMessage('Token inválido o expirado. Por favor inténtalo de nuevo.');\r\n        setSnackBarError(true);\r\n    } else {\r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/pw-token-check\";\r\n        const data= {\r\n          'token': token\r\n          };\r\n        axios.post(base_url,data)\r\n        .then(response =>{\r\n            if(!response.data.success){\r\n                setErrorMessage(response.data.info);\r\n                setSnackBarError(true);\r\n            } else {\r\n                setBackdrop(false);\r\n            }\r\n        })\r\n        .catch(error =>{\r\n            console.log(error.response)\r\n        })\r\n      }\r\n\r\n  });\r\n\r\n  const handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n    if((!newPassword)) {\r\n      setErrorMessage('Por favor completa todos los campos requeridos.');\r\n      setSnackBarError(true);\r\n    } else {\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/reset-password\";\r\n    const data= {\r\n      'token': token,\r\n      'newPassword': newPassword\r\n      };\r\n    axios.post(base_url,data)\r\n    .then(response =>{\r\n        if(!response.data.success){\r\n          setNewPasswordError(true);\r\n          setErrorMessage(\"Por favor intentar nuevamente\");\r\n          setSnackBarError(true);\r\n        } else {\r\n          setErrorMessage(response.data.info);\r\n          setSnackBarError(true);\r\n          history.push({pathname:'/iniciar'});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error.response)\r\n    })\r\n  }\r\n   } \r\n\r\n//New password\r\nconst handleNewPasswordChange = (e)=> {\r\n    if(validations.isAValidPassword(e.target.value)) {\r\n      setNewPassword(e.target.value); \r\n      setNewPasswordError(false);\r\n      setSnackBarError(false);\r\n    } else {\r\n      setNewPassword(e.target.value); \r\n      setNewPasswordError(true); \r\n      setErrorMessage('Disculpa, tu contraseña nueva debe tener entre 8 y 15 caracteres, incluyendo al menos: una minúscula, una mayúscula, un número y un caracter especial.');\r\n      setSnackBarError(true);\r\n    }\r\n   }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n      setShowNewPassword(!showNewPassword);\r\n    };\r\n  \r\n    const handleMouseDownNewPassword = (event) => {\r\n      event.preventDefault();\r\n    };\r\n//END New password\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n    <Backdrop className={classes.backdrop} open={backdrop}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cambia tu contraseña\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n              <InputLabel htmlFor=\"new-password\">Contraseña nueva</InputLabel>\r\n              <OutlinedInput\r\n                id=\"new-password\"\r\n                type={showNewPassword ? 'text' : 'password'}\r\n                value={newPassword}\r\n                label=\"Contraseña nueva\"\r\n                error={newPasswordError}\r\n                onChange={handleNewPasswordChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowNewPassword}\r\n                      onMouseDown={handleMouseDownNewPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showNewPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={100}\r\n              />\r\n            </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"submit\"\r\n          >\r\n            Cambiar contraseña\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={6000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n    </Container>\r\n  );\r\n}","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminMain.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\validations.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\utils.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\grid\\grid.jsx",["365","366"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\TestimonialsCrud\\TestimonialsFeed.jsx",["367","368"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\TestimonialsCrud\\Testimonials.jsx",["369","370","371","372","373","374","375","376"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\appBar\\appBar.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\Copyright\\copyright.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\artUploader.jsx",["377","378","379","380","381","382","383","384","385","386","387"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\floatingAddButton\\floatingAddButton.jsx",["388"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport axios from 'axios';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      // margin: theme.spacing(1),\r\n      margin: 0,\r\n      top: 'auto',\r\n      // marginLeft:333,\r\n      bottom: 20,\r\n      left: 'auto',\r\n      position: 'fixed'\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  uwStyles: {\r\n    palette: {\r\n        window: \"#ffffff\",\r\n        sourceBg: \"#f4f4f5\",\r\n        windowBorder: \"#90a0b3\",\r\n        tabIcon: \"#000000\",\r\n        inactiveTabIcon: \"#d33f49\",\r\n        menuIcons: \"#555a5f\",\r\n        link: theme.palette.primary.main,\r\n        action: \"#339933\",\r\n        inProgress: theme.palette.primary.main,\r\n        complete: \"#339933\",\r\n        error: \"#cc0000\",\r\n        textDark: \"#000000\",\r\n        textLight: \"#fcfffd\"\r\n    },\r\n    fonts: {\r\n        default: null,\r\n        \"sans-serif\": {\r\n            url: null,\r\n            active: true\r\n        }\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function FloatingAddButton(props) {\r\n  const classes = useStyles();\r\n  \r\n  const handleClick = ()=> {\r\n    props.setOpenArtFormDialog(true);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleClick}>\r\n        <AddPhotoAlternateIcon/>\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\simpleDialog\\simpleDialog.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\prixerGrid\\prixerGrid.jsx",["389","390"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\prixers\\prixers.jsx",["391","392","393","394","395","396"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\Preferences.jsx",["397","398"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orders.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orderServices.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\tabPreferences.jsx",["399"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\updateOrder.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\createOrder.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\consumerServices.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferenceTerms.jsx",["400","401"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferencesCarousel.jsx",["402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderDetails.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\Title.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderBasicInfo.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\services.js",["416","417","418","419","420","421","422","423","424","425","426","427","428"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\searchBar\\searchBar.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\aspectRatioSelector.jsx",["429","430","431","432","433","434","435","436","437","438"],"import React, { useEffect, useImperativeHandle } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useCallback } from 'react';\r\nimport EasyCropper from './easyCropper'\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport getCroppedImg from '../../utils/cropImage';\r\nimport CropIcon from '@material-ui/icons/Crop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    iconTabs: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      margin: 'auto',\r\n      marginBottom: 50\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'left',\r\n      // maxWidth: 850,\r\n      flexGrow: 1,\r\n      overflow: 'visible'\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    cardGrid: {\r\n        position: 'relative'\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n      maxHeight: '200px',\r\n      width: '100%',\r\n      height: '100%',\r\n      objectFit: 'contain',\r\n      objectPosition: '50% 50%'\r\n    },\r\n    tab: {\r\n        minWidth: 100\r\n    },\r\n    button: {\r\n        width: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\nexport default function AspectRatioSelector(props) {\r\n    const { art, croppedArt, setCroppedArt } = props;\r\n    const classes = useStyles();\r\n    const [tabValue, setTabValue] = useState(1);\r\n    const croppedArtTemp = croppedArt;\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState();\r\n\r\n    //Error states.\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [snackBarAction, setSnackBarAction] = useState();\r\n    const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n    useEffect(()=>{\r\n    });\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\nconst updateCrop = (i)=> {    \r\n    croppedArtTemp[i].thumb = '';\r\n    croppedArtTemp[i].cropped = false;\r\n    setCroppedArt([...croppedArtTemp]);\r\n\r\n}\r\n\r\n\r\n  const handleCrop = useCallback(async (i) => {\r\n    try {\r\n      const { croppedImg, croppedImgFile } = await getCroppedImg(art,croppedAreaPixels)\r\n      croppedArtTemp[i].thumb = croppedImg;\r\n      croppedArtTemp[i].thumbFile = croppedImgFile;\r\n      croppedArtTemp[i].cropped = true;\r\n      croppedArtTemp[i].croppedAreaPixels = croppedAreaPixels;\r\n      setCroppedArt([...croppedArtTemp]);\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [croppedAreaPixels])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        {\r\n            tabValue === 0 ?\r\n            <Grid item xs={12} sm={12} md={12} style={{position:'relative', height:300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                <label htmlFor=\"inputfile\" style={{cursor:\"pointer\"}}>\r\n                    <Tooltip title={\"Carga tu arte con un mínimo de 1080px tanto de ancho como de alto. Tu Arte debe pesar máximo 5Mb y estar en formato .jpeg o .png\"}>\r\n                        <img className={classes.img} alt=\"Uploaded\" src={art} />\r\n                    </Tooltip>\r\n                </label>\r\n            </Grid>\r\n            :\r\n            croppedArt &&\r\n            croppedArt.map((ar, index)=>(\r\n            ar.id === tabValue &&\r\n            <Grid item xs={12} sm={12} md={12} style={{position:'relative', height: 300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                {\r\n                croppedArt[index].thumb == '' ?\r\n                        <EasyCropper \r\n                        art={art}\r\n                        ar={ar}\r\n                        croppedArt={croppedArt}\r\n                        setCroppedArt={setCroppedArt}\r\n                        index={index}\r\n                        setCroppedAreaPixels={setCroppedAreaPixels}\r\n                        />\r\n                :\r\n                <Grid item xs={12} sm={12} md={12} style={{position:'relative', height: 300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                        <Tooltip title={\"Genera el recorte para recomendar a tus clientes las mejores secciones de tu arte.\"}>\r\n                            <img className={classes.img} alt=\"Uploaded\" src={croppedArtTemp[index].thumb} />\r\n                        </Tooltip>\r\n                </Grid>\r\n                }\r\n                {\r\n                croppedArt[index].cropped ?\r\n                <Grid item xs={12} sm={12} md={12} style={{position: 'absolute', right: 5, bottom: 5}}>\r\n                    \r\n                    <IconButton color=\"secondary\" aria-label=\"add an alarm\" style={{padding: 0}} onClick={()=>{updateCrop(index)}}>\r\n                        <Typography>Recortar</Typography>\r\n                        <CropIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                :\r\n                <Grid item xs={12} sm={12} md={12} style={{position: 'absolute', right: 5, bottom: 5, zIndex: 20}}>\r\n                    \r\n                    <IconButton color=\"secondary\" aria-label=\"add an alarm\" style={{padding: 0}} onClick={()=>{handleCrop(index)}}>\r\n                        <Typography>Listo</Typography>\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n        ))\r\n        }\r\n            {/* <Grid xs={12} sm={12} md={12}><Typography>Selecciona cómo quieres recomendar el arte a tus clientes:</Typography></Grid> */}\r\n            <Grid xs={12} sm={12} md={12} style={{ maxHeight: 80}}>\r\n                <Paper square className={classes.iconTabs}>\r\n                    <Tabs\r\n                    value={tabValue}\r\n                    onChange={handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    >\r\n                    \r\n                    <Tab className={classes.tab} icon={<PhotoLibraryIcon />} label=\"Original\" />\r\n                    {\r\n                    croppedArt &&\r\n                    croppedArt.map((ar)=>(\r\n                        <Tab className={classes.tab} icon={<PhotoLibraryIcon />} label={ar.name} id={ar.id} />\r\n                    ))\r\n                    }\r\n                    </Tabs>\r\n                </Paper> \r\n            </Grid>\r\n          </div>\r\n  )\r\n}","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\paymentMethods.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\products.jsx",["439"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\consumers\\consumers.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminUser\\adminUser.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\listItems.jsx",["440","441","442"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsGrid.jsx",["443","444","445","446","447","448","449","450","451","452","453","454"],"//[]      17. Búsqueda de Prixers.\r\n//[]      21. Términos y condiciones.\r\n//[]      16. Filtros para las búsquedas (Por etiqueta).\r\n//[]      25. Editar datos de la imagen en la tarjeta del grid grande.\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\r\nimport utils from \"../utils/utils\";\r\nimport axios from \"axios\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport MaximizeIcon from \"@material-ui/icons/Maximize\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { setProductAtts, getAttributes, getEquation } from \"./services.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    overflow: \"hidden\",\r\n    alignContent: \"space-between\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n    width: \"50%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 300,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      maxWidth: 330,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      maxWidth: 330,\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      maxWidth: 330,\r\n    },\r\n  },\r\n  gridList: {\r\n    overflow: \"hidden\",\r\n    padding: 10,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  CarouselContent: {\r\n    width: \"100%\",\r\n    heigh: \"40vh\",\r\n  },\r\n}));\r\n\r\nconst getGridListCols = () => {\r\n  if (isWidthUp(\"md\", 200)) {\r\n    return 4;\r\n  }\r\n\r\n  return 1;\r\n};\r\n\r\nexport default function ProductGrid(props) {\r\n  const classes = useStyles();\r\n  const [tiles, setTiles] = useState();\r\n  const [ imagesVariants, setImagesVariants ] = useState([])\r\n  const [ imagesProducts, setImagesProducts ] = useState()\r\n  const [width, setWidth] = useState([]);\r\n  const [height, setHeight] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const base_url = process.env.REACT_APP_BACKEND_URL + \"/product/read-all\";\r\n    axios.get(base_url)\r\n      .then(async (response) => {\r\n        let productsAttTemp1 = response.data.products\r\n        await productsAttTemp1.map(async (p, iProd, pArr) => {\r\n          p.variants.map(variant => {\r\n            imagesVariants.push(variant.variantImage)\r\n          })\r\n          productsAttTemp1 = await getEquation(p, iProd, pArr);\r\n        });\r\n      setTiles(getAttributes(productsAttTemp1));\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <GridList\r\n      cellHeight={\"auto\"}\r\n      className={classes.gridList}\r\n      cols={getGridListCols()}\r\n    >\r\n      {tiles ? (\r\n        tiles.map((tile, iProd, productsArr) => (\r\n          <Card className={classes.root}>\r\n            <CardMedia style={{ width: \"110%\" }}>\r\n              <Carousel\r\n                autoPlay={false}\r\n                stopAutoPlayOnHover={true}\r\n                animation=\"slide\"\r\n                duration={500}\r\n                fullHeightHover={true}\r\n                IndicatorIcon={<MaximizeIcon />}\r\n                NextIcon={<ArrowForwardIosIcon />}\r\n                PrevIcon={<ArrowBackIosIcon />}\r\n                activeIndicatorIconButtonProps={{\r\n                  style: {\r\n                    color: \"#d33f49\",\r\n                  },\r\n                }}\r\n                navButtonsProps={\r\n                  {\r\n                    style: {\r\n                      backgroundColor: 'rgba(0, 0, 0, 0)',\r\n                      color: '#d33f49',\r\n                      width: '98%',\r\n                      height: '100vh',\r\n                      marginTop: '-50vh',\r\n                      borderRadius: '0',\r\n                      marginLeft: '1px'\r\n                    }\r\n                  }\r\n                }\r\n                indicatorContainerProps={\r\n                  {\r\n                    style:{\r\n                      position: 'absolute',\r\n                      marginTop: '-17px'\r\n                    }\r\n                  }\r\n                }>\r\n                {\r\n                tile.needsEquation ?\r\n                tile.variants[0].variantImage ?\r\n                tile.variants[0].variantImage.map((img, key_id) => (\r\n                  img.type === 'images' ?\r\n                  <img key={key_id} src={img.url} className={classes.img} alt=\"variant\"/>\r\n                  :\r\n                  <span key={key_id} style={{width: '100%'}} dangerouslySetInnerHTML={{__html: img.url}}>\r\n                  </span>\r\n                ))\r\n                :\r\n                <img src={tile.thumbUrl} className={classes.img} alt=\"product\"/>\r\n                :\r\n                tile.sources &&\r\n                tile.sources.images.length > 0 ?\r\n                tile.sources.images.map((img, key_id) =>\r\n                (\r\n                  img.type === 'images' ?\r\n                  <img key={key_id} src={img.url} className={classes.img} alt=\"product\"/>\r\n                    :\r\n                  <span key={key_id} style={{width: '100%'}} dangerouslySetInnerHTML={{__html: img.url}}>\r\n                  </span>\r\n                ))\r\n                :\r\n                <img src={tile.thumbUrl} className={classes.img} alt=\"product\"/>\r\n                }\r\n              </Carousel>\r\n            </CardMedia>\r\n            <CardActionArea style={{ alignContent: \"space-between\" }}>\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  style={{ padding: 0, marginBotom: 12, width: 10 }}\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                >\r\n                  {tile.name}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  style={{ fontSize: 15, padding: 0, marginBottom: 15 }}\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                >\r\n                  {JSON.parse(localStorage.getItem(\"token\")) &&\r\n                  JSON.parse(localStorage.getItem(\"token\")).username\r\n                    ? tile.needsEquation &&\r\n                      tile.prixerEquation &&\r\n                      tile.prixerEquation != 0\r\n                      ? \"PVP: $\" +\r\n                        Math.round(parseFloat(tile.publicEquation)) +\r\n                        \" \\n PVM: $\" +\r\n                        Math.round(parseFloat(tile.prixerEquation))\r\n                      : \"PVP: $\" +\r\n                        tile.publicPrice?.from +\r\n                        \" - \" +\r\n                        tile.publicPrice?.to +\r\n                        \" \\n PVM: $\" +\r\n                        tile.prixerPrice?.from +\r\n                        \" - \" +\r\n                        tile.prixerPrice?.to\r\n                    : tile.needsEquation &&\r\n                      tile.publicEquation &&\r\n                      tile.publicEquation != 0\r\n                    ? \"PVP: $\" + Math.round(parseFloat(tile.publicEquation))\r\n                    : \"PVP: \" +\r\n                      tile.publicPrice?.from +\r\n                      \" - \" +\r\n                      tile.publicPrice?.to}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {tile.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            {tile.hasSpecialVar && (\r\n              <>\r\n                <CardActions style={{ width: \"25%\" }}>\r\n                  {/* <Grid container xs={12} md={12} spacing={2}> */}\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.form}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        display=\"inline\"\r\n                        id=\"width\"\r\n                        label=\"Ancho\"\r\n                        name=\"width\"\r\n                        autoComplete=\"width\"\r\n                        value={width[iProd]}\r\n                        onChange={async (e) => {\r\n                          if (!e.target.value) {\r\n                            let w = width;\r\n                            w[iProd] = e.target.value;\r\n                            setWidth([...w]);\r\n                            let l = await getEquation(\r\n                              tile,\r\n                              iProd,\r\n                              tiles,\r\n                              width,\r\n                              height\r\n                            );\r\n                            setTiles([...l]);\r\n                          } else {\r\n                            if (\r\n                              /^\\d+$/.test(e.target.value) &&\r\n                              e.target.value[0] !== \"0\"\r\n                            ) {\r\n                              if (e.target.value && e.target.value != 0) {\r\n                                let w = width;\r\n                                w[iProd] = e.target.value;\r\n                                setWidth([...w]);\r\n                                let l = await getEquation(\r\n                                  tile,\r\n                                  iProd,\r\n                                  tiles,\r\n                                  width,\r\n                                  height\r\n                                );\r\n                                setTiles([...l]);\r\n                              } else {\r\n                                let w = width;\r\n                                w[iProd] = e.target.value;\r\n                                setWidth([...w]);\r\n                                let l = await getEquation(\r\n                                  tile,\r\n                                  iProd,\r\n                                  tiles,\r\n                                  width,\r\n                                  height\r\n                                );\r\n                                setTiles([...l]);\r\n                              }\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </CardActions>\r\n                <CardActions style={{ width: \"25%\" }}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.form}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        display=\"inline\"\r\n                        id=\"height\"\r\n                        label=\"Alto\"\r\n                        name=\"height\"\r\n                        autoComplete=\"height\"\r\n                        value={height[iProd]}\r\n                        onChange={async (e) => {\r\n                          if (!e.target.value) {\r\n                            let h = height;\r\n                            h[iProd] = e.target.value;\r\n                            setHeight([...h]);\r\n                            let l = await getEquation(\r\n                              tile,\r\n                              iProd,\r\n                              tiles,\r\n                              width,\r\n                              height\r\n                            );\r\n                            setTiles([...l]);\r\n                          } else {\r\n                            if (\r\n                              /^\\d+$/.test(e.target.value) &&\r\n                              e.target.value[0] !== \"0\"\r\n                            ) {\r\n                              if (e.target.value && e.target.value != 0) {\r\n                                let h = height;\r\n                                h[iProd] = e.target.value;\r\n                                setHeight([...h]);\r\n                                let l = await getEquation(\r\n                                  tile,\r\n                                  iProd,\r\n                                  tiles,\r\n                                  width,\r\n                                  height\r\n                                );\r\n                                setTiles([...l]);\r\n                              } else {\r\n                                let h = height;\r\n                                h[iProd] = e.target.value;\r\n                                setHeight([...h]);\r\n                                let l = await getEquation(\r\n                                  tile,\r\n                                  iProd,\r\n                                  tiles,\r\n                                  width,\r\n                                  height\r\n                                );\r\n                                setTiles([...l]);\r\n                              }\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  {/* </Grid> */}\r\n                </CardActions>\r\n              </>\r\n            )}\r\n            {tile.attributes &&\r\n              tile.attributes.map((att, iAtt, attributesArr) => (\r\n                <CardActions key={iAtt} style={{ width: \"50%\" }}>\r\n                  <Grid item xs={12} sm={12} md={12}>\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      className={classes.form}\r\n                      xs={12}\r\n                      sm={12}\r\n                      md={12}\r\n                    >\r\n                      <InputLabel required id=\"att.name\">\r\n                        {att.name}\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"artTypeLabel\"\r\n                        id=\"artType\"\r\n                        value={tile.selection && tile.selection[iAtt]}\r\n                        onChange={async (e) => {\r\n                          const pAtts = await setProductAtts(\r\n                            e.target.value,\r\n                            attributesArr,\r\n                            iProd,\r\n                            iAtt,\r\n                            productsArr,\r\n                            width,\r\n                            height\r\n                          );\r\n                          if (pAtts) {\r\n                            setTiles(\r\n                              pAtts.pAtt ? [...pAtts.pAtt] : [...pAtts.att]\r\n                            );\r\n                          }\r\n                        }}\r\n                        label={att.selection}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em></em>\r\n                        </MenuItem>\r\n                        {att.value &&\r\n                          att.value.map((n, i) => (\r\n                            <MenuItem key={n} value={n}>\r\n                              {n}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </CardActions>\r\n              ))}\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={(e) => {\r\n                  window.open(utils.generateWaProductMessage(tile), \"_blank\");\r\n                }}\r\n              >\r\n                Información <WhatsAppIcon />\r\n              </Button>\r\n            </CardActions>\r\n            <CardActions>\r\n              {tile.variants &&\r\n                tile.variants.map((v) => {\r\n                  if (v.attributes) {\r\n                    const test = v.attributes.reduce((r, a) => {\r\n                      return a.name in tile.attributes === true;\r\n                    }, true);\r\n                  }\r\n                })}\r\n            </CardActions>\r\n          </Card>\r\n        ))\r\n      ) : (\r\n        <h1>Pronto encontrarás los productos ideales para ti.</h1>\r\n      )}\r\n    </GridList>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\dashboard.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerOptions\\prixerOptions.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\userData\\userData.jsx",["455","456","457","458","459","460"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\cropImage.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\easyCropper.jsx",["461","462","463","464","465"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useCallback } from 'react';\r\nimport Cropper from 'react-easy-crop'\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\n\r\nexport default function EasyCropper(props) {\r\n    const  { art, ar, croppedArt, setCroppedArt, index, setCroppedAreaPixels  } = props;\r\n    const classes = useStyles();\r\n    const [aspect, setAspect] = useState(croppedArt[index].aspect);\r\n    const [crop, setCrop] = useState(croppedArt[index].crop);\r\n    const [zoom, setZoom] = useState(croppedArt[index].zoom);\r\n    const croppedArtTemp = croppedArt;\r\n    \r\n    const onCropComplete = useCallback(async (croppedArea, croppedAreaPixels) => {\r\n        croppedArtTemp[index].crop.x = croppedAreaPixels.x;\r\n        croppedArtTemp[index].crop.y = croppedAreaPixels.y;\r\n        setCroppedAreaPixels(croppedAreaPixels);\r\n        setCroppedArt(croppedArtTemp);     \r\n    });\r\n\r\n    return (\r\n        // <div style={{display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n            <Cropper\r\n            image={art}\r\n            crop={crop}\r\n            zoom={zoom}\r\n            aspect={aspect}\r\n            onCropChange={setCrop}\r\n            onCropComplete={onCropComplete}\r\n            onZoomChange={setZoom}\r\n            />\r\n        // </div>\r\n  )\r\n}","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\readConsumers.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\createPaymentMethod.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\createConsumer.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\updatePaymentMethod.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\readPaymentMethods.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\updateConsumer.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\readProducts.jsx",["466","467","468"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\createProduct.jsx",["469","470","471","472","473","474","475","476"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\disableProduct.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\updateProduct.jsx",["477","478","479","480","481","482","483","484","485","486"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"../adminMain/Title\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport clsx from \"clsx\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Variants from \"../adminMain/products/variants\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  form: {\r\n    height: 550,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  loaderImage: {\r\n    width: \"120%\",\r\n    border: \"2px\",\r\n    height: \"30vh\",\r\n    borderStyle: \"groove\",\r\n    borderColor: \"#d33f49\",\r\n    backgroundColor: \"#ededed\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  imageLoad: {\r\n    width: \"100%\",\r\n    height: \"95%\",\r\n    padding: \"15px\",\r\n    marginTop: \"5px\",\r\n  },\r\n  formHead: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonImgLoader: {\r\n    cursor: \"pointer\",\r\n    padding: \"5px\",\r\n  },\r\n  buttonEdit: {\r\n    cursor: \"pointer\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default function UpdateAdmin(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const isDeskTop = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const [productId, setProductId] = useState(props?.product?._id);\r\n  const [images, newImages] = useState({ images: [] });\r\n  const [thumbUrl, setThumbUrl] = useState(props.product?.thumbUrl);\r\n  const [imagesList, setImagesList] = useState(props?.product?.sources.images);\r\n  const [active, setActive] = useState(props?.product?.active);\r\n  const [productName, setProductName] = useState(props?.product?.name);\r\n  const [variants, setVariants ] = useState(props?.product?.variants)\r\n  const [description, setDescription] = useState(props?.product?.description);\r\n  const [category, setCategory] = useState(props?.product?.category);\r\n  const [considerations, setConsiderations] = useState(\r\n    props?.product?.considerations\r\n  );\r\n  const [fromPublicPrice, setFromPublicPrice] = useState(\r\n    props?.product?.publicPrice?.from\r\n  );\r\n  const [toPublicPrice, setToPublicPrice] = useState(\r\n    props?.product?.publicPrice?.to\r\n  );\r\n  const [fromPrixerPrice, setFromPrixerPrice] = useState(\r\n    props?.product?.prixerPrice?.from\r\n  );\r\n  const [toPrixerPrice, setToPrixerPrice] = useState(\r\n    props?.product?.prixerPrice?.to\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [buttonState, setButtonState] = useState(false);\r\n  const [showVariants, setShowVariants] = useState(false);\r\n  const [activeVCrud, setActiveVCrud] = useState(\"read\");\r\n  const [hasSpecialVar, setHasSpecialVar] = useState(\r\n    props?.product?.hasSpecialVar || false\r\n  );\r\n  const [ videoUrl, setVideoUrl ] = useState('')\r\n  const [imageLoader, setLoadImage] = useState({\r\n    loader: [],\r\n    filename: \"Subir imagenes\",\r\n  });\r\n\r\n\r\n  //Error states.\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [loadOpen, setLoadOpen] = useState(false);\r\n  const [loaDOpen, setLoaDOpen] = useState(false);\r\n  const [mustImage, setMustImages] = useState(false);\r\n\r\n  useEffect(() => {\r\n    imagesList?.map((url) => {\r\n      url?.type === 'images' ?\r\n      imageLoader.loader.push(url.url)\r\n      :\r\n      setVideoUrl(url.url)\r\n    });\r\n\r\n    const indexImage = imagesList === [] ? imagesList.indexOf(thumbUrl) : undefined\r\n\r\n    if(indexImage === -1){\r\n      console.log(indexImage)\r\n      imagesList.push(thumbUrl)\r\n      imageLoader.loader.push(thumbUrl)\r\n    }\r\n\r\n    // props.product.sources.images.map((file) => {\r\n    //   file.type == 'video' ?\r\n    //   setVideoUrl(file.url)\r\n    //   :\r\n    //   setVideoUrl('')\r\n    // } )\r\n    return () => {\r\n      localStorage.removeItem(\"product\");\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n        setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      setOpen(false);\r\n  };\r\n\r\n  //Preview de imagen antes de enviar\r\n  const convertToBase64 = (blob) => {\r\n    return new Promise((resolve) => {\r\n      var reader = new FileReader();\r\n      reader.onload = function () {\r\n        resolve(reader.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  };\r\n\r\n  const loadImage = async (e) => {\r\n    e.preventDefault();\r\n    if (imageLoader.loader.length >= 4 || imagesList?.length >= 5) {\r\n      setLoadOpen(true);\r\n      setTimeout(() => {\r\n        setLoadOpen(false);\r\n      }, 3000);\r\n    } else {\r\n      const file = e.target.files[0];\r\n      const resizedString = await convertToBase64(file);\r\n      imageLoader.loader.push(resizedString);\r\n      images.images.push(file);\r\n      setLoadImage({ loader: imageLoader.loader, filename: file.name });\r\n    }\r\n  };\r\n\r\n  const replaceImage = async (e, index) => {\r\n    e.preventDefault();\r\n    const file = e.target.files[0];\r\n    const resizedString = await convertToBase64(file);\r\n    imageLoader.loader[index] = resizedString;\r\n    images.images[index] = file;\r\n    setLoadImage({ loader: imageLoader.loader, filename: file.name });\r\n  };\r\n\r\n  const modifyString = (a, sti) => {\r\n      const url = sti.split(' ')\r\n      const width = sti.replace('560', '326').replace('315', '326');\r\n      const previewMp4 = sti.replace('1350', '510').replace('494', '350');\r\n      setVideoUrl(width)\r\n      // const index = url[3].indexOf()\r\n      // sti.replace(index, '?controls=0\\\"')\r\n    //sti[79]\r\n  }\r\n  console.log(imagesList)\r\n  console.log(thumbUrl)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      images.images.length &&\r\n      imageLoader.loader.length &&\r\n      imagesList.length >= 5\r\n    ) {\r\n      setLoaDOpen(true);\r\n    } else {\r\n      if (images.images.length === 0 && imagesList.length === 0) {\r\n        setMustImages(true);\r\n        setTimeout(() => {\r\n          setMustImages(false);\r\n        }, 3000);\r\n      } else {\r\n        if (\r\n          !active &&\r\n          !productName &&\r\n          !description &&\r\n          !category &&\r\n          !considerations &&\r\n          !fromPublicPrice &&\r\n          !toPublicPrice &&\r\n          !fromPrixerPrice &&\r\n          !toPrixerPrice &&\r\n          !images\r\n        ) {\r\n          setErrorMessage(\"Por favor completa todos los campos requeridos.\");\r\n          setSnackBarError(true);\r\n          e.preventDefault();\r\n        } else {\r\n          setLoading(true);\r\n          setButtonState(true);\r\n          const newFormData = new FormData();\r\n          const data = {\r\n            publicPrice: {\r\n              from: fromPublicPrice,\r\n              to: toPublicPrice,\r\n            },\r\n            prixerPrice: {\r\n              from: fromPrixerPrice,\r\n              to: toPrixerPrice,\r\n            },\r\n            specialVars: [\r\n              {\r\n                name: \"\",\r\n                isSpecialVarVisible: \"\",\r\n              },\r\n            ],\r\n          };\r\n          newFormData.append(\"active\", active);\r\n          newFormData.append(\"name\", productName);\r\n          newFormData.append(\"description\", description);\r\n          newFormData.append(\"category\", category);\r\n          newFormData.append('variants', JSON.stringify(variants))\r\n          newFormData.append(\"considerations\", considerations);\r\n          newFormData.append(\"publicPriceFrom\", data.publicPrice.from);\r\n          newFormData.append(\"publicPriceTo\", data.publicPrice.to);\r\n          newFormData.append(\"prixerPriceFrom\", data.prixerPrice.from);\r\n          newFormData.append(\"prixerPriceTo\", data.prixerPrice.to);\r\n          newFormData.append(\"hasSpecialVar\", hasSpecialVar);\r\n          imagesList.length > 1\r\n            ? imagesList.map((url) => newFormData.append(\"images\", url.url))\r\n            : imagesList.map((url) => newFormData.append(\"images\", url))\r\n          images.images.map((file) =>\r\n            newFormData.append(\"newProductImages\", file)\r\n          );\r\n          newFormData.append('video', videoUrl)\r\n          const base_url =\r\n            process.env.REACT_APP_BACKEND_URL + `/product/update/${productId}`;\r\n          const response = await axios.put(base_url, newFormData);\r\n          if (response.data.success === false) {\r\n            setLoading(false);\r\n            setButtonState(false);\r\n            setErrorMessage(response.data.message);\r\n            setSnackBarError(true);\r\n          } else {\r\n            setErrorMessage(\"Actualización de producto exitosa.\");\r\n            setSnackBarError(true);\r\n            history.push(\"/admin/product/read\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleVariantsClick = () => {\r\n    history.push({ pathname: \"/admin/product/\" + productId + \"/variant/read\" });\r\n    setShowVariants(true);\r\n    props.setProductEdit(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        <Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress />\r\n        </Backdrop>\r\n      }\r\n      {showVariants ? (\r\n        <>\r\n          <Grid container justify=\"left\">\r\n            <Grid item xs={2}>\r\n              <button\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  setShowVariants(false);\r\n                  props.setProductEdit(true);\r\n                }}\r\n              >\r\n                <h2 style={{ color: \"rgba(191, 191, 191, 0.5)\", marginTop: 0 }}>\r\n                  Productos{\" \"}\r\n                </h2>\r\n              </button>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <button\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  setShowVariants(true);\r\n                  setActiveVCrud(\"read\");\r\n                }}\r\n              >\r\n                <h2 style={{ color: \"#d33f49\", marginTop: 0 }}>Variantes</h2>\r\n              </button>\r\n            </Grid>\r\n          </Grid>\r\n          <Variants\r\n            product={props.product}\r\n            activeVCrud={activeVCrud}\r\n            setActiveVCrud={setActiveVCrud}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <Grid container justify=\"left\">\r\n            <Grid item xs={2} style={{ color: \"rgba(191, 191, 191, 0.5)\" }}>\r\n              <Title>Productos </Title>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <a onClick={handleVariantsClick}>\r\n                <h2 style={{ color: \"rgba(191, 191, 191, 0.5)\", marginTop: 0 }}>\r\n                  Variantes\r\n                </h2>\r\n              </a>\r\n            </Grid>\r\n          </Grid>\r\n          <form\r\n            className={classes.form}\r\n            encType=\"multipart/form-data\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid container spacing={2}>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={4}\r\n                  lg={4}\r\n                  xl={4}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <FormControl variant=\"outlined\">\r\n                    <Button variant=\"contained\" component=\"label\">\r\n                      Upload File\r\n                      <input\r\n                        name=\"newProductImages\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        hidden\r\n                        onChange={(a) => {\r\n                          a.preventDefault();\r\n                          loadImage(a);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                    - O -\r\n                    <Button variant=\"contained\" componenet=\"label\" onClick={handleClickOpen}>\r\n                     Upload video\r\n                    </Button>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={8}\r\n                  lg={8}\r\n                  xl={8}\r\n                  style={{ display: \"flex\" }}\r\n                >\r\n                  {imageLoader.loader &&\r\n                    imageLoader.loader.map((img, key_id) => {\r\n                      return (\r\n                        <div\r\n                          style={{\r\n                            width: \"25%\",\r\n                            // maxHeight: \"200px\",\r\n                            marginRight: \"4px\",\r\n                            // display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              // marginBottom: \"-32px\",\r\n                              // display: \"flex\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            <IconButton\r\n                              variant=\"text\"\r\n                              className={classes.buttonImgLoader}\r\n                              style={{\r\n                                color: \"#d33f49\",\r\n                              }}\r\n                              component=\"label\"\r\n                            >\r\n                              <input\r\n                                name=\"productImages\"\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                hidden\r\n                                onChange={(a) => {\r\n                                  const i = imageLoader.loader.indexOf(img);\r\n                                  replaceImage(a, i);\r\n                                  imagesList.splice(key_id, 1);\r\n                                }}\r\n                              />\r\n                              <EditIcon />\r\n                            </IconButton>\r\n\r\n                            <IconButton\r\n                              variant=\"text\"\r\n                              className={classes.buttonImgLoader}\r\n                              style={{ color: \"#d33f49\" }}\r\n                              onClick={(d) => {\r\n                                imageLoader.loader.splice(key_id, 1);\r\n                                images.images.splice(key_id, 1);\r\n                                imagesList.splice(key_id, 1);\r\n                                setLoadImage({\r\n                                  loader: imageLoader.loader,\r\n                                  filename: \"Subir Imagenes\",\r\n                                });\r\n                                newImages({ images: images.images });\r\n                              }}\r\n                            >\r\n                              <HighlightOffOutlinedIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                          <img\r\n                            style={{\r\n                              width: \"100%\",\r\n                              // height: \"200px\",\r\n                              objectFit: \"contain\",\r\n                            }}\r\n                            src={img}\r\n                            alt=\"+\"\r\n                          />\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container xs={isDesktop ? 6 : 12}>\r\n                    <Grid item xs={6}>\r\n                      <Checkbox\r\n                        checked={active}\r\n                        color=\"primary\"\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        onChange={() => {\r\n                          active ? setActive(false) : setActive(true);\r\n                        }}\r\n                      />{\" \"}\r\n                      Habilitado / Visible\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Checkbox\r\n                        checked={hasSpecialVar}\r\n                        color=\"primary\"\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        onChange={() => {\r\n                          hasSpecialVar\r\n                            ? setHasSpecialVar(false)\r\n                            : setHasSpecialVar(true);\r\n                        }}\r\n                      />{\" \"}\r\n                      ¿Tiene variables especiales?\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      display=\"inline\"\r\n                      id=\"productName\"\r\n                      label=\"Nombre\"\r\n                      name=\"productName\"\r\n                      autoComplete=\"productName\"\r\n                      value={productName}\r\n                      onChange={(e) => {\r\n                        setProductName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      display=\"inline\"\r\n                      fullWidth\r\n                      id=\"category\"\r\n                      label=\"Categoría\"\r\n                      name=\"category\"\r\n                      autoComplete=\"category\"\r\n                      value={category}\r\n                      onChange={(e) => {\r\n                        setCategory(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      multiline\r\n                      fullWidth\r\n                      rows={2}\r\n                      id=\"description\"\r\n                      label=\"Descripción\"\r\n                      name=\"description\"\r\n                      autoComplete=\"description\"\r\n                      value={description}\r\n                      onChange={(e) => {\r\n                        setDescription(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      multiline\r\n                      rows={2}\r\n                      id=\"considerations\"\r\n                      label=\"Consideraciones\"\r\n                      name=\"considerations\"\r\n                      autoComplete=\"considerations\"\r\n                      value={considerations}\r\n                      onChange={(e) => {\r\n                        setConsiderations(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{ marginTop: 20 }}>\r\n                <Title>PVP</Title>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4} md={5}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"fromPublicPrice\"\r\n                      label=\"Desde\"\r\n                      name=\"fromPublicPrice\"\r\n                      autoComplete=\"fromPublicPrice\"\r\n                      value={fromPublicPrice ? fromPublicPrice : \"$\"}\r\n                      onChange={(e) => {\r\n                        setFromPublicPrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4} md={5}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"toPublicPrice\"\r\n                      label=\"Hasta\"\r\n                      name=\"toPublicPrice\"\r\n                      autoComplete=\"toPublicPrice\"\r\n                      value={toPublicPrice ? toPublicPrice : \"$\"}\r\n                      onChange={(e) => {\r\n                        setToPublicPrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container style={{ marginTop: 20 }}>\r\n                <Title>PVM</Title>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4} md={5}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"fromPrixerPrice\"\r\n                      label=\"Desde\"\r\n                      name=\"fromPrixerPrice\"\r\n                      autoComplete=\"fromPrixerPrice\"\r\n                      value={fromPrixerPrice ? fromPrixerPrice : \"$\"}\r\n                      onChange={(e) => {\r\n                        setFromPrixerPrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4} md={5}>\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    xs={12}\r\n                    fullWidth={true}\r\n                  >\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"toPrixerPrice\"\r\n                      label=\"Hasta\"\r\n                      name=\"toPrixerPrice\"\r\n                      autoComplete=\"toPrixerPrice\"\r\n                      value={toPrixerPrice ? toPrixerPrice : \"$\"}\r\n                      onChange={(e) => {\r\n                        setToPrixerPrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={buttonState}\r\n                style={{ marginTop: 20 }}\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>Youtube Url</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Copia y pega la url que quieres mostrar en el carrusel de imagenes\r\n        </DialogContentText>\r\n        <div id='ll'>\r\n        </div>\r\n        <TextField\r\n        onChange={(a)=>{\r\n          modifyString(a, a.target.value)\r\n        }}\r\n        value={videoUrl}\r\n          autoFocus\r\n          label=\"Url\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Aceptar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n      <Snackbar\r\n        open={snackBarError}\r\n        autoHideDuration={1000}\r\n        message={errorMessage}\r\n        className={classes.snackbar}\r\n      />\r\n      <Snackbar\r\n        open={loadOpen}\r\n        autoHideDuration={1000}\r\n        message={\"No puedes colocar mas de 4 fotos\"}\r\n        className={classes.snackbar}\r\n      />\r\n      <Snackbar\r\n        open={loaDOpen}\r\n        autoHideDuration={1000}\r\n        message={\"No puedes enviar mas de 4 fotos\"}\r\n        className={classes.snackbar}\r\n      />\r\n      <Snackbar\r\n        open={mustImage}\r\n        autoHideDuration={1000}\r\n        message={\"No puedes actualizar un producto sin foto. Agrega 1 o mas\"}\r\n        className={classes.snackbar}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\disableAdmin.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\updateAdmin.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\createAdmin.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\orders.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\chart.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\readAdmins.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\deposits.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\variants.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\readVariants.jsx",["487","488","489","490","491","492","493","494","495","496","497","498","499"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"../../adminMain/Title\";\r\nimport axios from \"axios\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ReadVariants(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [rows, setRows] = useState();\r\n  const [deleteOpen, setDeleteOpen] = useState(false);\r\n  const base_url = process.env.REACT_APP_BACKEND_URL + \"/product/read\";\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(base_url, props.product)\r\n      .then((response) => {\r\n        response.data.products[0].variants &&\r\n          setRows(response.data.products[0].variants);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleActive = (variant, action) => {\r\n    props.setVariant(variant);\r\n    action == \"create\" &&\r\n      history.push(\r\n        \"/admin/product\" + \"/\" + props.product._id + \"/variant/\" + action\r\n      );\r\n    action == \"read\" &&\r\n      history.push(\r\n        \"/admin/product\" + \"/\" + props.product._id + \"/variant/\" + action\r\n      );\r\n    action == \"update\" &&\r\n      history.push(\r\n        \"/admin/product\" +\r\n          \"/\" +\r\n          props.product._id +\r\n          \"/variant/\" +\r\n          variant._id +\r\n          \"/\" +\r\n          action\r\n      );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table size=\"small\" style={{overflow: 'auto'}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\"></TableCell>\r\n            <TableCell align=\"center\">Imagen</TableCell>\r\n            <TableCell align=\"center\">Nombre</TableCell>\r\n            <TableCell align=\"center\">Activo</TableCell>\r\n            <TableCell align=\"center\">Descripción</TableCell>\r\n            <TableCell align=\"center\">PVP desde-hasta</TableCell>\r\n            <TableCell align=\"center\">PVM desde-hasta</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n              {\r\n                rows &&\r\n                rows.map((row) => (\r\n                  <TableRow key={row._id}>\r\n                    <TableCell align=\"center\">\r\n                    <Fab\r\n                      color=\"default\"\r\n                      style={{ width: 35, height: 35 }}\r\n                      aria-label=\"edit\"\r\n                      onClick={(e) => {\r\n                        handleActive(row, \"update\");\r\n                      }}\r\n                    >\r\n                      <EditIcon />\r\n                    </Fab>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {\r\n                    row.variantImage ?\r\n                    <img\r\n                      src={row.variantImage[0]?.url}\r\n                      style={{ width: 50, height: \"auto\" }}\r\n                    />\r\n                    :\r\n                    <img\r\n                      src={row.thumbUrl}\r\n                      style={{ width: 50, height: \"auto\" }}\r\n                    />\r\n                  }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Checkbox\r\n                      disabled\r\n                      checked={row.active}\r\n                      color=\"primary\"\r\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.description}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.publicPrice.from}-{row.publicPrice.to}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.prixerPrice.from}-{row.prixerPrice.to}\r\n                  </TableCell>\r\n                  </TableRow>\r\n              ))\r\n              }\r\n      </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\createVariant.jsx",["500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from '../../adminMain/Title';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function CreateVariant(props) {\r\n    const classes = useStyles();\r\n    const [ active, setActive ] = useState(props.variant && props.variant.active || false);\r\n    const [ attributes, setAttributes ] = useState(props.variant && props.variant.attributes || [{ name:'', value:''}]);\r\n    const [ buttonAttState, setButtonAttState] = useState();\r\n    const [ variantName, setVariantName ] = useState(props.variant && props.variant.name || '');\r\n    const [ description, setDescription ] = useState(props.variant && props.variant.description || '');\r\n    const [ category, setCategory ] = useState(props.variant && props.variant.category || '');\r\n    const [ considerations, setConsiderations ] = useState(props.variant && props.variant.considerations || '');\r\n    const [publicPriceEq, setPublicPriceEq] = useState(props.variant && props.variant.publicPrice.equation || '');\r\n    const [fromPublicPrice, setFromPublicPrice] = useState(props.variant && props.variant.publicPrice.from || '');\r\n    const [ toPublicPrice, setToPublicPrice ] = useState(props.variant && props.variant.publicPrice.to || '');\r\n    const [ prixerPriceEq, setPrixerPriceEq ] = useState(props.variant && props.variant.prixerPrice.equation || '');\r\n    const [ fromPrixerPrice, setFromPrixerPrice ] = useState(props.variant && props.variant.prixerPrice.from || '');\r\n    const [ toPrixerPrice, setToPrixerPrice ] = useState(props.variant && props.variant.prixerPrice.to || '');\r\n    const [loading, setLoading] = useState(false);\r\n    const [buttonState, setButtonState] = useState(false);\r\n    const history = useHistory();\r\n    const [ image , setImage ] = useState(props.variant && props.variant.variantImage || []);\r\n    const [ newFile, setNewFile ] =  useState();\r\n    const [ videoUrl, setVideoUrl ] = useState('')\r\n    const [ videoPreview, setVideoPreview ] = useState('')\r\n    const [ loadeImage, setLoadImage ] = useState({ loader: [] }) //props.variant && props.variant.variantImage ||\r\n    //Error states.\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [open, setOpen] = useState(false);\r\n      const [loadOpen, setLoadOpen] = useState(false);\r\n    const [snackBarError, setSnackBarError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState();\r\n    const [emailError, setEmailError] = useState();\r\n    const [mustImage, setMustImages] = useState(false);\r\n\r\n    useEffect(() => {\r\n      image?.map((url) => {\r\n        url.type === 'images' ?\r\n        loadeImage.loader.push(url.url)\r\n        :\r\n        setVideoUrl(url.url)\r\n    })\r\n\r\n  }, [])\r\n\r\n    const handleClickOpen = () => {\r\n          setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const convertToBase64 = (blob) => {\r\n      return new Promise((resolve) => {\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n          resolve(reader.result);\r\n        };\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    };\r\n\r\n    const replaceImage = async (e, index) => {\r\n      e.preventDefault();\r\n      const file = e.target.files[0];\r\n      const resizedString = await convertToBase64(file);\r\n      loadeImage.loader[index] = resizedString;\r\n      image[index] = file;\r\n      setImage(image)\r\n      setLoadImage({loader: loadeImage.loader})\r\n    };\r\n\r\n    const loadImage = async (e) => {\r\n      e.preventDefault();\r\n      if (loadeImage.loader.length >= 4 || image?.length >= 5) {\r\n        setLoadOpen(true);\r\n        setTimeout(() => {\r\n          setLoadOpen(false);\r\n        }, 3000);\r\n      } else {\r\n        const file = e.target.files[0];\r\n        const resizedString = await convertToBase64(file);\r\n        loadeImage.loader.push(resizedString);\r\n        image.push(file);\r\n        setImage(image)\r\n        setLoadImage({loader: loadeImage.loader})\r\n      }\r\n    };\r\n\r\n    const modifyString = (a, sti) => {\r\n        const url = sti.split(' ')\r\n        const width = sti.replace('560', '326').replace('315', '326');\r\n        const previewMp4 = sti.replace('1350', '510').replace('494', '350');\r\n        setVideoUrl(width)\r\n        setVideoPreview(previewMp4)\r\n        // const index = url[3].indexOf()\r\n        // sti.replace(index, '?controls=0\\\"')\r\n      //sti[79]\r\n    }\r\n\r\n    const insertVariants = (productData, variants)=> {\r\n        let updatedVariants = productData;\r\n        updatedVariants.variants = productData.variants.filter((v)=>{ if(v._id != props.variant._id) return v});\r\n        variants._id = props.variant._id\r\n        updatedVariants.variants.unshift(variants);\r\n\r\n        return updatedVariants;\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (image.length === 0) {\r\n        setMustImages(true);\r\n        setTimeout(() => {\r\n          setMustImages(false);\r\n        }, 3000);\r\n      }else{\r\n      if(!active &&\r\n        !variantName &&\r\n        !description &&\r\n        !category &&\r\n        !considerations &&\r\n        !publicPriceEq &&\r\n        !fromPublicPrice &&\r\n        !toPublicPrice &&\r\n        !prixerPriceEq &&\r\n        !fromPrixerPrice &&\r\n        !toPrixerPrice &&\r\n        !image){\r\n        setErrorMessage('Por favor completa todos los campos requeridos.');\r\n        setSnackBarError(true);\r\n        e.preventDefault();\r\n      } else {\r\n        setLoading(true);\r\n        setButtonState(true);\r\n\r\n        const productData = props.product;\r\n        const formData = new FormData();\r\n        const variants = {\r\n            '_id': props.variant && props.variant._id || nanoid(),\r\n            'image': image,\r\n            'active' : active,\r\n            'name' : variantName,\r\n            'description' : description,\r\n            'category' : category,\r\n            'considerations' : considerations,\r\n            publicPrice: {\r\n                'from': fromPublicPrice,\r\n                'to': toPublicPrice,\r\n                'equation': publicPriceEq\r\n            },\r\n            prixerPrice: {\r\n                'from': fromPrixerPrice,\r\n                'to': toPrixerPrice,\r\n                'equation': prixerPriceEq\r\n            }\r\n        }\r\n\r\n        variants.attributes ?\r\n        variants.attributes.push(...attributes)\r\n        : variants.attributes = attributes;\r\n        let updatedWithVariants = {}\r\n\r\n        if(props.variant) {\r\n            updatedWithVariants = insertVariants(productData, variants);\r\n        } else {\r\n            productData.variants.unshift(variants);\r\n            updatedWithVariants = productData;\r\n        }\r\n\r\n        formData.append('productActive', updatedWithVariants.active)\r\n        formData.append('productCategory', updatedWithVariants.category)\r\n        formData.append('productConsiderations', updatedWithVariants.considerations)\r\n        formData.append('productDescription', updatedWithVariants.description)\r\n        formData.append('productHasSpecialVar', updatedWithVariants.hasSpecialVar)\r\n        formData.append('productName', updatedWithVariants.name)\r\n        variants.attributes.map(obj => {\r\n          if(obj.name){\r\n          formData.append('attributesName', obj.name)\r\n          }\r\n          if(obj.value){\r\n          formData.append('attributesValue', obj.value)\r\n          }\r\n        })\r\n        updatedWithVariants.sources.images.map(img => formData.append('productImages', img.url))\r\n        formData.append('variants', JSON.stringify(updatedWithVariants.variants))\r\n        formData.append('productPublicPriceFrom', updatedWithVariants.publicPrice.from)\r\n        formData.append('productPublicPriceTo', updatedWithVariants.publicPrice.to)\r\n        formData.append('productPrixerPriceFrom', updatedWithVariants.prixerPrice.from)\r\n        formData.append('productPrixerPriceTo', updatedWithVariants.prixerPrice.to)\r\n        formData.append('variant_id', variants._id)\r\n        formData.append('video', videoUrl)\r\n        image.map(file => {\r\n          console.log(file)\r\n          if(file.url === undefined){\r\n              formData.append('variantImage', file)\r\n          }\r\n          if(typeof file.url === 'string'){\r\n            formData.append('images', file.url)\r\n          }\r\n        })\r\n        formData.append('variantActive', variants.active)\r\n        formData.append('variantName', variants.name)\r\n        formData.append('variantDescription', variants.description)\r\n        formData.append('variantCategory', variants.category)\r\n        formData.append('variantConsiderations', variants.considerations)\r\n        formData.append('variantPublicPriceFrom', variants.publicPrice.from)\r\n        formData.append('variantPublicPriceTo', variants.publicPrice.to)\r\n        formData.append('variantPublicPriceEq', variants.publicPrice.equation)\r\n        formData.append('variantPrixerPriceFrom', variants.prixerPrice.from)\r\n        formData.append('variantPrixerPriceTo', variants.prixerPrice.to)\r\n        formData.append('variantPrixerPriceEq', variants.prixerPrice.equation)\r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/update/\" + props.product._id;\r\n        // await axios.put(base_url, formData)\r\n        const response = await axios.put(base_url, formData)\r\n\r\n        if(response.data.success === false){\r\n          setLoading(false);\r\n          setButtonState(false);\r\n          setErrorMessage(response.data.message);\r\n          setSnackBarError(true);\r\n          props.setVariant('');\r\n        } else {\r\n          setErrorMessage('Actualización de producto exitoso.');\r\n          setSnackBarError(true);\r\n          setActive('');\r\n          setImage('');\r\n          setVariantName('');\r\n          setDescription('');\r\n          setCategory('');\r\n          setConsiderations('');\r\n          setPublicPriceEq('');\r\n          setFromPublicPrice('');\r\n          setToPublicPrice('');\r\n          setPrixerPriceEq('');\r\n          setFromPrixerPrice('');\r\n          setToPrixerPrice('');\r\n          props.setVariant('');\r\n          setLoading(false);\r\n          history.push({pathname:\"/admin/product/read\"});\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n    <Backdrop className={classes.backdrop} open={loading}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n    }\r\n      <Title>Variantes</Title>\r\n        <form noValidate encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <Grid container spacing={2}>\r\n                <Grid container spacing={2}>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={4}\r\n                    lg={4}\r\n                    xl={4}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <FormControl variant=\"outlined\">\r\n                      <Button variant=\"contained\" component=\"label\">\r\n                        Upload File\r\n                        <input\r\n                          name=\"productImages\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          hidden\r\n                          onChange={(a) => {\r\n                            loadImage(a);\r\n                          }}\r\n                        />\r\n                      </Button>\r\n                          - O -\r\n                      <Button variant=\"contained\" componenet=\"label\" onClick={handleClickOpen}>\r\n                       Upload video\r\n                      </Button>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={8}\r\n                    lg={8}\r\n                    xl={8}\r\n                    style={{ display: \"flex\" }}\r\n                  >\r\n                    {loadeImage.loader &&\r\n                      loadeImage.loader.map((img, key_id) => {\r\n                        return (\r\n                          <div\r\n                            style={{\r\n                              width: \"25%\",\r\n                              // maxHeight: \"200px\",\r\n                              marginRight: \"4px\",\r\n                            }}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                // marginBottom: \"-32px\",\r\n                                textAlign: \"right\",\r\n                              }}\r\n                            >\r\n                              <IconButton\r\n                                variant=\"text\"\r\n                                className={classes.buttonImgLoader}\r\n                                style={{ color: \"#d33f49\" }}\r\n                                component=\"label\"\r\n                              >\r\n                                <input\r\n                                  name=\"productImages\"\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  hidden\r\n                                  onChange={(a) => {\r\n                                    const i = loadeImage.loader.indexOf(img);\r\n                                    replaceImage(a, i);\r\n                                  }}\r\n                                />\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                              <IconButton\r\n                                variant=\"text\"\r\n                                className={classes.buttonImgLoader}\r\n                                style={{ color: \"#d33f49\" }}\r\n                                onClick={(d) => {\r\n                                  loadeImage.loader.splice(key_id, 1);\r\n                                  image.splice(key_id, 1);\r\n                                    setImage(image)\r\n                                    setLoadImage({loader: loadeImage.loader})\r\n                                }}\r\n                              >\r\n                                <HighlightOffOutlinedIcon />\r\n                              </IconButton>\r\n                            </div>\r\n\r\n                            <img\r\n                              style={{\r\n                                width: \"100%\",\r\n                                // height: \"200px\",\r\n                                objectFit: \"contain\",\r\n                              }}\r\n                              src={img}\r\n                              alt=\"+\"\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </Grid>\r\n                        <Checkbox\r\n                            checked={active}\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            onChange={()=>{active?setActive(false):setActive(true)}}\r\n                        /> Habilitado / Visible\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            display=\"inline\"\r\n                            id=\"variantName\"\r\n                            label=\"Nombre\"\r\n                            name=\"variantName\"\r\n                            autoComplete=\"variantName\"\r\n                            value={variantName}\r\n                            onChange={(e) => {setVariantName(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            fullWidth\r\n                            rows={2}\r\n                            id=\"description\"\r\n                            label=\"Descripción\"\r\n                            name=\"description\"\r\n                            autoComplete=\"description\"\r\n                            value={description}\r\n                            onChange={(e) => {setDescription(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            multiline\r\n                            rows={2}\r\n                            id=\"considerations\"\r\n                            label=\"Consideraciones\"\r\n                            name=\"considerations\"\r\n                            autoComplete=\"considerations\"\r\n                            value={considerations}\r\n                            onChange={(e) => {setConsiderations(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{marginTop: 20}}>\r\n                    <h3>Precios Público</h3>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"publicPriceEquation\"\r\n                            label=\"Ecuación\"\r\n                            name=\"publicPriceEquation\"\r\n                            autoComplete=\"publicPriceEquation\"\r\n                            value={publicPriceEq}\r\n                            onChange={(e) => {setPublicPriceEq(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid container xs={12} md={12} spacing={2} style={{margin:0}}>\r\n                        <Grid item xs={6} md={6}>\r\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"fromPublicPrice\"\r\n                                label=\"Desde\"\r\n                                name=\"fromPublicPrice\"\r\n                                autoComplete=\"fromPublicPrice\"\r\n                                value={fromPublicPrice}\r\n                                onChange={(e) => {setFromPublicPrice(e.target.value);}}\r\n                            />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"toPublicPrice\"\r\n                                label=\"Hasta\"\r\n                                name=\"toPublicPrice\"\r\n                                autoComplete=\"toPublicPrice\"\r\n                                value={toPublicPrice}\r\n                                onChange={(e) => {setToPublicPrice(e.target.value);}}\r\n                            />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{marginTop: 20}}>\r\n                    <h3>Precios Prixers</h3>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={4} md={4}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"prixerPriceEq\"\r\n                            label=\"Ecuación\"\r\n                            name=\"prixerPriceEq\"\r\n                            autoComplete=\"prixerPriceEq\"\r\n                            value={prixerPriceEq}\r\n                            onChange={(e) => {setPrixerPriceEq(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4} md={5}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"fromPrixerPrice\"\r\n                            label=\"Desde\"\r\n                            name=\"fromPrixerPrice\"\r\n                            autoComplete=\"fromPrixerPrice\"\r\n                            value={fromPrixerPrice}\r\n                            onChange={(e) => {setFromPrixerPrice(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4} md={5}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"toPrixerPrice\"\r\n                            label=\"Hasta\"\r\n                            name=\"toPrixerPrice\"\r\n                            autoComplete=\"toPrixerPrice\"\r\n                            value={toPrixerPrice}\r\n                            onChange={(e) => {setToPrixerPrice(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container xs={12} spacing={2}>\r\n                    <Grid container style={{marginTop: 20}}>\r\n                        <h3>Atributos</h3>\r\n                    </Grid>\r\n                        {\r\n                        attributes &&\r\n                            attributes.map((att, i)=>(\r\n                            <Grid container spacing={2} xs={12} style={{marginBottom: 10}}>\r\n                                <Grid item xs={12} md={5}>\r\n                                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"attribute\"\r\n                                        label=\"Nombre\"\r\n                                        name=\"attribute\"\r\n                                        autoComplete=\"attribute\"\r\n                                        value={att.name}\r\n                                        onChange={(e) => {\r\n                                            setAttributes(attributes.slice(0,i).concat({'name': e.target.value, 'value': att.value}).concat(attributes.slice(i+1,)));\r\n                                        }}\r\n                                    />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={5}>\r\n                                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"attributeValue\"\r\n                                        label=\"Valor\"\r\n                                        name=\"attributeValue\"\r\n                                        autoComplete=\"attributeValue\"\r\n                                        value={att.value}\r\n                                        onChange={(e) => {\r\n                                            setAttributes(attributes.slice(0,i).concat({'name': att.name, 'value': e.target.value}).concat(attributes.slice(i+1,)));\r\n                                        }}\r\n                                    />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={()=>{ setAttributes(attributes.slice(0, i).concat(attributes.slice(i+1,)))}} disabled={buttonState} style={{ marginTop: 20}}>\r\n                                    -\r\n                                </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ))\r\n                        }\r\n                    <Grid item xs={12} align=\"center\">\r\n                    <Button variant=\"contained\" color=\"default\" onClick={()=>{setAttributes(attributes.concat({ name:'', value:'' }))}} disabled={buttonState} style={{ marginTop: 20}}>\r\n                        +\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={buttonState} style={{ marginTop: 20}}>\r\n                    {props.variant && \"Actualizar\" || \"Crear\"}\r\n                </Button>\r\n            </Grid>\r\n        </form>\r\n        <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Youtube Url</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Copia y pega la url que quieres mostrar en el carrusel de imagenes\r\n          </DialogContentText>\r\n          <div id='ll'>\r\n          </div>\r\n          <TextField\r\n          onChange={(a)=>{\r\n            const div = document.getElementById('ll');\r\n            modifyString(a, a.target.value)\r\n            div.innerHTML = videoPreview;\r\n          }}\r\n          value={videoUrl}\r\n            autoFocus\r\n            label=\"Url\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Aceptar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={1000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n        <Snackbar\r\n          open={loadOpen}\r\n          autoHideDuration={1000}\r\n          message={\"No puedes colocar mas de 4 fotos\"}\r\n          className={classes.snackbar}\r\n        />\r\n        <Snackbar\r\n          open={mustImage}\r\n          autoHideDuration={1000}\r\n          message={\"No puedes actualizar un variant sin foto. Agrega 1 o mas\"}\r\n          className={classes.snackbar}\r\n        />\r\n    </React.Fragment>\r\n  )\r\n}\r\n",{"ruleId":"550","replacedBy":"551"},{"ruleId":"552","replacedBy":"553"},{"ruleId":"554","severity":1,"message":"555","line":31,"column":10,"nodeType":"556","messageId":"557","endLine":31,"endColumn":26},{"ruleId":"554","severity":1,"message":"558","line":32,"column":8,"nodeType":"556","messageId":"557","endLine":32,"endColumn":16},{"ruleId":"554","severity":1,"message":"559","line":33,"column":8,"nodeType":"556","messageId":"557","endLine":33,"endColumn":13},{"ruleId":"554","severity":1,"message":"560","line":96,"column":10,"nodeType":"556","messageId":"557","endLine":96,"endColumn":21},{"ruleId":"554","severity":1,"message":"561","line":100,"column":17,"nodeType":"556","messageId":"557","endLine":100,"endColumn":25},{"ruleId":"554","severity":1,"message":"562","line":102,"column":9,"nodeType":"556","messageId":"557","endLine":102,"endColumn":18},{"ruleId":"554","severity":1,"message":"563","line":104,"column":9,"nodeType":"556","messageId":"557","endLine":104,"endColumn":23},{"ruleId":"554","severity":1,"message":"564","line":113,"column":9,"nodeType":"556","messageId":"557","endLine":113,"endColumn":13},{"ruleId":"565","severity":1,"message":"566","line":179,"column":3,"nodeType":"556","endLine":179,"endColumn":12,"suggestions":"567"},{"ruleId":"554","severity":1,"message":"568","line":2,"column":8,"nodeType":"556","messageId":"557","endLine":2,"endColumn":14},{"ruleId":"554","severity":1,"message":"569","line":13,"column":8,"nodeType":"556","messageId":"557","endLine":13,"endColumn":15},{"ruleId":"554","severity":1,"message":"570","line":27,"column":10,"nodeType":"556","messageId":"557","endLine":27,"endColumn":22},{"ruleId":"554","severity":1,"message":"571","line":27,"column":24,"nodeType":"556","messageId":"557","endLine":27,"endColumn":38},{"ruleId":"554","severity":1,"message":"572","line":27,"column":40,"nodeType":"556","messageId":"557","endLine":27,"endColumn":52},{"ruleId":"554","severity":1,"message":"573","line":148,"column":10,"nodeType":"556","messageId":"557","endLine":148,"endColumn":16},{"ruleId":"554","severity":1,"message":"574","line":148,"column":18,"nodeType":"556","messageId":"557","endLine":148,"endColumn":27},{"ruleId":"554","severity":1,"message":"575","line":149,"column":10,"nodeType":"556","messageId":"557","endLine":149,"endColumn":19},{"ruleId":"554","severity":1,"message":"576","line":149,"column":21,"nodeType":"556","messageId":"557","endLine":149,"endColumn":33},{"ruleId":"554","severity":1,"message":"560","line":150,"column":10,"nodeType":"556","messageId":"557","endLine":150,"endColumn":21},{"ruleId":"554","severity":1,"message":"577","line":156,"column":10,"nodeType":"556","messageId":"557","endLine":156,"endColumn":16},{"ruleId":"554","severity":1,"message":"578","line":156,"column":18,"nodeType":"556","messageId":"557","endLine":156,"endColumn":27},{"ruleId":"554","severity":1,"message":"562","line":157,"column":9,"nodeType":"556","messageId":"557","endLine":157,"endColumn":18},{"ruleId":"579","severity":1,"message":"580","line":486,"column":13,"nodeType":"581","endLine":494,"endColumn":14},{"ruleId":"554","severity":1,"message":"582","line":8,"column":8,"nodeType":"556","messageId":"557","endLine":8,"endColumn":17},{"ruleId":"554","severity":1,"message":"583","line":17,"column":8,"nodeType":"556","messageId":"557","endLine":17,"endColumn":20},{"ruleId":"554","severity":1,"message":"584","line":68,"column":10,"nodeType":"556","messageId":"557","endLine":68,"endColumn":17},{"ruleId":"554","severity":1,"message":"585","line":75,"column":10,"nodeType":"556","messageId":"557","endLine":75,"endColumn":16},{"ruleId":"554","severity":1,"message":"586","line":75,"column":18,"nodeType":"556","messageId":"557","endLine":75,"endColumn":27},{"ruleId":"554","severity":1,"message":"587","line":131,"column":9,"nodeType":"556","messageId":"557","endLine":131,"endColumn":26},{"ruleId":"554","severity":1,"message":"588","line":252,"column":9,"nodeType":"556","messageId":"557","endLine":252,"endColumn":12},{"ruleId":"554","severity":1,"message":"588","line":267,"column":11,"nodeType":"556","messageId":"557","endLine":267,"endColumn":14},{"ruleId":"565","severity":1,"message":"589","line":289,"column":6,"nodeType":"590","endLine":289,"endColumn":8,"suggestions":"591"},{"ruleId":"592","severity":1,"message":"593","line":308,"column":42,"nodeType":"594","messageId":"595","endLine":308,"endColumn":44},{"ruleId":"565","severity":1,"message":"596","line":324,"column":6,"nodeType":"590","endLine":324,"endColumn":20,"suggestions":"597"},{"ruleId":"592","severity":1,"message":"593","line":488,"column":74,"nodeType":"594","messageId":"595","endLine":488,"endColumn":76},{"ruleId":"592","severity":1,"message":"593","line":502,"column":74,"nodeType":"594","messageId":"595","endLine":502,"endColumn":76},{"ruleId":"554","severity":1,"message":"598","line":1,"column":27,"nodeType":"556","messageId":"557","endLine":1,"endColumn":35},{"ruleId":"599","severity":1,"message":"600","line":250,"column":15,"nodeType":"601","messageId":"595","endLine":250,"endColumn":25},{"ruleId":"554","severity":1,"message":"602","line":22,"column":8,"nodeType":"556","messageId":"557","endLine":22,"endColumn":18},{"ruleId":"554","severity":1,"message":"603","line":23,"column":8,"nodeType":"556","messageId":"557","endLine":23,"endColumn":21},{"ruleId":"554","severity":1,"message":"604","line":24,"column":8,"nodeType":"556","messageId":"557","endLine":24,"endColumn":18},{"ruleId":"554","severity":1,"message":"605","line":25,"column":8,"nodeType":"556","messageId":"557","endLine":25,"endColumn":22},{"ruleId":"554","severity":1,"message":"606","line":26,"column":8,"nodeType":"556","messageId":"557","endLine":26,"endColumn":19},{"ruleId":"554","severity":1,"message":"607","line":27,"column":8,"nodeType":"556","messageId":"557","endLine":27,"endColumn":18},{"ruleId":"554","severity":1,"message":"608","line":28,"column":8,"nodeType":"556","messageId":"557","endLine":28,"endColumn":21},{"ruleId":"554","severity":1,"message":"609","line":29,"column":8,"nodeType":"556","messageId":"557","endLine":29,"endColumn":12},{"ruleId":"565","severity":1,"message":"610","line":85,"column":3,"nodeType":"556","endLine":85,"endColumn":12,"suggestions":"611"},{"ruleId":"554","severity":1,"message":"612","line":70,"column":9,"nodeType":"556","messageId":"557","endLine":70,"endColumn":17},{"ruleId":"565","severity":1,"message":"613","line":113,"column":6,"nodeType":"590","endLine":113,"endColumn":19,"suggestions":"614"},{"ruleId":"554","severity":1,"message":"615","line":47,"column":7,"nodeType":"556","messageId":"557","endLine":47,"endColumn":16},{"ruleId":"554","severity":1,"message":"588","line":64,"column":11,"nodeType":"556","messageId":"557","endLine":64,"endColumn":14},{"ruleId":"554","severity":1,"message":"574","line":97,"column":18,"nodeType":"556","messageId":"557","endLine":97,"endColumn":27},{"ruleId":"554","severity":1,"message":"616","line":103,"column":10,"nodeType":"556","messageId":"557","endLine":103,"endColumn":18},{"ruleId":"554","severity":1,"message":"617","line":107,"column":10,"nodeType":"556","messageId":"557","endLine":107,"endColumn":21},{"ruleId":"554","severity":1,"message":"588","line":123,"column":11,"nodeType":"556","messageId":"557","endLine":123,"endColumn":14},{"ruleId":"554","severity":1,"message":"618","line":154,"column":13,"nodeType":"556","messageId":"557","endLine":154,"endColumn":21},{"ruleId":"554","severity":1,"message":"588","line":200,"column":9,"nodeType":"556","messageId":"557","endLine":200,"endColumn":12},{"ruleId":"554","severity":1,"message":"618","line":214,"column":11,"nodeType":"556","messageId":"557","endLine":214,"endColumn":19},{"ruleId":"554","severity":1,"message":"618","line":250,"column":11,"nodeType":"556","messageId":"557","endLine":250,"endColumn":19},{"ruleId":"554","severity":1,"message":"619","line":1,"column":28,"nodeType":"556","messageId":"557","endLine":1,"endColumn":39},{"ruleId":"554","severity":1,"message":"620","line":19,"column":8,"nodeType":"556","messageId":"557","endLine":19,"endColumn":15},{"ruleId":"554","severity":1,"message":"621","line":187,"column":10,"nodeType":"556","messageId":"557","endLine":187,"endColumn":22},{"ruleId":"554","severity":1,"message":"622","line":187,"column":24,"nodeType":"556","messageId":"557","endLine":187,"endColumn":39},{"ruleId":"554","severity":1,"message":"623","line":192,"column":20,"nodeType":"556","messageId":"557","endLine":192,"endColumn":31},{"ruleId":"565","severity":1,"message":"624","line":220,"column":6,"nodeType":"590","endLine":225,"endColumn":4,"suggestions":"625"},{"ruleId":"592","severity":1,"message":"593","line":336,"column":13,"nodeType":"594","messageId":"595","endLine":336,"endColumn":15},{"ruleId":"592","severity":1,"message":"593","line":352,"column":26,"nodeType":"594","messageId":"595","endLine":352,"endColumn":28},{"ruleId":"554","severity":1,"message":"626","line":423,"column":12,"nodeType":"556","messageId":"557","endLine":423,"endColumn":22},{"ruleId":"554","severity":1,"message":"627","line":479,"column":9,"nodeType":"556","messageId":"557","endLine":479,"endColumn":20},{"ruleId":"628","severity":1,"message":"629","line":480,"column":24,"nodeType":"630","messageId":"631","endLine":480,"endColumn":26},{"ruleId":"554","severity":1,"message":"632","line":4,"column":8,"nodeType":"556","messageId":"557","endLine":4,"endColumn":13},{"ruleId":"554","severity":1,"message":"562","line":64,"column":9,"nodeType":"556","messageId":"557","endLine":64,"endColumn":18},{"ruleId":"554","severity":1,"message":"633","line":65,"column":9,"nodeType":"556","messageId":"557","endLine":65,"endColumn":18},{"ruleId":"554","severity":1,"message":"634","line":12,"column":8,"nodeType":"556","messageId":"557","endLine":12,"endColumn":16},{"ruleId":"554","severity":1,"message":"635","line":14,"column":8,"nodeType":"556","messageId":"557","endLine":14,"endColumn":18},{"ruleId":"554","severity":1,"message":"636","line":19,"column":8,"nodeType":"556","messageId":"557","endLine":19,"endColumn":12},{"ruleId":"554","severity":1,"message":"616","line":74,"column":10,"nodeType":"556","messageId":"557","endLine":74,"endColumn":18},{"ruleId":"565","severity":1,"message":"637","line":82,"column":13,"nodeType":"630","endLine":84,"endColumn":4},{"ruleId":"554","severity":1,"message":"618","line":112,"column":11,"nodeType":"556","messageId":"557","endLine":112,"endColumn":19},{"ruleId":"554","severity":1,"message":"638","line":1,"column":17,"nodeType":"556","messageId":"557","endLine":1,"endColumn":25},{"ruleId":"554","severity":1,"message":"639","line":1,"column":27,"nodeType":"556","messageId":"557","endLine":1,"endColumn":36},{"ruleId":"554","severity":1,"message":"639","line":1,"column":27,"nodeType":"556","messageId":"557","endLine":1,"endColumn":36},{"ruleId":"554","severity":1,"message":"618","line":39,"column":11,"nodeType":"556","messageId":"557","endLine":39,"endColumn":19},{"ruleId":"599","severity":1,"message":"640","line":103,"column":19,"nodeType":"601","messageId":"595","endLine":103,"endColumn":26},{"ruleId":"554","severity":1,"message":"604","line":5,"column":18,"nodeType":"556","messageId":"557","endLine":5,"endColumn":28},{"ruleId":"554","severity":1,"message":"641","line":10,"column":3,"nodeType":"556","messageId":"557","endLine":10,"endColumn":12},{"ruleId":"554","severity":1,"message":"642","line":11,"column":3,"nodeType":"556","messageId":"557","endLine":11,"endColumn":14},{"ruleId":"554","severity":1,"message":"643","line":12,"column":3,"nodeType":"556","messageId":"557","endLine":12,"endColumn":8},{"ruleId":"554","severity":1,"message":"644","line":13,"column":3,"nodeType":"556","messageId":"557","endLine":13,"endColumn":12},{"ruleId":"554","severity":1,"message":"633","line":88,"column":9,"nodeType":"556","messageId":"557","endLine":88,"endColumn":18},{"ruleId":"554","severity":1,"message":"645","line":97,"column":10,"nodeType":"556","messageId":"557","endLine":97,"endColumn":14},{"ruleId":"554","severity":1,"message":"646","line":121,"column":9,"nodeType":"556","messageId":"557","endLine":121,"endColumn":20},{"ruleId":"554","severity":1,"message":"588","line":164,"column":9,"nodeType":"556","messageId":"557","endLine":164,"endColumn":12},{"ruleId":"554","severity":1,"message":"588","line":199,"column":9,"nodeType":"556","messageId":"557","endLine":199,"endColumn":12},{"ruleId":"554","severity":1,"message":"588","line":218,"column":9,"nodeType":"556","messageId":"557","endLine":218,"endColumn":12},{"ruleId":"592","severity":1,"message":"647","line":317,"column":31,"nodeType":"594","messageId":"595","endLine":317,"endColumn":33},{"ruleId":"648","severity":1,"message":"649","line":500,"column":19,"nodeType":"581","endLine":500,"endColumn":67},{"ruleId":"650","severity":1,"message":"651","line":501,"column":21,"nodeType":"581","endLine":505,"endColumn":22},{"ruleId":"628","severity":1,"message":"629","line":19,"column":23,"nodeType":"630","messageId":"631","endLine":19,"endColumn":25},{"ruleId":"592","severity":1,"message":"593","line":21,"column":23,"nodeType":"594","messageId":"595","endLine":21,"endColumn":25},{"ruleId":"628","severity":1,"message":"652","line":33,"column":39,"nodeType":"630","messageId":"653","endLine":33,"endColumn":41},{"ruleId":"592","severity":1,"message":"593","line":34,"column":25,"nodeType":"594","messageId":"595","endLine":34,"endColumn":27},{"ruleId":"654","severity":1,"message":"655","line":49,"column":3,"nodeType":"656","messageId":"657","endLine":49,"endColumn":19},{"ruleId":"628","severity":1,"message":"629","line":54,"column":45,"nodeType":"630","messageId":"631","endLine":54,"endColumn":47},{"ruleId":"592","severity":1,"message":"593","line":55,"column":9,"nodeType":"594","messageId":"595","endLine":55,"endColumn":11},{"ruleId":"592","severity":1,"message":"593","line":57,"column":16,"nodeType":"594","messageId":"595","endLine":57,"endColumn":18},{"ruleId":"592","severity":1,"message":"647","line":70,"column":47,"nodeType":"594","messageId":"595","endLine":70,"endColumn":49},{"ruleId":"592","severity":1,"message":"593","line":70,"column":75,"nodeType":"594","messageId":"595","endLine":70,"endColumn":77},{"ruleId":"592","severity":1,"message":"647","line":77,"column":28,"nodeType":"594","messageId":"595","endLine":77,"endColumn":30},{"ruleId":"658","severity":1,"message":"659","line":80,"column":44,"nodeType":"660","messageId":"595","endLine":80,"endColumn":48},{"ruleId":"658","severity":1,"message":"659","line":81,"column":44,"nodeType":"660","messageId":"595","endLine":81,"endColumn":48},{"ruleId":"554","severity":1,"message":"661","line":1,"column":28,"nodeType":"556","messageId":"557","endLine":1,"endColumn":47},{"ruleId":"554","severity":1,"message":"662","line":70,"column":12,"nodeType":"556","messageId":"557","endLine":70,"endColumn":24},{"ruleId":"554","severity":1,"message":"663","line":70,"column":26,"nodeType":"556","messageId":"557","endLine":70,"endColumn":41},{"ruleId":"554","severity":1,"message":"664","line":71,"column":12,"nodeType":"556","messageId":"557","endLine":71,"endColumn":26},{"ruleId":"554","severity":1,"message":"665","line":71,"column":28,"nodeType":"556","messageId":"557","endLine":71,"endColumn":45},{"ruleId":"554","severity":1,"message":"666","line":72,"column":12,"nodeType":"556","messageId":"557","endLine":72,"endColumn":25},{"ruleId":"554","severity":1,"message":"667","line":72,"column":27,"nodeType":"556","messageId":"557","endLine":72,"endColumn":43},{"ruleId":"565","severity":1,"message":"668","line":100,"column":6,"nodeType":"590","endLine":100,"endColumn":25,"suggestions":"669"},{"ruleId":"592","severity":1,"message":"593","line":120,"column":41,"nodeType":"594","messageId":"595","endLine":120,"endColumn":43},{"ruleId":"670","severity":1,"message":"671","line":166,"column":21,"nodeType":"672","endLine":166,"endColumn":41},{"ruleId":"554","severity":1,"message":"633","line":113,"column":9,"nodeType":"556","messageId":"557","endLine":113,"endColumn":18},{"ruleId":"554","severity":1,"message":"673","line":13,"column":8,"nodeType":"556","messageId":"557","endLine":13,"endColumn":19},{"ruleId":"554","severity":1,"message":"674","line":18,"column":8,"nodeType":"556","messageId":"557","endLine":18,"endColumn":19},{"ruleId":"554","severity":1,"message":"675","line":19,"column":8,"nodeType":"556","messageId":"557","endLine":19,"endColumn":20},{"ruleId":"554","severity":1,"message":"676","line":10,"column":8,"nodeType":"556","messageId":"557","endLine":10,"endColumn":24},{"ruleId":"554","severity":1,"message":"677","line":92,"column":27,"nodeType":"556","messageId":"557","endLine":92,"endColumn":44},{"ruleId":"554","severity":1,"message":"678","line":93,"column":11,"nodeType":"556","messageId":"557","endLine":93,"endColumn":25},{"ruleId":"554","severity":1,"message":"679","line":93,"column":27,"nodeType":"556","messageId":"557","endLine":93,"endColumn":44},{"ruleId":"628","severity":1,"message":"629","line":103,"column":34,"nodeType":"630","messageId":"631","endLine":103,"endColumn":36},{"ruleId":"565","severity":1,"message":"680","line":110,"column":6,"nodeType":"590","endLine":110,"endColumn":8,"suggestions":"681"},{"ruleId":"592","severity":1,"message":"647","line":207,"column":43,"nodeType":"594","messageId":"595","endLine":207,"endColumn":45},{"ruleId":"592","severity":1,"message":"647","line":222,"column":43,"nodeType":"594","messageId":"595","endLine":222,"endColumn":45},{"ruleId":"592","severity":1,"message":"647","line":266,"column":68,"nodeType":"594","messageId":"595","endLine":266,"endColumn":70},{"ruleId":"592","severity":1,"message":"647","line":327,"column":68,"nodeType":"594","messageId":"595","endLine":327,"endColumn":70},{"ruleId":"628","severity":1,"message":"629","line":425,"column":39,"nodeType":"630","messageId":"631","endLine":425,"endColumn":41},{"ruleId":"554","severity":1,"message":"682","line":427,"column":27,"nodeType":"556","messageId":"557","endLine":427,"endColumn":31},{"ruleId":"554","severity":1,"message":"683","line":118,"column":10,"nodeType":"556","messageId":"557","endLine":118,"endColumn":15},{"ruleId":"554","severity":1,"message":"684","line":128,"column":10,"nodeType":"556","messageId":"557","endLine":128,"endColumn":16},{"ruleId":"565","severity":1,"message":"685","line":174,"column":6,"nodeType":"590","endLine":174,"endColumn":28,"suggestions":"686"},{"ruleId":"648","severity":1,"message":"649","line":368,"column":21,"nodeType":"581","endLine":372,"endColumn":22},{"ruleId":"648","severity":1,"message":"649","line":387,"column":25,"nodeType":"581","endLine":391,"endColumn":26},{"ruleId":"648","severity":1,"message":"649","line":408,"column":25,"nodeType":"581","endLine":412,"endColumn":26},{"ruleId":"554","severity":1,"message":"639","line":1,"column":17,"nodeType":"556","messageId":"557","endLine":1,"endColumn":26},{"ruleId":"554","severity":1,"message":"687","line":10,"column":19,"nodeType":"556","messageId":"557","endLine":10,"endColumn":21},{"ruleId":"554","severity":1,"message":"688","line":11,"column":11,"nodeType":"556","messageId":"557","endLine":11,"endColumn":18},{"ruleId":"554","severity":1,"message":"689","line":12,"column":20,"nodeType":"556","messageId":"557","endLine":12,"endColumn":29},{"ruleId":"565","severity":1,"message":"690","line":17,"column":28,"nodeType":"556","endLine":17,"endColumn":39},{"ruleId":"554","severity":1,"message":"691","line":4,"column":10,"nodeType":"556","messageId":"557","endLine":4,"endColumn":20},{"ruleId":"554","severity":1,"message":"559","line":15,"column":8,"nodeType":"556","messageId":"557","endLine":15,"endColumn":13},{"ruleId":"592","severity":1,"message":"593","line":96,"column":51,"nodeType":"594","messageId":"595","endLine":96,"endColumn":53},{"ruleId":"554","severity":1,"message":"639","line":2,"column":20,"nodeType":"556","messageId":"557","endLine":2,"endColumn":29},{"ruleId":"554","severity":1,"message":"604","line":8,"column":8,"nodeType":"556","messageId":"557","endLine":8,"endColumn":18},{"ruleId":"554","severity":1,"message":"692","line":9,"column":8,"nodeType":"556","messageId":"557","endLine":9,"endColumn":14},{"ruleId":"554","severity":1,"message":"693","line":10,"column":8,"nodeType":"556","messageId":"557","endLine":10,"endColumn":16},{"ruleId":"554","severity":1,"message":"694","line":33,"column":8,"nodeType":"556","messageId":"557","endLine":33,"endColumn":11},{"ruleId":"554","severity":1,"message":"633","line":83,"column":11,"nodeType":"556","messageId":"557","endLine":83,"endColumn":20},{"ruleId":"554","severity":1,"message":"695","line":164,"column":13,"nodeType":"556","messageId":"557","endLine":164,"endColumn":16},{"ruleId":"592","severity":1,"message":"593","line":183,"column":50,"nodeType":"594","messageId":"595","endLine":183,"endColumn":52},{"ruleId":"554","severity":1,"message":"694","line":25,"column":8,"nodeType":"556","messageId":"557","endLine":25,"endColumn":11},{"ruleId":"554","severity":1,"message":"633","line":78,"column":9,"nodeType":"556","messageId":"557","endLine":78,"endColumn":18},{"ruleId":"554","severity":1,"message":"696","line":79,"column":21,"nodeType":"556","messageId":"557","endLine":79,"endColumn":33},{"ruleId":"554","severity":1,"message":"697","line":81,"column":20,"nodeType":"556","messageId":"557","endLine":81,"endColumn":31},{"ruleId":"554","severity":1,"message":"698","line":82,"column":22,"nodeType":"556","messageId":"557","endLine":82,"endColumn":35},{"ruleId":"628","severity":1,"message":"629","line":125,"column":27,"nodeType":"630","messageId":"631","endLine":125,"endColumn":29},{"ruleId":"565","severity":1,"message":"699","line":148,"column":6,"nodeType":"590","endLine":148,"endColumn":8,"suggestions":"700"},{"ruleId":"554","severity":1,"message":"695","line":195,"column":13,"nodeType":"556","messageId":"557","endLine":195,"endColumn":16},{"ruleId":"554","severity":1,"message":"701","line":197,"column":13,"nodeType":"556","messageId":"557","endLine":197,"endColumn":23},{"ruleId":"579","severity":1,"message":"580","line":345,"column":15,"nodeType":"581","endLine":345,"endColumn":48},{"ruleId":"554","severity":1,"message":"702","line":4,"column":8,"nodeType":"556","messageId":"557","endLine":4,"endColumn":12},{"ruleId":"554","severity":1,"message":"703","line":11,"column":8,"nodeType":"556","messageId":"557","endLine":11,"endColumn":13},{"ruleId":"554","severity":1,"message":"676","line":13,"column":8,"nodeType":"556","messageId":"557","endLine":13,"endColumn":24},{"ruleId":"554","severity":1,"message":"704","line":14,"column":8,"nodeType":"556","messageId":"557","endLine":14,"endColumn":16},{"ruleId":"554","severity":1,"message":"705","line":18,"column":8,"nodeType":"556","messageId":"557","endLine":18,"endColumn":14},{"ruleId":"554","severity":1,"message":"688","line":27,"column":9,"nodeType":"556","messageId":"557","endLine":27,"endColumn":16},{"ruleId":"565","severity":1,"message":"706","line":42,"column":6,"nodeType":"590","endLine":42,"endColumn":8,"suggestions":"707"},{"ruleId":"592","severity":1,"message":"593","line":46,"column":12,"nodeType":"594","messageId":"595","endLine":46,"endColumn":14},{"ruleId":"708","severity":1,"message":"709","line":48,"column":26,"nodeType":"594","messageId":"710","endLine":48,"endColumn":27},{"ruleId":"592","severity":1,"message":"593","line":50,"column":12,"nodeType":"594","messageId":"595","endLine":50,"endColumn":14},{"ruleId":"708","severity":1,"message":"709","line":52,"column":26,"nodeType":"594","messageId":"710","endLine":52,"endColumn":27},{"ruleId":"592","severity":1,"message":"593","line":54,"column":12,"nodeType":"594","messageId":"595","endLine":54,"endColumn":14},{"ruleId":"650","severity":1,"message":"651","line":97,"column":21,"nodeType":"581","endLine":100,"endColumn":23},{"ruleId":"554","severity":1,"message":"603","line":16,"column":8,"nodeType":"556","messageId":"557","endLine":16,"endColumn":21},{"ruleId":"554","severity":1,"message":"604","line":17,"column":8,"nodeType":"556","messageId":"557","endLine":17,"endColumn":18},{"ruleId":"554","severity":1,"message":"605","line":18,"column":8,"nodeType":"556","messageId":"557","endLine":18,"endColumn":22},{"ruleId":"554","severity":1,"message":"607","line":20,"column":8,"nodeType":"556","messageId":"557","endLine":20,"endColumn":18},{"ruleId":"554","severity":1,"message":"608","line":21,"column":8,"nodeType":"556","messageId":"557","endLine":21,"endColumn":21},{"ruleId":"711","severity":1,"message":"712","line":43,"column":58,"nodeType":"713","messageId":"714","endLine":43,"endColumn":60},{"ruleId":"711","severity":1,"message":"712","line":43,"column":82,"nodeType":"713","messageId":"714","endLine":43,"endColumn":84},{"ruleId":"711","severity":1,"message":"712","line":44,"column":66,"nodeType":"713","messageId":"714","endLine":44,"endColumn":68},{"ruleId":"711","severity":1,"message":"712","line":44,"column":94,"nodeType":"713","messageId":"714","endLine":44,"endColumn":96},{"ruleId":"554","severity":1,"message":"715","line":45,"column":13,"nodeType":"556","messageId":"557","endLine":45,"endColumn":27},{"ruleId":"554","severity":1,"message":"716","line":45,"column":29,"nodeType":"556","messageId":"557","endLine":45,"endColumn":46},{"ruleId":"711","severity":1,"message":"712","line":46,"column":68,"nodeType":"713","messageId":"714","endLine":46,"endColumn":70},{"ruleId":"711","severity":1,"message":"712","line":46,"column":90,"nodeType":"713","messageId":"714","endLine":46,"endColumn":92},{"ruleId":"711","severity":1,"message":"712","line":47,"column":68,"nodeType":"713","messageId":"714","endLine":47,"endColumn":70},{"ruleId":"711","severity":1,"message":"712","line":47,"column":97,"nodeType":"713","messageId":"714","endLine":47,"endColumn":99},{"ruleId":"711","severity":1,"message":"712","line":48,"column":62,"nodeType":"713","messageId":"714","endLine":48,"endColumn":64},{"ruleId":"711","severity":1,"message":"712","line":48,"column":88,"nodeType":"713","messageId":"714","endLine":48,"endColumn":90},{"ruleId":"711","severity":1,"message":"712","line":49,"column":74,"nodeType":"713","messageId":"714","endLine":49,"endColumn":76},{"ruleId":"711","severity":1,"message":"712","line":49,"column":106,"nodeType":"713","messageId":"714","endLine":49,"endColumn":108},{"ruleId":"711","severity":1,"message":"712","line":50,"column":70,"nodeType":"713","messageId":"714","endLine":50,"endColumn":72},{"ruleId":"711","severity":1,"message":"712","line":50,"column":108,"nodeType":"713","messageId":"714","endLine":50,"endColumn":110},{"ruleId":"711","severity":1,"message":"712","line":51,"column":74,"nodeType":"713","messageId":"714","endLine":51,"endColumn":76},{"ruleId":"711","severity":1,"message":"712","line":51,"column":108,"nodeType":"713","messageId":"714","endLine":51,"endColumn":110},{"ruleId":"711","severity":1,"message":"712","line":52,"column":72,"nodeType":"713","messageId":"714","endLine":52,"endColumn":74},{"ruleId":"711","severity":1,"message":"712","line":52,"column":104,"nodeType":"713","messageId":"714","endLine":52,"endColumn":106},{"ruleId":"711","severity":1,"message":"712","line":53,"column":72,"nodeType":"713","messageId":"714","endLine":53,"endColumn":74},{"ruleId":"711","severity":1,"message":"712","line":53,"column":110,"nodeType":"713","messageId":"714","endLine":53,"endColumn":112},{"ruleId":"711","severity":1,"message":"712","line":54,"column":76,"nodeType":"713","messageId":"714","endLine":54,"endColumn":78},{"ruleId":"711","severity":1,"message":"712","line":54,"column":110,"nodeType":"713","messageId":"714","endLine":54,"endColumn":112},{"ruleId":"711","severity":1,"message":"712","line":55,"column":72,"nodeType":"713","messageId":"714","endLine":55,"endColumn":74},{"ruleId":"711","severity":1,"message":"712","line":55,"column":104,"nodeType":"713","messageId":"714","endLine":55,"endColumn":106},{"ruleId":"711","severity":1,"message":"712","line":59,"column":57,"nodeType":"713","messageId":"714","endLine":59,"endColumn":59},{"ruleId":"711","severity":1,"message":"712","line":59,"column":87,"nodeType":"713","messageId":"714","endLine":59,"endColumn":89},{"ruleId":"554","severity":1,"message":"717","line":60,"column":13,"nodeType":"556","messageId":"557","endLine":60,"endColumn":20},{"ruleId":"554","severity":1,"message":"718","line":60,"column":22,"nodeType":"556","messageId":"557","endLine":60,"endColumn":32},{"ruleId":"554","severity":1,"message":"719","line":69,"column":12,"nodeType":"556","messageId":"557","endLine":69,"endColumn":25},{"ruleId":"554","severity":1,"message":"720","line":69,"column":27,"nodeType":"556","messageId":"557","endLine":69,"endColumn":43},{"ruleId":"554","severity":1,"message":"721","line":70,"column":12,"nodeType":"556","messageId":"557","endLine":70,"endColumn":22},{"ruleId":"554","severity":1,"message":"722","line":70,"column":24,"nodeType":"556","messageId":"557","endLine":70,"endColumn":37},{"ruleId":"628","severity":1,"message":"629","line":74,"column":24,"nodeType":"630","messageId":"631","endLine":74,"endColumn":26},{"ruleId":"565","severity":1,"message":"723","line":80,"column":6,"nodeType":"590","endLine":80,"endColumn":8,"suggestions":"724"},{"ruleId":"554","severity":1,"message":"695","line":128,"column":15,"nodeType":"556","messageId":"557","endLine":128,"endColumn":18},{"ruleId":"628","severity":1,"message":"725","line":140,"column":67,"nodeType":"630","messageId":"653","endLine":140,"endColumn":69},{"ruleId":"592","severity":1,"message":"647","line":140,"column":80,"nodeType":"594","messageId":"595","endLine":140,"endColumn":82},{"ruleId":"711","severity":1,"message":"712","line":177,"column":34,"nodeType":"713","messageId":"714","endLine":177,"endColumn":36},{"ruleId":"711","severity":1,"message":"712","line":177,"column":55,"nodeType":"713","messageId":"714","endLine":177,"endColumn":57},{"ruleId":"628","severity":1,"message":"629","line":214,"column":37,"nodeType":"630","messageId":"631","endLine":214,"endColumn":39},{"ruleId":"628","severity":1,"message":"629","line":229,"column":24,"nodeType":"630","messageId":"631","endLine":229,"endColumn":26},{"ruleId":"711","severity":1,"message":"712","line":614,"column":36,"nodeType":"713","messageId":"714","endLine":614,"endColumn":38},{"ruleId":"711","severity":1,"message":"712","line":614,"column":52,"nodeType":"713","messageId":"714","endLine":614,"endColumn":54},"no-native-reassign",["726"],"no-negated-in-lhs",["727"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'buttonState' is assigned a value but never used.","'setValue' is assigned a value but never used.","'isDesktop' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'body' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setButtonState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [email, username, password] as a second argument to the useEffect Hook.",["728"],"'Avatar' is defined but never used.","'AddIcon' is defined but never used.","'ContentState' is defined but never used.","'convertFromRaw' is defined but never used.","'convertToRaw' is defined but never used.","'avatar' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'avatarObj' is assigned a value but never used.","'setAvatarObj' is assigned a value but never used.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CardMedia' is defined but never used.","'Autocomplete' is defined but never used.","'loading' is assigned a value but never used.","'newTag' is assigned a value but never used.","'setNewTag' is assigned a value but never used.","'handleArtTagsEdit' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'readArt'. Either include it or remove the dependency array.","ArrayExpression",["729"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'selectedArt', 'updatedTile.artId', 'updatedTile.artLocation', 'updatedTile.artType', 'updatedTile.category', 'updatedTile.description', 'updatedTile.tags', and 'updatedTile.title'. Either include them or remove the dependency array.",["730"],"'Suspense' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'IconButton' is defined but never used.","'OutlinedInput' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'clsx' is defined but never used.","React Hook useEffect contains a call to 'setErrorMessage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["731"],"'isMobile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'globalParams' and 'props.prixerUsername'. Either include them or remove the dependency array.",["732"],"'MenuProps' is assigned a value but never used.","'backdrop' is assigned a value but never used.","'inputChange' is assigned a value but never used.","'response' is assigned a value but never used.","'useCallback' is defined but never used.","'Cropper' is defined but never used.","'thumbnailUrl' is assigned a value but never used.","'setThumbnailUrl' is assigned a value but never used.","'setPublicId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'artType' and 'handleMaxPrintCalc'. Either include them or remove the dependency array.",["733"],"'blobToFile' is defined but never used.","'removeCrops' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'axios' is defined but never used.","'isDeskTop' is assigned a value but never used.","'Snackbar' is defined but never used.","'PrixerGrid' is defined but never used.","'logo' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'useState' is defined but never used.","'useEffect' is defined but never used.","Duplicate key 'padding'.","'FormGroup' is defined but never used.","'FilledInput' is defined but never used.","'Input' is defined but never used.","'TextField' is defined but never used.","'Open' is assigned a value but never used.","'createOpenF' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-eval","eval can be harmful.","CallExpression","'useImperativeHandle' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'snackBarAction' is assigned a value but never used.","'setSnackBarAction' is assigned a value but never used.","'snackBarError' is assigned a value but never used.","'setSnackBarError' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'art', 'croppedArtTemp', and 'setCroppedArt'. Either include them or remove the dependency array.",["734"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'LoyaltyIcon' is defined but never used.","'Preferences' is defined but never used.","'Testimonials' is defined but never used.","'CircularProgress' is defined but never used.","'setImagesVariants' is assigned a value but never used.","'imagesProducts' is assigned a value but never used.","'setImagesProducts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imagesVariants'. Either include it or remove the dependency array.",["735"],"'test' is assigned a value but never used.","'ready' is assigned a value but never used.","'prixer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["736"],"'ar' is assigned a value but never used.","'classes' is assigned a value but never used.","'setAspect' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'makeStyles' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Box' is defined but never used.","'url' is assigned a value but never used.","'setProductId' is assigned a value but never used.","'setThumbUrl' is assigned a value but never used.","'setImagesList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'imageLoader.loader', 'imagesList', and 'thumbUrl'. Either include them or remove the dependency array.",["737"],"'previewMp4' is assigned a value but never used.","'Link' is defined but never used.","'Title' is defined but never used.","'Backdrop' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'base_url' and 'props.product'. Either include them or remove the dependency array.",["738"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'buttonAttState' is assigned a value but never used.","'setButtonAttState' is assigned a value but never used.","'newFile' is assigned a value but never used.","'setNewFile' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'emailError' is assigned a value but never used.","'setEmailError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'image' and 'loadeImage.loader'. Either include them or remove the dependency array.",["739"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation",{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},"Add dependencies array: [email, username, password]",{"range":"764","text":"765"},"Update the dependencies array to be: [readArt]",{"range":"766","text":"767"},"Update the dependencies array to be: [artDataState, selectedArt, updatedTile.artId, updatedTile.artLocation, updatedTile.artType, updatedTile.category, updatedTile.description, updatedTile.tags, updatedTile.title]",{"range":"768","text":"769"},"Add dependencies array: [token]",{"range":"770","text":"771"},"Update the dependencies array to be: [globalParams, props.prixerUsername, searchValue]",{"range":"772","text":"773"},"Update the dependencies array to be: [originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso, artType, handleMaxPrintCalc]",{"range":"774","text":"775"},"Update the dependencies array to be: [art, croppedAreaPixels, croppedArtTemp, setCroppedArt]",{"range":"776","text":"777"},"Update the dependencies array to be: [imagesVariants]",{"range":"778","text":"779"},"Update the dependencies array to be: [history, props.prixerUsername]",{"range":"780","text":"781"},"Update the dependencies array to be: [imageLoader.loader, imagesList, thumbUrl]",{"range":"782","text":"783"},"Update the dependencies array to be: [base_url, props.product]",{"range":"784","text":"785"},"Update the dependencies array to be: [image, loadeImage.loader]",{"range":"786","text":"787"},[6270,6270],", [email, username, password]",[8954,8956],"[readArt]",[10040,10054],"[artDataState, selectedArt, updatedTile.artId, updatedTile.artLocation, updatedTile.artType, updatedTile.category, updatedTile.description, updatedTile.tags, updatedTile.title]",[3479,3479],", [token]",[3717,3730],"[globalParams, props.prixerUsername, searchValue]",[5774,5877],"[originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso, artType, handleMaxPrintCalc]",[2941,2960],"[art, croppedAreaPixels, croppedArtTemp, setCroppedArt]",[3560,3562],"[imagesVariants]",[5482,5504],"[history, props.prixerUsername]",[5073,5075],"[imageLoader.loader, imagesList, thumbUrl]",[1483,1485],"[base_url, props.product]",[4312,4314],"[image, loadeImage.loader]"]