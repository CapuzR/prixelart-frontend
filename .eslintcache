[{"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/index.js":"1","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/theme.js":"2","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/App.js":"3","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/serviceWorker.js":"4","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/expire.js":"5","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/login/loginPage.jsx":"6","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/register/userRegistration.jsx":"7","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/register/prixerRegistration.jsx":"8","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/prixerProfile.jsx":"9","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/products/productsCatalog.jsx":"10","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/gallery/gallery.jsx":"11","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/adminLogin/adminLoginPage.jsx":"12","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/passwordReset/forgotPassword.jsx":"13","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/home/home.jsx":"14","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/passwordChange/passwordChange.jsx":"15","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/passwordReset/passwordReset.jsx":"16","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/fullscreenPhoto/fullscreenPhoto.jsx":"17","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/adminMain.jsx":"18","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/validations.js":"19","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/utils.js":"20","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/Copyright/copyright.jsx":"21","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/floatingAddButton/floatingAddButton.jsx":"22","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/appBar/appBar.jsx":"23","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/artUploader/artUploader.jsx":"24","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/Preferences.jsx":"25","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/orders/orders.jsx":"26","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/orders/orderServices.js":"27","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/tabPreferences.jsx":"28","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/updateOrder.jsx":"29","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/createOrder/createOrder.jsx":"30","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/artUploader/aspectRatioSelector.jsx":"31","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/preferenceTerms.jsx":"32","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/consumerServices.js":"33","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/preferencesCarousel.jsx":"34","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/createOrder/orderDetails.jsx":"35","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/Title.jsx":"36","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/createOrder/orderBasicInfo.jsx":"37","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/cropImage.js":"38","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/artUploader/easyCropper.jsx":"39","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/products/services.js":"40","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/orders/paymentMethods.jsx":"41","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/listItems.jsx":"42","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/consumers/consumers.jsx":"43","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/products/products.jsx":"44","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/dashboard.jsx":"45","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/adminUser/adminUser.jsx":"46","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/simpleDialog/simpleDialog.jsx":"47","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/products/productsGrid.jsx":"48","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/grid/grid.jsx":"49","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/prixerGrid/prixerGrid.jsx":"50","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/register/Terms.jsx":"51","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/prixerOptions/prixerOptions.jsx":"52","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/userData/userData.jsx":"53","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/searchBar/searchBar.jsx":"54","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/paymentMethodCrud/createPaymentMethod.jsx":"55","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/paymentMethodCrud/updatePaymentMethod.jsx":"56","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/paymentMethodCrud/readPaymentMethods.jsx":"57","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/readConsumers.jsx":"58","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/createConsumer.jsx":"59","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/updateConsumer.jsx":"60","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/deposits.jsx":"61","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/chart.jsx":"62","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/orders.jsx":"63","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/updateProduct.jsx":"64","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/disableProduct.jsx":"65","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/readProducts.jsx":"66","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/createProduct.jsx":"67","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/disableAdmin.jsx":"68","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/readAdmins.jsx":"69","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/updateAdmin.jsx":"70","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/createAdmin.jsx":"71","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/products/variants.jsx":"72","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/variants/readVariants.jsx":"73","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/variants/createVariant.jsx":"74"},{"size":931,"mtime":1662654634591,"results":"75","hashOfConfig":"76"},{"size":397,"mtime":1662654634591,"results":"77","hashOfConfig":"76"},{"size":3257,"mtime":1662654634581,"results":"78","hashOfConfig":"76"},{"size":5086,"mtime":1662654634591,"results":"79","hashOfConfig":"76"},{"size":403,"mtime":1662654634591,"results":"80","hashOfConfig":"76"},{"size":9576,"mtime":1662654634591,"results":"81","hashOfConfig":"76"},{"size":12943,"mtime":1662656434067,"results":"82","hashOfConfig":"76"},{"size":14797,"mtime":1662735817559,"results":"83","hashOfConfig":"76"},{"size":2349,"mtime":1662654634591,"results":"84","hashOfConfig":"76"},{"size":2332,"mtime":1662654634591,"results":"85","hashOfConfig":"76"},{"size":2339,"mtime":1662663812190,"results":"86","hashOfConfig":"76"},{"size":8838,"mtime":1662654634591,"results":"87","hashOfConfig":"76"},{"size":4659,"mtime":1662654634591,"results":"88","hashOfConfig":"76"},{"size":14611,"mtime":1662656434067,"results":"89","hashOfConfig":"76"},{"size":8532,"mtime":1662654634591,"results":"90","hashOfConfig":"76"},{"size":7155,"mtime":1662654634591,"results":"91","hashOfConfig":"76"},{"size":24601,"mtime":1662732815009,"results":"92","hashOfConfig":"76"},{"size":6622,"mtime":1662656434067,"results":"93","hashOfConfig":"76"},{"size":594,"mtime":1662654634591,"results":"94","hashOfConfig":"76"},{"size":2686,"mtime":1662654634591,"results":"95","hashOfConfig":"76"},{"size":484,"mtime":1662654634591,"results":"96","hashOfConfig":"76"},{"size":1438,"mtime":1662654634591,"results":"97","hashOfConfig":"76"},{"size":4642,"mtime":1662654634591,"results":"98","hashOfConfig":"76"},{"size":26472,"mtime":1662732727039,"results":"99","hashOfConfig":"76"},{"size":196,"mtime":1662656434067,"results":"100","hashOfConfig":"76"},{"size":5260,"mtime":1662654634581,"results":"101","hashOfConfig":"76"},{"size":2689,"mtime":1662654634581,"results":"102","hashOfConfig":"76"},{"size":1639,"mtime":1662656434067,"results":"103","hashOfConfig":"76"},{"size":8690,"mtime":1662654634581,"results":"104","hashOfConfig":"76"},{"size":12594,"mtime":1662654634581,"results":"105","hashOfConfig":"76"},{"size":6737,"mtime":1662654634591,"results":"106","hashOfConfig":"76"},{"size":3485,"mtime":1662656434067,"results":"107","hashOfConfig":"76"},{"size":1050,"mtime":1662654634581,"results":"108","hashOfConfig":"76"},{"size":15394,"mtime":1662734614249,"results":"109","hashOfConfig":"76"},{"size":39047,"mtime":1662654634581,"results":"110","hashOfConfig":"76"},{"size":342,"mtime":1662654634581,"results":"111","hashOfConfig":"76"},{"size":15659,"mtime":1662654634581,"results":"112","hashOfConfig":"76"},{"size":2327,"mtime":1662654634591,"results":"113","hashOfConfig":"76"},{"size":1317,"mtime":1662654634591,"results":"114","hashOfConfig":"76"},{"size":2757,"mtime":1662654634591,"results":"115","hashOfConfig":"76"},{"size":5061,"mtime":1662654634581,"results":"116","hashOfConfig":"76"},{"size":4072,"mtime":1662656434067,"results":"117","hashOfConfig":"76"},{"size":4836,"mtime":1662654634581,"results":"118","hashOfConfig":"76"},{"size":4905,"mtime":1662656434067,"results":"119","hashOfConfig":"76"},{"size":3186,"mtime":1662654634581,"results":"120","hashOfConfig":"76"},{"size":4445,"mtime":1662654634581,"results":"121","hashOfConfig":"76"},{"size":1815,"mtime":1662654634591,"results":"122","hashOfConfig":"76"},{"size":11222,"mtime":1662654634591,"results":"123","hashOfConfig":"76"},{"size":5419,"mtime":1662654634591,"results":"124","hashOfConfig":"76"},{"size":6653,"mtime":1662654917988,"results":"125","hashOfConfig":"76"},{"size":7745,"mtime":1662656434067,"results":"126","hashOfConfig":"76"},{"size":1149,"mtime":1662663812190,"results":"127","hashOfConfig":"76"},{"size":20793,"mtime":1662731463419,"results":"128","hashOfConfig":"76"},{"size":1739,"mtime":1662654634591,"results":"129","hashOfConfig":"76"},{"size":6375,"mtime":1662654634581,"results":"130","hashOfConfig":"76"},{"size":6795,"mtime":1662654634581,"results":"131","hashOfConfig":"76"},{"size":2992,"mtime":1662654634581,"results":"132","hashOfConfig":"76"},{"size":2918,"mtime":1662654634581,"results":"133","hashOfConfig":"76"},{"size":16295,"mtime":1662654634581,"results":"134","hashOfConfig":"76"},{"size":17190,"mtime":1662654634581,"results":"135","hashOfConfig":"76"},{"size":847,"mtime":1662654634581,"results":"136","hashOfConfig":"76"},{"size":1429,"mtime":1662654634581,"results":"137","hashOfConfig":"76"},{"size":2351,"mtime":1662654634581,"results":"138","hashOfConfig":"76"},{"size":15825,"mtime":1662654634591,"results":"139","hashOfConfig":"76"},{"size":0,"mtime":1662654634591,"results":"140","hashOfConfig":"76"},{"size":2983,"mtime":1662654634591,"results":"141","hashOfConfig":"76"},{"size":18716,"mtime":1662654634591,"results":"142","hashOfConfig":"76"},{"size":0,"mtime":1662654634581,"results":"143","hashOfConfig":"76"},{"size":2088,"mtime":1662654634581,"results":"144","hashOfConfig":"76"},{"size":0,"mtime":1662654634581,"results":"145","hashOfConfig":"76"},{"size":8660,"mtime":1662654634581,"results":"146","hashOfConfig":"76"},{"size":5131,"mtime":1662654634581,"results":"147","hashOfConfig":"76"},{"size":3649,"mtime":1662654634591,"results":"148","hashOfConfig":"76"},{"size":19154,"mtime":1662654634591,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"1ej2vcr",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"152"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"152"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"152"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"152"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"152"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"152"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"152"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"152"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"152"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"152"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"152"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"152"},"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/index.js",[],["319","320"],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/theme.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/App.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/serviceWorker.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/expire.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/login/loginPage.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/register/userRegistration.jsx",["321","322","323","324","325","326","327","328","329"],"//Llevar el Password a un componente propio.\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport validations from \"../utils/validations\";\nimport Copyright from \"../sharedComponents/Copyright/copyright\";\n\n//material-ui\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { FormControlLabel } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n// import Terms from \"./Terms\";     //Anterior Términos y condiciones\nimport clsx from \"clsx\";\nimport jwt from \"jwt-decode\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: \"absolute\",\n    maxHeight: 450,\n    overflowY: \"auto\",\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: \"16px 32px 24px\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"justify\",\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  snackbar: {\n    [theme.breakpoints.down(\"xs\")]: {\n      bottom: 90,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [buttonState, setButtonState] = useState(true);\n  const [isChecked, setIsChecked] = useState(false);\n  const [termsAgree, setTermsAgree] = useState(false);\n  const theme = useTheme();\n  const [value, setValue] = useState(\"\");\n\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const handleOnChange = () => {\n    setIsChecked(!isChecked);\n    setTermsAgree(!isChecked);\n  };\n  const styles = useStyles();\n  const [modal, setModal] = useState(false);\n  const openModal = () => {\n    setModal(!modal);\n  };\n  const body = (\n    <div className={styles.modal}>\n      <div>{value}</div>\n      {/* <Terms /> */}\n      <div align=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={() => openModal()}>\n          Aceptar\n        </Button>\n      </div>\n    </div>\n  );\n  //Error states.\n  const [usernameError, setUsernameError] = useState();\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const [snackBarError, setSnackBarError] = useState(false);\n\n  const now = new Date();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!username || !email || !firstName || !lastName || !email || !password) {\n      setErrorMessage(\"Por favor completa todos los campos requeridos.\");\n      setSnackBarError(true);\n    } else {\n      const base_url = process.env.REACT_APP_BACKEND_URL + \"/register\";\n      const data = {\n        username: username,\n        email: email,\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        termsAgree: termsAgree,\n      };\n      setButtonState(true);\n      axios\n        .post(base_url, data)\n        .then((response) => {\n          if (response.data.info === \"error_username\") {\n            setUsernameError(true);\n            setErrorMessage(response.data.message);\n            setSnackBarError(true);\n          } else if (response.data.info === \"error_email\") {\n            setEmailError(true);\n            setErrorMessage(response.data.message);\n            setSnackBarError(true);\n          } else {\n            setPasswordError(true);\n            setErrorMessage(\"Registro de usuario exitoso.\");\n            setSnackBarError(true);\n            const token = jwt(response.data.token);\n            localStorage.setItem(\"token\", JSON.stringify(token));\n            localStorage.setItem(\n              \"tokenExpire\",\n              JSON.stringify(now.getTime() + 21600000)\n            );\n            history.push({ pathname: \"/registrar/prixer\" });\n          }\n        })\n        .catch((error) => {\n          setButtonState(false);\n          console.log(error.response);\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (email && username && password) {\n      if (\n        validations.isAValidEmail(email) &&\n        validations.isAValidUsername(username) &&\n        validations.isAValidPassword(password)\n      ) {\n        setButtonState(false);\n      } else {\n        setButtonState(true);\n      }\n    } else {\n      setButtonState(true);\n    }\n  });\n\n  const handleEmailChange = (e) => {\n    if (validations.isAValidEmail(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailError(false);\n      setSnackBarError(false);\n    } else {\n      setEmail(e.target.value);\n      setErrorMessage(\"Por favor introduce un correo electrónico válido.\");\n      setSnackBarError(true);\n      setEmailError(true);\n    }\n  };\n\n  const handleUsernameChange = (e) => {\n    if (validations.isAValidUsername(e.target.value)) {\n      setUsername(e.target.value);\n      setUsernameError(false);\n      setSnackBarError(false);\n    } else {\n      setUsername(e.target.value);\n      setErrorMessage(\n        \"Por favor introduce un nombre de usuario que solo incluya letras en minúscula y números.\"\n      );\n      setSnackBarError(true);\n      setUsernameError(true);\n    }\n  };\n\n  //Password\n  const handlePasswordChange = (e) => {\n    if (validations.isAValidPassword(e.target.value)) {\n      setPassword(e.target.value);\n      setPasswordError(false);\n      setSnackBarError(false);\n    } else {\n      setPassword(e.target.value);\n      setPasswordError(true);\n      setErrorMessage(\n        \"Disculpa, tu contraseña debe tener entre 8 y 15 caracteres, incluyendo al menos: una minúscula, una mayúscula, un número y un caracter especial.\"\n      );\n      setSnackBarError(true);\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Registrar\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                error={usernameError}\n                id=\"username\"\n                label=\"Usuario\"\n                name=\"username\"\n                autoComplete=\"username\"\n                value={username}\n                onChange={handleUsernameChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Nombre\"\n                autoFocus\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Apellido\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                error={emailError}\n                id=\"email\"\n                label=\"Correo electrónico\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={handleEmailChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl\n                className={clsx(classes.margin, classes.textField)}\n                variant=\"outlined\"\n                xs={12}\n                fullWidth={true}\n              >\n                <InputLabel htmlFor=\"outlined-adornment-password\">\n                  Contraseña\n                </InputLabel>\n                <OutlinedInput\n                  id=\"outlined-adornment-password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  value={password}\n                  label=\"Contraseña\"\n                  error={passwordError}\n                  onChange={handlePasswordChange}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={100}\n                />\n              </FormControl>\n            </Grid>\n            {/* <Grid\n              item\n              xs={12}\n              style={{\n                display: \"flex\",\n                paddingTop: \"24px\",\n                justifyContent: \"center\",\n              }}\n            >\n              <FormControlLabel\n                style={{ margin: 0 }}\n                control={<Checkbox color=\"primary\" />}\n                label=\"Acepto los\"\n                onChange={handleOnChange}\n                value={termsAgree}\n              />\n\n              <Button\n                style={{ textTransform: \"lowercase\", fontSize: \"1rem\" }}\n                onClick={() => openModal()}\n              >\n                Términos y condiciones\n              </Button>\n              <Modal\n                open={modal}\n                onClose={openModal}\n                width={isDesktop ? 800 : 420}\n              >\n                {body}\n              </Modal>\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            value=\"submit\"\n          >\n            Registrarme\n          </Button>\n          <Grid container style={{ justifyContent: \"center\" }}>\n            <Grid item>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  history.push({ pathname: \"/iniciar\" });\n                }}\n                variant=\"body2\"\n              >\n                ¿Ya tienes una cuenta? Inicia sesión.\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n      <Snackbar\n        open={snackBarError}\n        autoHideDuration={6000}\n        message={errorMessage}\n        className={classes.snackbar}\n      />\n    </Container>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/register/prixerRegistration.jsx",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/prixerProfile.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/products/productsCatalog.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/gallery/gallery.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/adminLogin/adminLoginPage.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/passwordReset/forgotPassword.jsx",["345","346","347","348","349","350","351","352"],"//Llevar el Password a un componente propio.\n\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\n\nimport Copyright from '../../sharedComponents/Copyright/copyright';\n\n//material-ui\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport clsx from 'clsx';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 90,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n  },\n}));\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default function ForgotPassword() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n\n  //Error states.\n  const [errorMessage, setErrorMessage] = useState();\n  const [snackBarError, setSnackBarError] = useState(false);\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    if(!email) {\n      setErrorMessage('Por favor indica tu correo electrónico registrado para reestablecer tu contraseña.');\n      setSnackBarError(true);\n    } else {\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/forgot-password\";\n    const data= {\n      'email': email,\n      };\n    axios.post(base_url,data)\n    .then(async response =>{\n        if(!response.data.success){\n        //   setCurrentPasswordError(true);\n          setErrorMessage(response.data.info);\n          setSnackBarError(true);\n        } else {\n          setErrorMessage('Hemos enviado un enlace a tu correo electrónico.');\n          setSnackBarError(true);\n          await sleep(3000);\n          history.push({pathname:'/'});\n        }\n    })\n    .catch(error =>{\n        console.log(error.response)\n    })\n  }\n   } \n\n\n   const handleEmailChange = (e)=> {\n     setEmail(e.target.value)\n   }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Solicita el cambio de contraseña\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    // error={emailError}\n                    id=\"email\"\n                    label=\"Correo electrónico\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={handleEmailChange}\n                />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            value=\"submit\"\n          >\n            Recuperar acceso\n          </Button>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n      <Snackbar\n          open={snackBarError}\n          autoHideDuration={6000}\n          message={errorMessage}\n          className={classes.snackbar}\n        />\n    </Container>\n  );\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/home/home.jsx",["353","354"],"import React, { useState, Suspense, useEffect } from 'react';\n// import AppBar from '@material-ui/core/AppBar';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Carousel from 'react-material-ui-carousel'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport AppBar from '../sharedComponents/appBar/appBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport ArtsGrid from '../prixerProfile/grid/grid';\nimport PrixersGrid from '../sharedComponents/prixerGrid/prixerGrid';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport SimpleDialog from '../sharedComponents/simpleDialog/simpleDialog';\nimport FloatingAddButton from '../sharedComponents/floatingAddButton/floatingAddButton';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport MaximizeIcon from '@material-ui/icons/Maximize';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { useHistory } from \"react-router-dom\";\nimport ArtUploader from '../sharedComponents/artUploader/artUploader';\nimport utils from '../utils/utils';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://prixelart.com/\">\n        Prixelart C.A.\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  iconTabs: {\n    flexGrow: 1,\n    maxWidth: 666,\n    margin: 'auto',\n    marginBottom: 50\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'left',\n    overflowX: 'none',\n    flexGrow: 1,\n    overflow: 'visible'\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    padding: theme.spacing(25, 0, 6),\n    minHeight: '100vh'\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    width: \"100%\",\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n    position: 'relative',\n    bottom: 0\n  },\n  float: {\n    position:'relative',\n    marginLeft:'87%'\n  },\n  CarouselContent: {\n      width: '100vw',\n      heigh: '92vh'\n  }\n}));\n\nexport default function Home(props) {\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isDeskTop = useMediaQuery(theme.breakpoints.up('sm'));\n  const classes = useStyles();\n  const prixerUsername = 'all';\n  const [imgsDesktop, setImgsDesktop] = useState({imgs: []})\n  const [tabValue, setTabValue] = useState(0);\n  const [openModal, setOpenModal] = useState(false);\n  const [openPrixers, setOpenPrixers] = useState(false);\n  const [openArts, setOpenArts] = useState(true);\n  // const [scrolledTop, setScrolledTop] = useState(false);\n  const history = useHistory();\n  const [openArtFormDialog, setOpenArtFormDialog] = useState(false);\n  // const imgsDesktop =  [\n  //     {\n  //       url: './Portada_de_Pagina_Web_Museo_Chuao_Espejo_PC_v2.jpg'\n  //     },\n  //     {\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/bedroom-g9548c5f75_1920.jpg'\n  //     },\n  //     {\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/corporate-building-with-minimalist-empty-room%202.jpg'\n  //     },\n  //     {\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Vecislavas%20Popa%20en%20Pexels_lINEAL%20120X40.2.jpg'\n  //     },\n  //     {\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/interior_dark_blue_wall_with_yellow_sofa_and_decor_in_living_room.jpg'\n  //     },\n  //     {\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/interior-g373dfef45_1920.2.jpg'\n  //     },\n  //     {\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/interior-g373dfef45_1920.jpg'\n  //     }\n  //   ]\nconst imgsMobile = [\n  {\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Portada%20de%20Pagina%20Web_Museo%20Chuao%20Espejo_Telefono_V1.jpg'\n  },\n  {\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Canva%20Studio%20en%20Pexels_16a9.jpg'\n  },\n  {\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Medhat%20Ayad%20en%20Pexels_9a16.jpg'\n  },\n  {\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Pixabay_%203X.2%20Phone.jpg'\n  },\n  {\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Vecislavas%20Popa%20en%20Pexels_lINEAL%20120X40.2%20%20Phone.jpg'\n  },\n  {\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Daria%20Shevtsova%20en%20Pexels.jpg'\n  }\n]\n  const handleChange = (event, newValue) => {\n\n    if (newValue === 0) {\n      setOpenArts(true);\n      setOpenModal(false);\n      setOpenPrixers(false);\n    } else if (newValue === 1) {\n      setOpenModal(false);\n      setOpenPrixers(true);\n      setOpenArts(false);\n    } else if (newValue === 2) {\n      setOpenModal(true);\n      setOpenPrixers(false);\n      setOpenArts(false);\n    } else {\n      setOpenModal(false);\n      setOpenPrixers(false);\n      setOpenArts(false);\n    }\n    setTabValue(newValue);\n  };\n\n  // useEffect(() => {\n  //   if (prixerUsername == 'all') {\n  //     const base_url = process.env.REACT_APP_BACKEND_URL + \"/art/random\";\n\n  //     axios.get(base_url)\n  //       .then(response => {\n  //         // if (tiles.length != response.data.arts.length) {\n  //           setTiles(response.data.arts);\n  //         // }\n  //       });\n  //   }\n  // });\n\n  const getImagesForTheCarousel = () =>\n  {\n    const URI = process.env.REACT_APP_BACKEND_URL +'/admin/preferences/carousel';\n    fetch(URI)\n    .then(res => res.json()\n    .then(data => { setImgsDesktop({imgs: data.imagesCarousels})})\n    .catch(err => console.error(`Your request is wrong: ${err}`)))\n    .catch(err => console.error(err))\n  }\n\n  const handleGallery = (e) => {\n    e.preventDefault();\n    history.push({pathname:\"/galeria\"});\n  };\n\n  const handleProductCatalog = (e) => {\n    e.preventDefault();\n    history.push({pathname:\"/productos\"});\n  };\n\n  useEffect(() => \n  {\n    getImagesForTheCarousel();\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Container component=\"main\" maxWidth=\"s\" className={classes.paper}>\n        <CssBaseline />\n        <Grid>\n          <AppBar prixerUsername={prixerUsername} />\n        </Grid>\n        <main>\n          <Card className={classes.card} style={{ display: 'flex',\n           position: 'relative', \n           width: '100vw', \n           marginLeft: isDesktop ? '-24px' : '-16px' , \n           marginLeft: isDeskTop ? '-24px' : '-16px',\n           height: '100vh'}}>\n            <div className={classes.CarouselContent}>\n              <Carousel \n              stopAutoPlayOnHover={false}\n              animation='slide'\n              duration={500}\n              fullHeightHover={false}\n              style={{marginTop: isDesktop ? '0' : '-40px'}}\n              IndicatorIcon={<MaximizeIcon/>}\n              NextIcon={<ArrowForwardIosIcon style={{fontSize: '3rem'}} />}\n              PrevIcon={<ArrowBackIosIcon style={{fontSize: '3rem'}}/>}\n              navButtonsProps={\n                {\n                  style: {\n                    backgroundColor: 'rgba(0, 0, 0, 0.1)',\n                    width: '98%',\n                    height: '100vh',\n                    marginTop: '-50vh',\n                    borderRadius: '0',\n                    marginLeft: '1px'\n                  }\n                }\n              }\n              indicatorContainerProps={\n                {\n                  style:{\n                    marginTop: isDesktop ? '-70px' : '-100px',\n                    position: 'absolute'\n                  }\n                }\n              }\n              >\n                {\n                  isDesktop ?\n                imgsDesktop.imgs.map((img, key_id) => \n                {\n                  return(\n                    <div className={classes.heroContent} key={key_id} style={{ backgroundImage: 'url(' + img.carouselImages + ')', backgroundSize: 'cover', backgroundPosition: 'top', marginTop: '-24px'}} ></div>\n                  )\n                })\n                 :\n                 imgsMobile.map((img, key_id) => \n                 {\n                  return(\n                    <div className={classes.heroContent} key={key_id} style={{ backgroundImage: 'url(' + img.url + ')', backgroundSize: 'cover', backgroundPosition: 'left'}}></div>\n                  )\n                 })\n                }\n                 </Carousel>\n            </div>\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around', color: '#404e5c', backgroundColor: '#fff', width: '100%', minHeight: 50, bottom: 0, position: 'absolute', margin: 0, padding: 10, }}>\n              <div style={{ left: 10, alignItems: 'center', width: '400px' }}>\n                <Typography component=\"h1\" variant=\"h1\" align=\"left\" style={{ fontSize: '1.7em', paddingLeft: 10, textAlign: 'center' }} gutterBottom>\n                      Encuentra el <strong>cuadro</strong> ideal para ti.\n                </Typography>\n              </div>\n              <div style={{ display: 'flex', height: '100%', alignItems: 'center', justifyContent: 'space-between' }}>\n                <div>\n                  <Grid item>\n                    <Button variant=\"contained\" color=\"white\" style={{ width: 85, color: '#404e5c', fontSize: 13 }} onClick={handleGallery}>\n                     Galería\n                    </Button>\n                  </Grid>\n                </div>\n                <div>\n                  <Grid item style={{ marginLeft: 10 }}>\n                    <Button variant=\"contained\" color=\"white\" style={{ width: 85, color: '#404e5c', fontSize: 13 }} onClick={handleProductCatalog}>\n                      Productos\n                    </Button>\n                  </Grid>\n                </div>\n                <div>\n                  <Grid item style={{ marginLeft: 10 }}>\n                    <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{ width: 105, color: '#ffffff', fontSize: 13 }}\n                    onClick={(e)=>{window.open(utils.generateWaMessage(), '_blank');}}\n                    >\n                      <WhatsAppIcon/> Whatsapp\n                    </Button>\n                  </Grid>\n                </div>\n              </div>\n            </div>\n          </Card>\n          <Container className={classes.cardGrid} maxWidth=\"xl\">\n            {/* End hero unit */}\n            {/* {scrolledTop ?\n              <Grid container spacing={1} style={{ position: 'fixed', top: 10 }}>\n                <Paper square className={classes.iconTabs}>\n                  <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"primary\"\n                    textColor=\"secondary\"\n                    aria-label=\"icon label tabs example\"\n                  >\n                    <Tab icon={<PhotoLibraryIcon />} label=\"ARTES\" />\n                    <Tab icon={<FavoriteIcon />} label=\"PRIXERS\" />\n                    <Tab icon={<PhoneIcon />} label=\"TE ASESORAMOS\" />\n                  </Tabs>\n                </Paper>\n              </Grid>\n              : */}\n              <Grid container spacing={1}>\n                <Paper square className={classes.iconTabs}>\n                  <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"primary\"\n                    textColor=\"secondary\"\n                    aria-label=\"icon label tabs example\"\n                  >\n                    <Tab icon={<PhotoLibraryIcon />} label=\"ARTES\" />\n                    <Tab icon={<FavoriteIcon />} label=\"PRIXERS\" />\n                    <Tab icon={<PhoneIcon />} label=\"TE ASESORAMOS\" />\n                    {/* <Tab icon={<PersonPinIcon />} label=\"CONFÍA EN PRIX\" /> */}\n                  </Tabs>\n                </Paper>\n              </Grid>\n            {/* } */}\n            {\n              openArts &&\n              // <Suspense fallback={<div>Loading...</div>}>\n              <ArtsGrid prixerUsername={null} />\n              // </Suspense>\n            }\n            {\n              openPrixers &&\n              // <Suspense fallback={<div>Loading...</div>}>\n              <PrixersGrid />\n              // </Suspense>\n            }\n          </Container>\n        </main>\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Si quieres convertirte en un Prixer <a target='blank' href='https://prixelart.com/registrar'>regístrate</a>.\n        </Typography>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            <a target='blank' href='https://instagram.com/prixelart'><InstagramIcon /></a>\n        </Typography>\n          <Copyright />\n        </footer>\n        {/* End footer */}\n      </Container>\n        {\n          openArtFormDialog &&\n          <ArtUploader  \n            openArtFormDialog={openArtFormDialog}\n            setOpenArtFormDialog={setOpenArtFormDialog} \n            />\n        }\n        {\n          JSON.parse(localStorage.getItem('token')) &&\n          JSON.parse(localStorage.getItem('token')).username &&\n          <Grid className={classes.float}>\n            <FloatingAddButton \n            setOpenArtFormDialog={setOpenArtFormDialog} \n            />\n          </Grid>\n        }\n      {\n        openModal &&\n        <SimpleDialog arts={openArts} setTabValue={setTabValue} setArts={setOpenArts} open={openModal} setOpen={setOpenModal} />\n      }\n    </React.Fragment>\n  );\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/passwordChange/passwordChange.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/passwordReset/passwordReset.jsx",["355"],"//Llevar el Password a un componente propio.\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nimport validations from '../../utils/validations';\nimport Copyright from '../../sharedComponents/Copyright/copyright';\n\n//material-ui\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport clsx from 'clsx';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 90,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function PasswordReset(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [newPassword, setNewPassword] = useState('');\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const token = props.match.params.token;\n  const [backdrop, setBackdrop] = useState(true);\n\n  //Error states.\n  const [newPasswordError, setNewPasswordError] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const [snackBarError, setSnackBarError] = useState(false);\n\n//FALTA AGREGAR AQUI LA VALIDACION DE QUE EL LINK EXISTE.\n  useEffect(()=>{\n\n    if(!token) {\n        setErrorMessage('Token inválido o expirado. Por favor inténtalo de nuevo.');\n        setSnackBarError(true);\n    } else {\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/pw-token-check\";\n        const data= {\n          'token': token\n          };\n        axios.post(base_url,data)\n        .then(response =>{\n            if(!response.data.success){\n                setErrorMessage(response.data.info);\n                setSnackBarError(true);\n            } else {\n                setBackdrop(false);\n            }\n        })\n        .catch(error =>{\n            console.log(error.response)\n        })\n      }\n\n  });\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    if((!newPassword)) {\n      setErrorMessage('Por favor completa todos los campos requeridos.');\n      setSnackBarError(true);\n    } else {\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/reset-password\";\n    const data= {\n      'token': token,\n      'newPassword': newPassword\n      };\n    axios.post(base_url,data)\n    .then(response =>{\n        if(!response.data.success){\n          setNewPasswordError(true);\n          setErrorMessage(\"Por favor intentar nuevamente\");\n          setSnackBarError(true);\n        } else {\n          setErrorMessage(response.data.info);\n          setSnackBarError(true);\n          history.push({pathname:'/iniciar'});\n        }\n    })\n    .catch(error =>{\n        console.log(error.response)\n    })\n  }\n   } \n\n//New password\nconst handleNewPasswordChange = (e)=> {\n    if(validations.isAValidPassword(e.target.value)) {\n      setNewPassword(e.target.value); \n      setNewPasswordError(false);\n      setSnackBarError(false);\n    } else {\n      setNewPassword(e.target.value); \n      setNewPasswordError(true); \n      setErrorMessage('Disculpa, tu contraseña nueva debe tener entre 8 y 15 caracteres, incluyendo al menos: una minúscula, una mayúscula, un número y un caracter especial.');\n      setSnackBarError(true);\n    }\n   }\n\n    const handleClickShowNewPassword = () => {\n      setShowNewPassword(!showNewPassword);\n    };\n  \n    const handleMouseDownNewPassword = (event) => {\n      event.preventDefault();\n    };\n//END New password\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <Backdrop className={classes.backdrop} open={backdrop}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Cambia tu contraseña\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n              <InputLabel htmlFor=\"new-password\">Contraseña nueva</InputLabel>\n              <OutlinedInput\n                id=\"new-password\"\n                type={showNewPassword ? 'text' : 'password'}\n                value={newPassword}\n                label=\"Contraseña nueva\"\n                error={newPasswordError}\n                onChange={handleNewPasswordChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowNewPassword}\n                      onMouseDown={handleMouseDownNewPassword}\n                      edge=\"end\"\n                    >\n                      {showNewPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            value=\"submit\"\n          >\n            Cambiar contraseña\n          </Button>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n      <Snackbar\n          open={snackBarError}\n          autoHideDuration={6000}\n          message={errorMessage}\n          className={classes.snackbar}\n        />\n    </Container>\n  );\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/fullscreenPhoto/fullscreenPhoto.jsx",["356","357","358","359","360"],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/adminMain.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/validations.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/utils.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/Copyright/copyright.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/floatingAddButton/floatingAddButton.jsx",["361"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport axios from 'axios';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      // margin: theme.spacing(1),\n      margin: 0,\n      top: 'auto',\n      // marginLeft:333,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed'\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  uwStyles: {\n    palette: {\n        window: \"#ffffff\",\n        sourceBg: \"#f4f4f5\",\n        windowBorder: \"#90a0b3\",\n        tabIcon: \"#000000\",\n        inactiveTabIcon: \"#d33f49\",\n        menuIcons: \"#555a5f\",\n        link: theme.palette.primary.main,\n        action: \"#339933\",\n        inProgress: theme.palette.primary.main,\n        complete: \"#339933\",\n        error: \"#cc0000\",\n        textDark: \"#000000\",\n        textLight: \"#fcfffd\"\n    },\n    fonts: {\n        default: null,\n        \"sans-serif\": {\n            url: null,\n            active: true\n        }\n    }\n  }\n}));\n\nexport default function FloatingAddButton(props) {\n  const classes = useStyles();\n  \n  const handleClick = ()=> {\n    props.setOpenArtFormDialog(true);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleClick}>\n        <AddPhotoAlternateIcon/>\n      </Fab>\n    </div>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/appBar/appBar.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/artUploader/artUploader.jsx",["362","363","364","365","366","367","368","369","370","371","372"],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/Preferences.jsx",["373","374"],"import { React, useState, useEffect} from 'react'\nimport SimpleTabs from './tabPreferences'\n\n\nexport default function Preferences(props)\n{\n    return(\n    <>\n        <SimpleTabs />\n    </>\n    )\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/orders/orders.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/orders/orderServices.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/tabPreferences.jsx",["375","376"],"import { React, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport CarouselAdmin from \"./preferencesCarousel\";\nimport Terms from \"./preferenceTerms\";\nimport TermsAndConditions from \"./preferenceTerms\";\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    \"margin-left\": \"60px\",\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange}>\n          <Tab label=\"Carrusel\" />\n          <Tab label=\"Términos y condiciones\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CarouselAdmin />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TermsAndConditions />\n      </TabPanel>\n    </div>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/updateOrder.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/createOrder/createOrder.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/artUploader/aspectRatioSelector.jsx",["377","378","379","380","381","382","383","384","385","386"],"import React, { useEffect, useImperativeHandle } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useCallback } from 'react';\nimport EasyCropper from './easyCropper'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Typography } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport getCroppedImg from '../../utils/cropImage';\nimport CropIcon from '@material-ui/icons/Crop';\n\nconst useStyles = makeStyles((theme) => ({\n    iconTabs: {\n      flexGrow: 1,\n      width: '100%',\n      margin: 'auto',\n      marginBottom: 50\n    },\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'left',\n      // maxWidth: 850,\n      flexGrow: 1,\n      overflow: 'visible'\n    },\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    cardGrid: {\n        position: 'relative'\n    },\n    img: {\n      maxWidth: '100%',\n      maxHeight: '200px',\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain',\n      objectPosition: '50% 50%'\n    },\n    tab: {\n        minWidth: 100\n    },\n    button: {\n        width: \"10px\",\n    }\n}));\n\n\nexport default function AspectRatioSelector(props) {\n    const { art, croppedArt, setCroppedArt } = props;\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(1);\n    const croppedArtTemp = croppedArt;\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n\n    //Error states.\n    const [errorMessage, setErrorMessage] = useState();\n    const [snackBarAction, setSnackBarAction] = useState();\n    const [snackBarError, setSnackBarError] = useState(false);\n\n    useEffect(()=>{\n    });\n\n    const handleChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\nconst updateCrop = (i)=> {    \n    croppedArtTemp[i].thumb = '';\n    croppedArtTemp[i].cropped = false;\n    setCroppedArt([...croppedArtTemp]);\n\n}\n\n\n  const handleCrop = useCallback(async (i) => {\n    try {\n      const { croppedImg, croppedImgFile } = await getCroppedImg(art,croppedAreaPixels)\n      croppedArtTemp[i].thumb = croppedImg;\n      croppedArtTemp[i].thumbFile = croppedImgFile;\n      croppedArtTemp[i].cropped = true;\n      croppedArtTemp[i].croppedAreaPixels = croppedAreaPixels;\n      setCroppedArt([...croppedArtTemp]);\n    } catch (e) {\n      console.error(e)\n    }\n  }, [croppedAreaPixels])\n\n\n    return (\n        <div className={classes.root}>\n        {\n            tabValue === 0 ?\n            <Grid item xs={12} sm={12} md={12} style={{position:'relative', height:300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\n                <label htmlFor=\"inputfile\" style={{cursor:\"pointer\"}}>\n                    <Tooltip title={\"Carga tu arte con un mínimo de 1080px tanto de ancho como de alto. Tu Arte debe pesar máximo 5Mb y estar en formato .jpeg o .png\"}>\n                        <img className={classes.img} alt=\"Uploaded\" src={art} />\n                    </Tooltip>\n                </label>\n            </Grid>\n            :\n            croppedArt &&\n            croppedArt.map((ar, index)=>(\n            ar.id === tabValue &&\n            <Grid item xs={12} sm={12} md={12} style={{position:'relative', height: 300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\n                {\n                croppedArt[index].thumb == '' ?\n                        <EasyCropper \n                        art={art}\n                        ar={ar}\n                        croppedArt={croppedArt}\n                        setCroppedArt={setCroppedArt}\n                        index={index}\n                        setCroppedAreaPixels={setCroppedAreaPixels}\n                        />\n                :\n                <Grid item xs={12} sm={12} md={12} style={{position:'relative', height: 300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\n                        <Tooltip title={\"Genera el recorte para recomendar a tus clientes las mejores secciones de tu arte.\"}>\n                            <img className={classes.img} alt=\"Uploaded\" src={croppedArtTemp[index].thumb} />\n                        </Tooltip>\n                </Grid>\n                }\n                {\n                croppedArt[index].cropped ?\n                <Grid item xs={12} sm={12} md={12} style={{position: 'absolute', right: 5, bottom: 5}}>\n                    \n                    <IconButton color=\"secondary\" aria-label=\"add an alarm\" style={{padding: 0}} onClick={()=>{updateCrop(index)}}>\n                        <Typography>Recortar</Typography>\n                        <CropIcon />\n                    </IconButton>\n                </Grid>\n                :\n                <Grid item xs={12} sm={12} md={12} style={{position: 'absolute', right: 5, bottom: 5, zIndex: 20}}>\n                    \n                    <IconButton color=\"secondary\" aria-label=\"add an alarm\" style={{padding: 0}} onClick={()=>{handleCrop(index)}}>\n                        <Typography>Listo</Typography>\n                        <CheckCircleOutlineIcon />\n                    </IconButton>\n                </Grid>\n                }\n            </Grid>\n        ))\n        }\n            {/* <Grid xs={12} sm={12} md={12}><Typography>Selecciona cómo quieres recomendar el arte a tus clientes:</Typography></Grid> */}\n            <Grid xs={12} sm={12} md={12} style={{ maxHeight: 80}}>\n                <Paper square className={classes.iconTabs}>\n                    <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"primary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    >\n                    \n                    <Tab className={classes.tab} icon={<PhotoLibraryIcon />} label=\"Original\" />\n                    {\n                    croppedArt &&\n                    croppedArt.map((ar)=>(\n                        <Tab className={classes.tab} icon={<PhotoLibraryIcon />} label={ar.name} id={ar.id} />\n                    ))\n                    }\n                    </Tabs>\n                </Paper> \n            </Grid>\n          </div>\n  )\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/preferenceTerms.jsx",["387","388"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    width: \"100%\",\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = async (event) => {\n    const base_url =\n      process.env.REACT_APP_BACKEND_URL + \"/termsAndConditions/update\";\n    const response = await axios.put(base_url, { termsAndConditions: value });\n  };\n  const setValueText = (event) => {\n    setValue(event.target.value);\n  };\n\n  useEffect(() => {\n    const base_url =\n      process.env.REACT_APP_BACKEND_URL + \"/termsAndConditions/read\";\n    axios\n      .get(base_url)\n      .then((response) => {\n        setValue(response.data.terms.termsAndConditions);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = (newState) => () => {\n    setState({ open: true, ...newState });\n    handleChange();\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  const buttons = (\n    <React.Fragment>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        style={{ margin: \"14px 30px\" }}\n        onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}\n      >\n        Actualizar\n      </Button>\n    </React.Fragment>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Backdrop className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Paper className={classes.paper}>\n        {\n          <Grid container spacing={2}>\n            {buttons}\n            <Grid item xs={12}>\n              <Box\n                style={{\n                  width: \"100%\",\n                  padding: \"15px\",\n                  textAlign: \"justify\",\n                }}\n              >\n                <Box>\n                  <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Multiline\"\n                    multiline\n                    rows={16}\n                    value={value}\n                    onChange={setValueText}\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n          //)\n        }\n      </Paper>\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"Los términos y condiciones fueron actualizados!\"\n        key={vertical + horizontal}\n      />\n    </div>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/consumerServices.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/preferences/preferencesCarousel.jsx",["389","390","391","392","393","394","395","396","397","398","399","400","401"],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/createOrder/orderDetails.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/Title.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/orderCrud/createOrder/orderBasicInfo.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/utils/cropImage.js",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/artUploader/easyCropper.jsx",["402","403","404","405","406"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop'\n\nconst useStyles = makeStyles((theme) => ({}));\n\n\nexport default function EasyCropper(props) {\n    const  { art, ar, croppedArt, setCroppedArt, index, setCroppedAreaPixels  } = props;\n    const classes = useStyles();\n    const [aspect, setAspect] = useState(croppedArt[index].aspect);\n    const [crop, setCrop] = useState(croppedArt[index].crop);\n    const [zoom, setZoom] = useState(croppedArt[index].zoom);\n    const croppedArtTemp = croppedArt;\n    \n    const onCropComplete = useCallback(async (croppedArea, croppedAreaPixels) => {\n        croppedArtTemp[index].crop.x = croppedAreaPixels.x;\n        croppedArtTemp[index].crop.y = croppedAreaPixels.y;\n        setCroppedAreaPixels(croppedAreaPixels);\n        setCroppedArt(croppedArtTemp);     \n    });\n\n    return (\n        // <div style={{display:'flex', flexDirection:'column', justifyContent:'center'}}>\n            <Cropper\n            image={art}\n            crop={crop}\n            zoom={zoom}\n            aspect={aspect}\n            onCropChange={setCrop}\n            onCropComplete={onCropComplete}\n            onZoomChange={setZoom}\n            />\n        // </div>\n  )\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/products/services.js",["407","408","409","410","411","412","413","414","415","416","417","418"],"\n\nexport const setProductAtts = async (attValue, attributesArr, iProd, iAtt, productsArr, width, height)=> {\n    let att = productsArr;\n    if(att && att.length > 0 && att[iProd] && att[iProd].selection) {\n      att[iProd].selection[iAtt] = attValue;\n    }\n    const pAtt = await getEquation(att[iProd], iProd, att, width, height);\n    return { pAtt: pAtt, att: att }\n    // setTiles(pAtt.pAtt ? [...pAtt.pAtt] : [...pAtt.att]);\n\n  }\n\n\n  export const getAttributes = (products)=> {\n  let lol = products;\n  lol = products.map((p, i)=>{\n    let att = [];\n    p.variants.map((v)=>{\n      if(v.active){\n        if(att.length == 0) {\n        att = [...new Set(v.attributes.flatMap((a) => a))];\n        } else {\n          att.push(...new Set(v.attributes.flatMap((a) => a)));\n        }\n      }\n    });\n    const result = [...new Set(att.flatMap(({name}) => name))];\n    const res1 = [...new Set( \n      result.map( (a)=>{ \n        return  {\n          name: a, \n          value: [...new Set(att.map(v=> { \n            if( ( v.name==a ) && (v.value) ) {\n              return v.value;\n            }\n          }))].filter(a=>a)\n        }\n      })\n    )];\n    p.attributes = res1;\n    p.selection = [];\n    p.selection.length = p.attributes.length;\n\n    return p;\n  });\n  return lol;\n  \n}\n\nexport const structureEquation = (equation, i, width, height)=> {\n  let eq = '';\n  equation.split(/[\\s{}}]+/).map((n, j, arr)=>{\n    if(n=='width'){\n      eq = eq.concat(width[i] || 0);\n    } else if(n=='height'){\n      eq = eq.concat(height[i] || 0);\n    } else {\n      eq = eq.concat(n);\n    }\n  });\n  return eq;\n\n}\n\nexport const getEquation = async (product, iProd, productArr, width, height)=> {\n\n  if( product.selection ){\n    const filteredVars = await product.variants.filter((v, i)=>{\n      if( v.attributes && v.attributes.length != 0 && v.attributes.length == product.selection.length ){\n        return v.attributes.every(a => product.selection.includes(a.value));\n      } else {\n        return false;\n      }\n    });\n    if(filteredVars.length != 0) {\n      if (filteredVars[0].publicPrice.equation && filteredVars[0].prixerPrice.equation ) {\n        productArr[iProd].needsEquation = true;\n        productArr[iProd].publicEquation = eval(structureEquation(filteredVars[0].publicPrice.equation, iProd, width, height) || 0);\n        productArr[iProd].prixerEquation = eval(structureEquation(filteredVars[0].prixerPrice.equation, iProd, width, height) || 0);\n      } else {\n        productArr[iProd].needsEquation = false;\n      }\n    } else {\n      productArr[iProd].needsEquation = false;\n    }\n  } else {\n    productArr[iProd].needsEquation = false;\n    productArr[iProd].publicEquation = ''; \n    productArr[iProd].prixerEquation = ''; \n  }\n\n  return productArr;\n\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/orders/paymentMethods.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/listItems.jsx",["419"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Divider from '@material-ui/core/Divider';\nimport { useHistory } from \"react-router-dom\";\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\nimport Preferences from './preferences/Preferences';\n\nexport default function MainListItems(props){\n  const history = useHistory();\n\n  const handleClick = (value)=>{\n    history.push({pathname:\"/admin/\"+value+\"/read\"});\n  };\n\n  return (\n    <>\n    <div>\n      <ListItem button selected={props.active === 'dashboard'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tablero General\" /> \n         {/* onClick={(e)=>{handleClick('dashboard')}} /> */}\n      </ListItem>\n      <ListItem button selected={props.active === 'product'} >\n        <ListItemIcon>\n          <LocalMallIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Productos\" onClick={(e)=>{handleClick('product')}}  />\n      </ListItem>\n      <ListItem button selected={props.active === 'consumer'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <PeopleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Consumidores\"/> \n        {/* <ListItemText primary=\"Consumidores\" onClick={(e)=>{handleClick('consumer')}}  /> */}\n      </ListItem>\n      <ListItem button selected={props.active === 'payment-method'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Métodos de pago\"/> \n        {/* <ListItemText primary=\"Métodos de pago\" onClick={(e)=>{handleClick('payment-method')}}  /> */}\n      </ListItem>\n      <ListItem button selected={props.active === 'order'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <ReceiptIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Pedidos\"/> \n        {/* <ListItemText primary=\"Pedidos\" onClick={(e)=>{handleClick('order')}}  /> */}\n      </ListItem>\n      <ListItem button selected={props.active === 'prixer'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <LoyaltyIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Prixers\"/>\n        {/* onClick={(e)=>{handleClick('prixer')}}  /> */}\n      </ListItem>\n      <ListItem button selected={props.active === 'parameters'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <BarChartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Parámetros\"  /> \n        {/* onClick={(e)=>{handleClick('parameters')}}  /> */}\n      </ListItem>\n    </div>\n    <Divider />\n    <div>\n      <ListSubheader inset>Configuración</ListSubheader>\n      <ListItem button selected={props.active === 'user'}>\n        <ListItemIcon>\n          <AssignmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Usuarios\" onClick={(e)=>{handleClick('user')}}  />\n      </ListItem>\n      <ListItem button selected={props.active === 'preferences'}>\n        <ListItemIcon>\n          <WebAssetIcon/> \n        </ListItemIcon>\n        <ListItemText primary=\"Preferencias\" onClick={(e)=>{handleClick('preferences')}}  />\n      </ListItem>\n      <ListItem button selected={props.active === 'role'} style={{color: \"gray\"}}>\n        <ListItemIcon>\n          <AssignmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Roles\" /> \n        {/* onClick={(e)=>{handleClick('role')}}  /> */}\n      </ListItem>\n    </div>\n    </>\n  )\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/consumers/consumers.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/products/products.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/dashboard.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/adminUser/adminUser.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/simpleDialog/simpleDialog.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/products/productsGrid.jsx",["420","421","422","423","424","425"],"//[]      17. Búsqueda de Prixers.\n//[]      21. Términos y condiciones.\n//[]      16. Filtros para las búsquedas (Por etiqueta).\n//[]      25. Editar datos de la imagen en la tarjeta del grid grande.\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport { isWidthUp } from '@material-ui/core/withWidth';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport utils from '../utils/utils';\nimport axios from 'axios';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { setProductAtts, getAttributes, getEquation } from './services.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflow: 'hidden',\n    alignContent: \"space-between\",\n    padding: 10,\n    marginTop: 10,\n    width: '50%',\n    backgroundColor: theme.palette.background.paper,\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: 300\n    },\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: 330\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: 330\n    },\n    [theme.breakpoints.up('xl')]: {\n      maxWidth: 330\n    }\n  },\n  gridList: {\n    overflow: 'hidden',\n    padding: 10,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'space-around',\n  },\n  img: {\n    width: '100%'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%'\n  }\n}));\n\nconst getGridListCols = () => {\n  if (isWidthUp('md', 200)) {\n    return 4;\n  }\n\n  return 1;\n}\n\nexport default function ProductGrid(props) {\n  const classes = useStyles();\n  const [tiles, setTiles] = useState();\n  const [width, setWidth] = useState([]);\n  const [height, setHeight] = useState([]);\n\n  useEffect(() => {\n    const base_url = process.env.REACT_APP_BACKEND_URL + \"/product/read-all\";\n    axios.get(base_url)\n      .then(async (response) => {\n        let productsAttTemp1 = response.data.products\n        await productsAttTemp1.map(async (p, iProd, pArr) => {\n          productsAttTemp1 = await getEquation(p, iProd, pArr);\n        });\n        setTiles(getAttributes(productsAttTemp1));\n      });\n  }, []);\n\n  return (\n    <GridList cellHeight={'auto'} className={classes.gridList} cols={getGridListCols()}>\n      {tiles ?\n        tiles.map((tile, iProd, productsArr) => (\n          <Card className={classes.root}>\n            <CardActionArea style={{ alignContent: \"space-between\" }}>\n              <CardMedia>\n                <img src={tile.thumbUrl} className={classes.img} alt=\"product thumbnail\" />\n              </CardMedia>\n              <CardContent>\n                <Typography gutterBottom style={{ padding: 0, marginBotom: 12, width: 10 }} variant=\"h5\" component=\"h2\">\n                  {tile.name}\n                </Typography>\n                <Typography gutterBottom style={{ fontSize: 15, padding: 0, marginBottom: 15 }} variant=\"h5\" component=\"h2\">\n                  {\n                    (JSON.parse(localStorage.getItem('token')) &&\n                      JSON.parse(localStorage.getItem('token')).username) ?\n                      (tile.needsEquation && tile.prixerEquation && tile.prixerEquation != 0) ?\n                        \"PVP: $\" + Math.round(parseFloat(tile.publicEquation)) + \" \\n PVM: $\" + Math.round(parseFloat(tile.prixerEquation)) :\n                        \"PVP: $\" + tile.publicPrice.from + \" - \" + tile.publicPrice.to + \" \\n PVM: $\" + tile.prixerPrice.from + \" - \" + tile.prixerPrice.to\n                      :\n                      (tile.needsEquation && tile.publicEquation && tile.publicEquation != 0) ?\n                        \"PVP: $\" + Math.round(parseFloat(tile.publicEquation)) :\n                        \"PVP: \" + tile.publicPrice.from + \" - \" + tile.publicPrice.to\n                  }\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {tile.description}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            {\n              tile.hasSpecialVar &&\n              <>\n                <CardActions style={{ width: '25%' }}>\n                  {/* <Grid container xs={12} md={12} spacing={2}> */}\n                  <Grid item xs={12} md={12}>\n                    <FormControl variant=\"outlined\" className={classes.form}>\n                      <TextField\n                        variant=\"outlined\"\n                        display=\"inline\"\n                        id=\"width\"\n                        label=\"Ancho\"\n                        name=\"width\"\n                        autoComplete=\"width\"\n                        value={width[iProd]}\n                        onChange={async (e) => {\n                          if (!e.target.value) {\n                            let w = width;\n                            w[iProd] = e.target.value;\n                            setWidth([...w]);\n                            let l = await getEquation(tile, iProd, tiles, width, height);\n                            setTiles([...l]);\n                          } else {\n                            if (/^\\d+$/.test(e.target.value) && e.target.value[0] !== \"0\") {\n                              if (e.target.value && e.target.value != 0) {\n                                let w = width;\n                                w[iProd] = e.target.value;\n                                setWidth([...w]);\n                                let l = await getEquation(tile, iProd, tiles, width, height);\n                                setTiles([...l]);\n                              } else {\n                                let w = width;\n                                w[iProd] = e.target.value;\n                                setWidth([...w]);\n                                let l = await getEquation(tile, iProd, tiles, width, height);\n                                setTiles([...l]);\n                              }\n                            }\n                          }\n                        }}\n                      />\n                    </FormControl>\n                  </Grid>\n                </CardActions>\n                <CardActions style={{ width: '25%' }}>\n                  <Grid item xs={12} md={12}>\n                    <FormControl variant=\"outlined\" className={classes.form}>\n                      <TextField\n                        variant=\"outlined\"\n                        display=\"inline\"\n                        id=\"height\"\n                        label=\"Alto\"\n                        name=\"height\"\n                        autoComplete=\"height\"\n                        value={height[iProd]}\n                        onChange={async (e) => {\n                          if (!e.target.value) {\n                            let h = height;\n                            h[iProd] = e.target.value;\n                            setHeight([...h]);\n                            let l = await getEquation(tile, iProd, tiles, width, height);\n                            setTiles([...l]);\n                          } else {\n                            if (/^\\d+$/.test(e.target.value) && e.target.value[0] !== \"0\") {\n                              if (e.target.value && e.target.value != 0) {\n                                let h = height;\n                                h[iProd] = e.target.value;\n                                setHeight([...h]);\n                                let l = await getEquation(tile, iProd, tiles, width, height);\n                                setTiles([...l]);\n                              } else {\n                                let h = height;\n                                h[iProd] = e.target.value;\n                                setHeight([...h]);\n                                let l = await getEquation(tile, iProd, tiles, width, height);\n                                setTiles([...l]);\n                              }\n                            }\n                          }\n                        }}\n                      />\n                    </FormControl>\n                  </Grid>\n                  {/* </Grid> */}\n                </CardActions>\n              </>\n            }\n            {\n              tile.attributes &&\n              tile.attributes.map((att, iAtt, attributesArr) => (\n                <CardActions key={iAtt} style={{ width: '50%' }}>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <FormControl variant=\"outlined\" className={classes.form} xs={12} sm={12} md={12}>\n                      <InputLabel required id=\"att.name\">{att.name}</InputLabel>\n                      <Select\n                        labelId=\"artTypeLabel\"\n                        id=\"artType\"\n                        value={tile.selection && tile.selection[iAtt]}\n                        onChange={\n                          async (e) => {\n                            const pAtts = await setProductAtts(e.target.value, attributesArr, iProd, iAtt, productsArr, width, height);\n\n                            if (pAtts) {\n                              setTiles(pAtts.pAtt ? [...pAtts.pAtt] : [...pAtts.att]);\n                            }\n                          }\n                        }\n                        label={att.selection}\n                      >\n                        <MenuItem value=\"\">\n                          <em></em>\n                        </MenuItem>\n                        {\n                          att.value &&\n                          att.value.map((n, i) => (\n                            <MenuItem key={n} value={n}>{n}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </CardActions>\n              ))\n            }\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" onClick={(e) => { window.open(utils.generateWaProductMessage(tile), '_blank'); }}>\n                Información <WhatsAppIcon />\n              </Button>\n            </CardActions>\n            <CardActions>\n              {\n                tile.variants &&\n                tile.variants.map((v) => {\n                  if (v.attributes) {\n                    const test = v.attributes.reduce((r, a) => {\n                      return (a.name in tile.attributes) === true\n                    }, true)\n                  }\n                })\n              }\n            </CardActions>\n          </Card>\n        )\n        )\n        :\n        <h1>Pronto encontrarás los productos ideales para ti.</h1>\n      }\n    </GridList>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/grid/grid.jsx",["426"],"//[]      17. Búsqueda de Prixers.\n//[]      21. Términos y condiciones.\n//[]      16. Filtros para las búsquedas (Por etiqueta).\n//[]      25. Editar datos de la imagen en la tarjeta del grid grande.\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Img from \"react-cool-img\";\n\nimport utils from '../../utils/utils';\nimport SearchBar from '../../sharedComponents/searchBar/searchBar.jsx';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    // maxWidth: 850,\n    paddingTop: 15\n  },\n  img: {\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 180\n    },\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 300,\n      maxHeight: 450\n    },\n    [theme.breakpoints.up('lg')]: {\n      minHeight: 350,\n      maxHeight: 450\n    },\n    [theme.breakpoints.up('xl')]: {\n      minHeight: 450,\n      maxHeight: 450\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function Grid(props) {\n  const classes = useStyles();\n  const [tiles, setTiles] = useState([]);\n  const history = useHistory();\n  let globalParams = new URLSearchParams(window.location.search);\n  const [searchValue, setSearchValue] = useState(globalParams.get('name') || null);\n  const [backdrop, setBackdrop] = useState(true);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n  useEffect(()=> {\n    if(props.prixerUsername || globalParams.get('prixer')) {\n      if(searchValue) {\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-username-by-query\";\n        const params = {\n          text: searchValue,\n          username: props.prixerUsername || globalParams.get('prixer')\n        }\n        axios.get(base_url, {params})\n        .then(response =>{\n          setTiles(utils.shuffle(response.data.arts));\n          setBackdrop(false);\n        });\n      } else {\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-prixer\";\n        const body = {\n          username: props.prixerUsername || globalParams.get('prixer')\n        }\n        axios.post(base_url, body)\n        .then(response =>{\n          setTiles(utils.shuffle(response.data.arts));\n          setBackdrop(false);\n        });\n      }\n    } else if(searchValue){\n      const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-query\";\n      const params = {\n        text: searchValue\n      }\n      axios.get(base_url, {params})\n      .then(response =>{\n        setTiles(utils.shuffle(response.data.arts));\n        setBackdrop(false);\n      });\n    } else {\n      const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-all\";\n      axios.get(base_url)\n      .then(response =>{\n        setTiles(utils.shuffle(response.data.arts));\n        setBackdrop(false);\n      });\n    }\n  }, [searchValue]);\n\nconst handleFullImage = (e, tile)=> {\n  history.push({pathname:\"/\"+tile.prixerUsername+'/art/'+e.target.id});\n}\n\nconst searchPhotos = (e, queryValue) => {\n  setSearchValue(queryValue);\n  if(props.prixerUsername || globalParams.get('prixer')){\n    if(globalParams.get('prixer')){\n      history.push({pathname:'/galeria/s?prixer='+globalParams.get('prixer')+'&name='+queryValue});\n    } else {\n      history.push({pathname:'/galeria/s?prixer='+props.prixerUsername+'&name='+queryValue});\n    }\n  } else {\n    history.push({pathname:'/galeria/s?name='+queryValue});\n  }\n  e.preventDefault();\n};\n\n  return (\n    <div className={classes.root}>\n        <Backdrop className={classes.backdrop} open={backdrop}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <SearchBar searchPhotos={searchPhotos} searchValue={searchValue} setSearchValue={setSearchValue}/>\n      <GridList cellSize={\"auto\"}  className={classes.gridList} cols={isDesktop ? 4 : 2 } >\n         {tiles ?\n         tiles.map((tile) => (\n          <GridListTile key={tile.artId} cols={1} onClick={(e)=>{handleFullImage(e, tile)}} className={classes.img}>\n            <Img\n            placeholder=\"/imgLoading.svg\"\n            style={{ backgroundColor: \"#eeeeee\", height: '100%' }}\n            src={tile.squareThumbUrl}\n            debounce={1000}\n            cache\n            error='/imgError.svg'\n            // srcSet={tile.smallThumbUrl + ' 600w, ' + tile.mediumThumbUrl + ' 850w, ' + tile.largeThumbUrl + ' 1300w'}\n            // sizes=\"(min-width: 1600px) 850px, (min-width: 960px) 450px, (min-width: 640px) 400px, 200px\"\n            sizes=\"(min-width: 1600px) 850px, (min-width: 960px) 450px, (min-width: 640px) 200px, (min-width: 375px) 80px\"\n            alt={tile.title}\n            id={tile.artId}\n            />\n          </GridListTile>\n        ))\n        :\n        <h1>Pronto encontrarás todo el arte que buscas.</h1>\n      }\n      </GridList>\n    </div>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/prixerGrid/prixerGrid.jsx",["427"],"import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport utils from '../../utils/utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    // maxWidth: \"70%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: '100%',\n    height: 'auto'\n  },\n  img: {\n    width: '100%',\n    height: '100%'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '81.25%',\n    borderRadius: '50%',\n    margin: '28px'\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n}));\n\n\nexport default function PrixerGrid(props) {\n  const theme = useTheme();\n  const classes = useStyles();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isDeskTop = useMediaQuery(theme.breakpoints.up('sm'));\n  const [tiles, setTiles] = useState([]);\n  const history = useHistory();\n  const [backdrop, setBackdrop] = useState(true);\n\n\n  useEffect(()=> {\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/prixer/read-all-full\";\n\n    axios.get(base_url)\n      .then(response =>{\n        setTiles(utils.shuffle(response.data.prixers));\n        setBackdrop(false);\n    });\n}, []);\n\n  return (\n    <div className={classes.root}>\n    <Backdrop className={classes.backdrop} open={backdrop}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n    <Grid container spacing={1}>\n    {tiles &&\n    tiles.filter(tile => tile.avatar).map((tile) =>\n      (\n        isDesktop ?\n       <Grid item key={tile._id} xs={6} sm={6} md={3}>\n            <Card className={classes.card}>\n            <CardMedia\n                alt={tile.title}\n                height= '100'\n                image={tile.avatar}\n                className={classes.cardMedia}\n                title={tile.title}\n            />\n            <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {tile.firstName} {tile.lastName}\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{fontSize: 16}}>\n                  {tile.username} - {tile.specialty}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={e => history.push({pathname:\"/\"+tile.username})}>\n                Explorar\n                </Button>\n            </CardActions>\n            </Card>\n        </Grid>\n        :\n         <Grid item key={tile._id} xs={12} sm={1} md={2}>\n              <Card className={classes.card}>\n              <CardMedia\n                  alt={tile.title}\n                  height= '100'\n                  image={tile.avatar}\n                  className={classes.cardMedia}\n                  title={tile.title}\n              />\n              <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {tile.firstName} {tile.lastName}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{fontSize: 16}}>\n                    {tile.username} - {tile.specialty}\n                  </Typography>\n              </CardContent>\n              <CardActions>\n                  <Button size=\"small\" color=\"primary\" onClick={e => history.push({pathname:\"/\"+tile.username})}>\n                  Explorar\n                  </Button>\n              </CardActions>\n              </Card>\n          </Grid>\n          ,\n        isDeskTop ?\n        <Grid item key={tile._id} xs={6} sm={6} md={3}>\n             <Card className={classes.card}>\n             <CardMedia\n                 alt={tile.title}\n                 height= '100'\n                 image={tile.avatar}\n                 className={classes.cardMedia}\n                 title={tile.title}\n             />\n             <CardContent className={classes.cardContent}>\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                   {tile.firstName} {tile.lastName}\n                 </Typography>\n                 <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{fontSize: 16}}>\n                   {tile.username} - {tile.specialty}\n                 </Typography>\n             </CardContent>\n             <CardActions>\n                 <Button size=\"small\" color=\"primary\" onClick={e => history.push({pathname:\"/\"+tile.username})}>\n                 Explorar\n                 </Button>\n             </CardActions>\n             </Card>\n         </Grid>\n         :\n         <Grid item key={tile._id} xs={12} sm={1} md={6}>\n              <Card className={classes.card}>\n              <CardMedia\n                  alt={tile.title}\n                  height= '100'\n                  image={tile.avatar}\n                  className={classes.cardMedia}\n                  title={tile.title}\n              />\n              <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {tile.firstName} {tile.lastName}\n                  </Typography>\n                  <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{fontSize: 16}}>\n                    {tile.username} - {tile.specialty}\n                  </Typography>\n              </CardContent>\n              <CardActions>\n                  <Button size=\"small\" color=\"primary\" onClick={e => history.push({pathname:\"/\"+tile.username})}>\n                  Explorar\n                  </Button>\n              </CardActions>\n              </Card>\n          </Grid>\n\n    ))}\n      </Grid>\n    </div>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/register/Terms.jsx",["428"],"import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n  underline: {\n    textDecoration: \"underline\",\n  },\n}));\n\nexport default function Terms() {\n  return (\n    <div>\n      <Typography variant=\"h6\" align=\"center\" style={{ fontWeight: \"bold\" }}>\n        CONVENIO DE RELACIÓN ENTRE LOS ARTISTAS Y LA COMPAÑÍA\n      </Typography>\n      <Typography>\n        <br />\n        Entre,{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>\n          Prixelart C.A., (RIF N° J-408253143)\n        </span>\n        , Sociedad Mercantil domiciliada en Caracas e inscrita por ante el\n        Registro Mercantil Quinto de la Circunscripción Judicial del Distrito\n        Capital en fecha 6 de julio de 2016, bajo el No. 9, Tomo 191-A,\n        representada en este acto por Diego Henríquez, venezolano, mayor de\n        edad, domiciliado en Caracas y titular de la cédula de identidad Nº\n        19.874.891 y Ricardo Capuz, venezolano, mayor de edad, domiciliado en\n        Caracas y titular de la cédula de identidad N° 21.015.149,\n        suficientemente facultados para este acto según se evidencia de Director\n        de Operaciones y Director de Tecnología correspondientemente, en lo\n        sucesivo denominada LA COMPAÑÍA, por una parte y por la otra, EL\n        ARTISTA, y quienes actuando conjuntamente se denominarán LAS PARTES.\n        <br />\n        <br />\n        Ambas partes <span style={{ fontWeight: \"bold\" }}>RESUELVEN:</span>{\" \"}\n        Celebrar el presente Convenio de Relación entre LA ARTISTA y LA\n        COMPAÑÍA, el cual se regirá por las siguientes cláusulas:\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>PRIMERA</span>:\n        Definiciones.\n        <br />\n        <br />\n        A los efectos del presente Contrato:\n        <br />\n        <br />\n        Se entiende por EL ARTISTA, a todo persona natural o jurídica que provea\n        de arte a LA COMPAÑÍA con fines comerciales, el cual incluye, pero no es\n        limitado a: (arte digital, diseño gráfico, fotografía, diseños\n        digitales, planos, bocetos, bosquejos, prototipos, archivos multimedia o\n        cualquier forma de expresión artística). Se entiende por LA COMPAÑÍA, a\n        la persona jurídica con la facultad de comercializar el arte o las obras\n        de EL ARTISTA, a través de medios electrónicos y físicos, el cual\n        incluye, pero no es limitado a: (página web, redes sociales o cualquier\n        medio electrónico, así como ventas directas en exposiciones, bazares,\n        ferias, galerías o cualquier establecimiento comercial propio o de\n        tercero con el que LA COMPAÑÍA mantenga relación comercial, para\n        cualquiera de los casos anteriores).\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>SEGUNDA</span>:\n        Declaración de propiedad intelectual.\n        <br />\n        <br />\n        EL ARTISTA declara mediante el presente convenio que todo arte u obra\n        suministrada a LA COMPAÑÍA es de su propiedad, el cual cumple con toda\n        normativa nacional o internacional que haga referencia a la propiedad\n        intelectual, así mismo declara que es responsable de todo daño o\n        perjuicio que su obra genere a terceros, liberando a LA COMPAÑÍA de\n        cualquier responsabilidad.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>TERCERA</span>: Derechos\n        de autor.\n        <br />\n        <br />\n        LA COMPAÑÍA conviene en que ella, sus empleados, relacionados y agentes,\n        de ser el caso, respetarán todos los derechos de autor de EL ARTISTA,\n        limitando las cantidades a ser producidas de sus obras a la (s) orden\n        (es) de compra/producción de LA COMPAÑÍA. De producirse excedentes,\n        éstos no podrán ser comercializados por nadie sin el consentimiento y\n        aprobación de EL ARTISTA.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>CUARTA</span>:\n        Notificaciones.\n        <br />\n        <br />\n        Cualquier notificación que deba hacerse en virtud del presente Convenio\n        se hará por escrito y se considerará efectuada cuando sea entregada\n        personalmente o por correo certificado, siempre con acuse de recibo, en\n        las direcciones que aparecen a continuación o en aquellas otras\n        direcciones que LAS PARTES hubieren suministrado por escrito de la\n        manera antes dispuesta: LA COMPAÑÍA: Prixelart, C.A.\n        Tlf:+58(212)7142021. Correo: hola@prixelart.com EL ARTISTA: Mirian\n        Pereira. Tlf: +58(426)9213572 / (426)3125628. Correo:\n        carlospunto40@gmail.com.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>QUINTA</span>: Ley\n        Aplicable.\n        <br />\n        <br />\n        Este Convenio se regirá e interpretará de conformidad con las leyes de\n        la República Bolivariana de Venezuela.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>SEXTA</span>: Arbitraje.\n        <br />\n        <br />\n        Toda controversia o diferencia susceptible de transacción por LAS\n        PARTES, no excluida por la ley ni por este convenio de solución mediante\n        arbitraje, que verse sobre la existencia, extensión, interpretación y\n        cumplimiento de las obligaciones derivadas de él, será resuelta mediante\n        arbitraje institucional en la Ciudad de Caracas, Venezuela, en el idioma\n        castellano y de acuerdo con las disposiciones del Reglamento General del\n        Centro de Arbitraje de la Cámara de Comercio de Caracas. El Tribunal\n        Arbitral estará compuesto por tres (3) árbitros, los cuales decidirán\n        conforme a derecho.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>SÉPTIMA</span>:\n        Modificaciones.\n        <br />\n        <br />\n        Este Convenio sólo podrá ser modificado mediante acuerdo por escrito\n        firmado por LAS PARTES.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>OCTAVA</span>: Anulación.\n        <br />\n        <br />\n        Este Convenio sólo podrá ser anulado, cuando una de LAS PARTES así lo\n        decida, mediante un comunicado escrito por correo certificado, con un\n        lapso de un (1) mes de anticipación y sin que esta decisión afecte las\n        negociaciones comerciales que se hayan realizado antes de la emisión de\n        la comunicación escrita.\n        <br />\n        <br />\n        <span style={{ textDecoration: \"underline\" }}>NOVENA</span>: Acuerdo\n        Comercial.\n        <br />\n        <br />\n        LAS PARTES acuerdan que la remuneración, por la reproducción y\n        comercialización de las obras, es del diez porciento (10%) del monto\n        negociado por entre LA COMPAÑÍA y EL CLIENTE, el cual será registrado y\n        reportado mensualmente a EL ARTISTA vía correo electrónico. EL ARTISTA\n        hará entrega de la factura fiscal, una vez que reciba el monto acordado\n        al cabo de 3 días hábiles en físico y/o digital.\n      </Typography>\n    </div>\n  );\n}\n","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/prixerOptions/prixerOptions.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/prixerProfile/userData/userData.jsx",["429","430","431","432"],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/sharedComponents/searchBar/searchBar.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/paymentMethodCrud/createPaymentMethod.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/paymentMethodCrud/updatePaymentMethod.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/paymentMethodCrud/readPaymentMethods.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/readConsumers.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/createConsumer.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/consumerCrud/updateConsumer.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/deposits.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/chart.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/dashboard/orders.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/updateProduct.jsx",["433"],"import React from 'react';\nimport {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from '../adminMain/Title';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport clsx from 'clsx';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from 'react-router-dom';\nimport Variants from '../adminMain/products/variants';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  form: {\n      height: 550\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function UpdateAdmin(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [ active, setActive ] = useState(props.product.active);\n    const [ productName, setProductName ] = useState(props.product.name);\n    const [ description, setDescription ] = useState(props.product.description);\n    const [ category, setCategory ] = useState(props.product.category);\n    const [ considerations, setConsiderations ] = useState(props.product.considerations);\n    // const [fixedPublicPrice, setFixedPublicPrice] = useState('');\n    const [fromPublicPrice, setFromPublicPrice] = useState(props.product.publicPrice.from);\n    const [ toPublicPrice, setToPublicPrice ] = useState(props.product.publicPrice.to);\n    // const [ fixedPrixerPrice, setFixedPrixerPrice ] = useState('');\n    const [ fromPrixerPrice, setFromPrixerPrice ] = useState(props.product.prixerPrice.from);\n    const [ toPrixerPrice, setToPrixerPrice ] = useState(props.product.prixerPrice.to);\n    const [loading, setLoading] = useState(false);\n    const [buttonState, setButtonState] = useState(false);\n    const [showVariants, setShowVariants] = useState(false);\n    const [ activeVCrud, setActiveVCrud ] = useState('read');\n    const [ hasSpecialVar, setHasSpecialVar ] = useState(props.product.hasSpecialVar || false);\n    \n    const [ thumbUrl, setThumbUrl ] = useState(props.product.thumbUrl);\n\n    //Error states.\n    const [errorMessage, setErrorMessage] = useState();\n    const [snackBarError, setSnackBarError] = useState(false);\n\n\n    const handleSubmit = async (e)=> {\n      e.preventDefault();\n      if(!active && \n        !productName && \n        !description && \n        !category && \n        !considerations && \n        // !fixedPublicPrice &&\n        !fromPublicPrice &&\n        !toPublicPrice && \n        // !fixedPrixerPrice &&\n        !fromPrixerPrice &&\n        !toPrixerPrice &&\n        !thumbUrl){\n        setErrorMessage('Por favor completa todos los campos requeridos.');\n        setSnackBarError(true);\n        e.preventDefault();\n      } else {\n        setLoading(true);\n        setButtonState(true);\n        \n        const data = {\n            '_id': props.product._id,\n            'thumbUrl': thumbUrl,\n            'active' : active || false,\n            'name' : productName,\n            'description' : description,\n            'category' : category,\n            'considerations' : considerations,\n            publicPrice: {\n                'from': fromPublicPrice,\n                'to': toPublicPrice,\n            },\n            prixerPrice: {\n                'from': fromPrixerPrice,\n                'to': toPrixerPrice,\n            },\n            hasSpecialVar: hasSpecialVar\n        }\n        \n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/update\";\n        const response = await axios.post(base_url,data);\n        if(response.data.success === false){\n          setLoading(false);\n          setButtonState(false);\n          setErrorMessage(response.data.message);\n          setSnackBarError(true);\n        } else {\n          setErrorMessage('Actualización de producto exitosa.');\n          setSnackBarError(true);\n          history.push('/admin/product/read');\n        }\n      }\n\n    }\n\n    const handleVariantsClick = ()=> {\n        history.push({pathname:\"/admin/product/\"+props.product._id+\"/variant/read\"});\n        setShowVariants(true); \n        props.setProductEdit(false);\n    }\n\n  return (\n    <React.Fragment>\n    {\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress />\n        </Backdrop>\n    }\n        {\n        showVariants ?\n        <>\n        <Grid container justify=\"left\">\n            <Grid item xs={2}>\n                <button href=\"#\" onClick={()=>{setShowVariants(false); props.setProductEdit(true);}}><h2 style={{color:\"rgba(191, 191, 191, 0.5)\", marginTop:0}}>Productos </h2></button>\n            </Grid>\n            <Grid item xs={1}>\n                <button href=\"#\" onClick={()=>{setShowVariants(true); setActiveVCrud('read');}}><h2 style={{color:'#d33f49', marginTop:0}}>Variantes</h2></button>\n            </Grid>\n        </Grid>\n        <Variants product={props.product} activeVCrud={activeVCrud} setActiveVCrud={setActiveVCrud}/>\n        </>\n        :\n        <div>\n        <Grid container justify=\"left\">\n            <Grid item xs={2} style={{color:\"rgba(191, 191, 191, 0.5)\"}}>\n                <Title>Productos </Title>\n            </Grid>\n            <Grid item xs={1}>\n                <a onClick={handleVariantsClick}><h2 style={{color:\"rgba(191, 191, 191, 0.5)\", marginTop:0}}>Variantes</h2></a>\n            </Grid>\n        </Grid>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                    <Grid item xs={12} md={6}>\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            display=\"inline\"\n                            id=\"thumbUrl\"\n                            label=\"ThumbUrl\"\n                            name=\"thumbUrl\"\n                            autoComplete=\"thumbUrl\"\n                            value={thumbUrl}\n                            onChange={(e) => {setThumbUrl(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid container xs={6}>\n                      <Grid item xs={6}>\n                          <Checkbox \n                              checked={active}\n                              color=\"primary\" \n                              inputProps={{ 'aria-label': 'secondary checkbox' }}\n                              onChange={()=>{active?setActive(false):setActive(true)}}\n                          /> Habilitado / Visible\n                      </Grid>\n                      <Grid item xs={6}>\n                          <Checkbox\n                              checked={hasSpecialVar}\n                              color=\"primary\" \n                              inputProps={{ 'aria-label': 'secondary checkbox' }}\n                              onChange={()=>{hasSpecialVar?setHasSpecialVar(false):setHasSpecialVar(true)}}\n                          /> ¿Tiene variables especiales?\n                      </Grid>\n                    </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            display=\"inline\"\n                            id=\"productName\"\n                            label=\"Nombre\"\n                            name=\"productName\"\n                            autoComplete=\"productName\"\n                            value={productName}\n                            onChange={(e) => {setProductName(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            display=\"inline\"\n                            fullWidth\n                            id=\"category\"\n                            label=\"Categoría\"\n                            name=\"category\"\n                            autoComplete=\"category\"\n                            value={category}\n                            onChange={(e) => {setCategory(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            multiline\n                            fullWidth\n                            rows={2}\n                            id=\"description\"\n                            label=\"Descripción\"\n                            name=\"description\"\n                            autoComplete=\"description\"\n                            value={description}\n                            onChange={(e) => {setDescription(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            multiline\n                            rows={2}\n                            id=\"considerations\"\n                            label=\"Consideraciones\"\n                            name=\"considerations\"\n                            autoComplete=\"considerations\"\n                            value={considerations}\n                            onChange={(e) => {setConsiderations(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container style={{marginTop: 20}}>\n                    <Title>PVP</Title>\n                </Grid>\n                <Grid container spacing={2}>\n                {/* <Grid item xs={4} md={4}>\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"fixedPublicPrice\"\n                        label=\"Fijo\"\n                        name=\"fixedPublicPrice\"\n                        autoComplete=\"fixedPublicPrice\"\n                        value={fixedPublicPrice}\n                        onChange={(e) => {setFixedPublicPrice(e.target.value);}}\n                    />\n                    </FormControl>\n                </Grid> */}\n                <Grid item xs={4} md={5}>\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"fromPublicPrice\"\n                        label=\"Desde\"\n                        name=\"fromPublicPrice\"\n                        autoComplete=\"fromPublicPrice\"\n                        value={fromPublicPrice}\n                        onChange={(e) => {setFromPublicPrice(e.target.value);}}\n                    />\n                    </FormControl>\n                </Grid>\n                <Grid item xs={4} md={5}>\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"toPublicPrice\"\n                        label=\"Hasta\"\n                        name=\"toPublicPrice\"\n                        autoComplete=\"toPublicPrice\"\n                        value={toPublicPrice}\n                        onChange={(e) => {setToPublicPrice(e.target.value);}}\n                    />\n                    </FormControl>\n                </Grid>\n                </Grid>\n                <Grid container style={{marginTop: 20}}>\n                    <Title>PVM</Title>\n                </Grid>\n                <Grid container spacing={2}>\n                {/* <Grid item xs={4} md={4}>\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"fixedPrixerPrice\"\n                        label=\"Fijo\"\n                        name=\"fixedPrixerPrice\"\n                        autoComplete=\"fixedPrixerPrice\"\n                        value={fixedPrixerPrice}\n                        onChange={(e) => {setFixedPrixerPrice(e.target.value);}}\n                    />\n                    </FormControl>\n                </Grid> */}\n                <Grid item xs={4} md={5}>\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"fromPrixerPrice\"\n                        label=\"Desde\"\n                        name=\"fromPrixerPrice\"\n                        autoComplete=\"fromPrixerPrice\"\n                        value={fromPrixerPrice}\n                        onChange={(e) => {setFromPrixerPrice(e.target.value);}}\n                    />\n                    </FormControl>\n                </Grid>\n                <Grid item xs={4} md={5}>\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                    <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"toPrixerPrice\"\n                        label=\"Hasta\"\n                        name=\"toPrixerPrice\"\n                        autoComplete=\"toPrixerPrice\"\n                        value={toPrixerPrice}\n                        onChange={(e) => {setToPrixerPrice(e.target.value);}}\n                    />\n                    </FormControl>\n                </Grid>\n                </Grid>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={buttonState} style={{ marginTop: 20}}>\n                Actualizar\n              </Button>\n            </Grid>\n        </form>\n        </div>\n        }\n        <Snackbar\n          open={snackBarError}\n          autoHideDuration={1000}\n          message={errorMessage}\n          className={classes.snackbar}\n        />\n    </React.Fragment>\n  );\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/disableProduct.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/readProducts.jsx",["434"],"import React from 'react';\nimport {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../adminMain/Title';\nimport axios from 'axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fab from '@material-ui/core/Fab';\n\nexport default function ReadProducts(props) {\n    const history = useHistory();\n    const [rows, setRows] = useState();\n\nuseEffect(()=> {\n  const base_url= process.env.REACT_APP_BACKEND_URL + \"/admin/product/read-all\";\n    axios.get(base_url)\n    .then(response =>{\n        setRows(response.data.products);\n    })\n    .catch(error =>{\n        console.log(error);\n    })\n},[]);\n\n  const handleActive = (product, action)=> {\n    props.setProduct(product);\n    history.push('/admin/product/'+action+'/'+product._id);\n  }\n\n  return (\n    <React.Fragment>\n      <Title>Productos</Title>\n        {\n        rows &&\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell align=\"center\">Imagen</TableCell>\n            <TableCell align=\"center\">Nombre</TableCell>\n            <TableCell align=\"center\">Activo</TableCell>\n            <TableCell align=\"center\">Categoría</TableCell>\n            <TableCell align=\"center\">PVP desde-hasta</TableCell>\n            <TableCell align=\"center\">PVM desde-hasta</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {\n        rows &&\n          rows.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell align=\"center\">\n                <Fab color=\"default\" style={{width: 35, height: 35}} aria-label=\"edit\" onClick={(e)=>{handleActive(row, 'update')}}>\n                  <EditIcon/>\n                </Fab>\n              </TableCell>\n              <TableCell align=\"center\"><img alt=\"thumb\" src={row.thumbUrl} style={{width: 50, height: 'auto'}}/></TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"center\">\n                <Checkbox \n                  disabled\n                  checked={row.active}\n                  color=\"primary\" \n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n              </TableCell>\n              <TableCell align=\"center\">{row.category}</TableCell>\n              <TableCell align=\"center\">{row.publicPrice.from}-{row.publicPrice.to}</TableCell>\n              <TableCell align=\"center\">{row.prixerPrice.from}-{row.prixerPrice.to}</TableCell>\n            </TableRow>\n          ))\n        }\n        </TableBody>\n      </Table>\n} \n    </React.Fragment>\n  );\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/createProduct.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/disableAdmin.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/readAdmins.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/updateAdmin.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminCrud/createAdmin.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/adminMain/products/variants.jsx",[],"/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/variants/readVariants.jsx",["435","436","437","438","439","440","441","442","443","444","445","446","447","448"],"import React from 'react';\nimport {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../adminMain/Title';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function ReadVariants(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [rows, setRows] = useState();\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/read\";\n\nuseEffect(()=> {\n    axios.post(base_url, props.product)\n    .then(response =>{\n        response.data.products[0].variants &&\n            setRows(response.data.products[0].variants);\n    })\n    .catch(error =>{\n        console.log(error);\n    })\n},[]);\n\n  const handleActive = (variant, action)=> {\n    props.setVariant(variant);\n    action == 'create' &&\n    history.push('/admin/product'+'/'+props.product._id+'/variant/'+action);\n    action == 'read' &&\n    history.push('/admin/product'+'/'+props.product._id+'/variant/'+action);\n    action == 'update' &&\n    history.push('/admin/product'+'/'+props.product._id+'/variant/'+variant._id+'/'+action);\n  }\n\n  return (\n    <React.Fragment>\n        {\n        rows &&\n      <Table size=\"small\" style={{overflow: 'auto'}}>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell align=\"center\">Imagen</TableCell>\n            <TableCell align=\"center\">Nombre</TableCell>\n            <TableCell align=\"center\">Activo</TableCell>\n            <TableCell align=\"center\">Descripción</TableCell>\n            <TableCell align=\"center\">PVP desde-hasta</TableCell>\n            <TableCell align=\"center\">PVM desde-hasta</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {\n        rows &&\n          rows.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell align=\"center\">\n                <Fab color=\"default\" style={{width: 35, height: 35}} aria-label=\"edit\" onClick={(e)=>{handleActive(row, 'update')}}>\n                  <EditIcon/>\n                </Fab>\n              </TableCell>\n              <TableCell align=\"center\"><img src={row.thumbUrl} style={{width: 50, height: 'auto'}}/></TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"center\">\n                <Checkbox \n                  disabled\n                  checked={row.active}\n                  color=\"primary\" \n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n              </TableCell>\n              <TableCell align=\"center\">{row.description}</TableCell>\n              <TableCell align=\"center\">{row.publicPrice.from}-{row.publicPrice.to}</TableCell>\n              <TableCell align=\"center\">{row.prixerPrice.from}-{row.prixerPrice.to}</TableCell>\n            </TableRow>\n          ))\n        }\n        </TableBody>\n      </Table>\n} \n    </React.Fragment>\n  );\n}","/home/capuzr/development/Prixelart/Web2/S1PR/prixelart-frontend/src/admin/productCrud/variants/createVariant.jsx",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],"import React from 'react';\nimport {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from '../../adminMain/Title';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport clsx from 'clsx';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { nanoid } from 'nanoid';\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function CreateVariant(props) {\n    const classes = useStyles();\n    const [ active, setActive ] = useState(props.variant && props.variant.active || false);\n    const [ attributes, setAttributes ] = useState(props.variant && props.variant.attributes || [{ name:'', value:''}]);\n    const [ buttonAttState, setButtonAttState] = useState();\n    const [ variantName, setVariantName ] = useState(props.variant && props.variant.name || '');\n    const [ description, setDescription ] = useState(props.variant && props.variant.description || '');\n    const [ category, setCategory ] = useState(props.variant && props.variant.category || '');\n    const [ considerations, setConsiderations ] = useState(props.variant && props.variant.considerations || '');\n    const [publicPriceEq, setPublicPriceEq] = useState(props.variant && props.variant.publicPrice.equation || '');\n    const [fromPublicPrice, setFromPublicPrice] = useState(props.variant && props.variant.publicPrice.from || '');\n    const [ toPublicPrice, setToPublicPrice ] = useState(props.variant && props.variant.publicPrice.to || '');\n    const [ prixerPriceEq, setPrixerPriceEq ] = useState(props.variant && props.variant.prixerPrice.equation || '');\n    const [ fromPrixerPrice, setFromPrixerPrice ] = useState(props.variant && props.variant.prixerPrice.from || '');\n    const [ toPrixerPrice, setToPrixerPrice ] = useState(props.variant && props.variant.prixerPrice.to || '');\n    const [loading, setLoading] = useState(false);\n    const [buttonState, setButtonState] = useState(false);\n    const history = useHistory();\n\n    const [ thumbUrl, setThumbUrl ] = useState(props.variant && props.variant.thumbUrl || '');\n\n    //Error states.\n    const [errorMessage, setErrorMessage] = useState();\n    const [snackBarError, setSnackBarError] = useState(false);\n    const [passwordError, setPasswordError] = useState();\n    const [emailError, setEmailError] = useState();\n\n    const insertVariants = (productData, variants)=> {\n        let updatedVariants = productData;\n        updatedVariants.variants = productData.variants.filter((v)=>{ if(v._id != props.variant._id) return v});\n        variants._id = props.variant._id\n        updatedVariants.variants.unshift(variants);\n\n        return updatedVariants;\n    }\n\n\n    const handleSubmit = async (e)=> {\n      e.preventDefault();\n      if(!active && \n        !variantName && \n        !description && \n        !category && \n        !considerations && \n        !publicPriceEq &&\n        !fromPublicPrice &&\n        !toPublicPrice && \n        !prixerPriceEq &&\n        !fromPrixerPrice &&\n        !toPrixerPrice &&\n        !thumbUrl){\n        setErrorMessage('Por favor completa todos los campos requeridos.');\n        setSnackBarError(true);\n        e.preventDefault();\n      } else {\n        setLoading(true);\n        setButtonState(true);\n\n        const productData = props.product;\n\n        const variants = {\n            '_id': props.variant && props.variant._id || nanoid(),\n            'thumbUrl': thumbUrl,\n            'active' : active,\n            'name' : variantName,\n            'description' : description,\n            'category' : category,\n            'considerations' : considerations,\n            publicPrice: {\n                'from': fromPublicPrice,\n                'to': toPublicPrice,\n                'equation': publicPriceEq\n            },\n            prixerPrice: {\n                'from': fromPrixerPrice,\n                'to': toPrixerPrice,\n                'equation': prixerPriceEq\n            }\n        }\n\n        variants.attributes ?\n            variants.attributes.push(...attributes)\n        : variants.attributes = attributes;\n        let updatedWithVariants = {};\n        \n        if(props.variant) {\n            updatedWithVariants = insertVariants(productData, variants);\n        } else {\n            productData.variants.unshift(variants);\n            updatedWithVariants = productData;\n        }\n        \n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/update\";\n        const response = await axios.post(base_url,updatedWithVariants)\n\n        if(response.data.success === false){\n          setLoading(false);\n          setButtonState(false);\n          setErrorMessage(response.data.message);\n          setSnackBarError(true);\n          props.setVariant('');\n        } else {\n          setErrorMessage('Actualización de producto exitoso.');\n          setSnackBarError(true);\n          setActive('');\n          setThumbUrl('');\n          setVariantName('');\n          setDescription('');\n          setCategory('');\n          setConsiderations('');\n          setPublicPriceEq('');\n          setFromPublicPrice('');\n          setToPublicPrice('');\n          setPrixerPriceEq('');\n          setFromPrixerPrice('');\n          setToPrixerPrice('');\n          props.setVariant('');\n          setLoading(false);\n          history.push({pathname:\"/admin/product/read\"});\n        }\n      }\n\n    }\n\n  return (\n    <React.Fragment>\n    {\n    <Backdrop className={classes.backdrop} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n    }\n      <Title>Variantes</Title>\n        <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                    <Grid item xs={12} md={6}>\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            display=\"inline\"\n                            id=\"thumbUrl\"\n                            label=\"ThumbUrl\"\n                            name=\"thumbUrl\"\n                            product         value={thumbUrl}\n                            onChange={(e) => {setThumbUrl(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                        <Checkbox\n                            checked={active}\n                            color=\"primary\" \n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            onChange={()=>{active?setActive(false):setActive(true)}}\n                        /> Habilitado / Visible\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            display=\"inline\"\n                            id=\"variantName\"\n                            label=\"Nombre\"\n                            name=\"variantName\"\n                            autoComplete=\"variantName\"\n                            value={variantName}\n                            onChange={(e) => {setVariantName(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            multiline\n                            fullWidth\n                            rows={2}\n                            id=\"description\"\n                            label=\"Descripción\"\n                            name=\"description\"\n                            autoComplete=\"description\"\n                            value={description}\n                            onChange={(e) => {setDescription(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            multiline\n                            rows={2}\n                            id=\"considerations\"\n                            label=\"Consideraciones\"\n                            name=\"considerations\"\n                            autoComplete=\"considerations\"\n                            value={considerations}\n                            onChange={(e) => {setConsiderations(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container style={{marginTop: 20}}>\n                    <h3>Precios Público</h3>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={12}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"publicPriceEquation\"\n                            label=\"Ecuación\"\n                            name=\"publicPriceEquation\"\n                            autoComplete=\"publicPriceEquation\"\n                            value={publicPriceEq}\n                            onChange={(e) => {setPublicPriceEq(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid container xs={12} md={12} spacing={2} style={{margin:0}}>\n                        <Grid item xs={6} md={6}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"fromPublicPrice\"\n                                label=\"Desde\"\n                                name=\"fromPublicPrice\"\n                                autoComplete=\"fromPublicPrice\"\n                                value={fromPublicPrice}\n                                onChange={(e) => {setFromPublicPrice(e.target.value);}}\n                            />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6} md={6}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"toPublicPrice\"\n                                label=\"Hasta\"\n                                name=\"toPublicPrice\"\n                                autoComplete=\"toPublicPrice\"\n                                value={toPublicPrice}\n                                onChange={(e) => {setToPublicPrice(e.target.value);}}\n                            />\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container style={{marginTop: 20}}>\n                    <h3>Precios Prixers</h3>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={4} md={4}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"prixerPriceEq\"\n                            label=\"Ecuación\"\n                            name=\"prixerPriceEq\"\n                            autoComplete=\"prixerPriceEq\"\n                            value={prixerPriceEq}\n                            onChange={(e) => {setPrixerPriceEq(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={4} md={5}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"fromPrixerPrice\"\n                            label=\"Desde\"\n                            name=\"fromPrixerPrice\"\n                            autoComplete=\"fromPrixerPrice\"\n                            value={fromPrixerPrice}\n                            onChange={(e) => {setFromPrixerPrice(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={4} md={5}>\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"toPrixerPrice\"\n                            label=\"Hasta\"\n                            name=\"toPrixerPrice\"\n                            autoComplete=\"toPrixerPrice\"\n                            value={toPrixerPrice}\n                            onChange={(e) => {setToPrixerPrice(e.target.value);}}\n                        />\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container xs={12} spacing={2}>\n                    <Grid container style={{marginTop: 20}}>\n                        <h3>Atributos</h3>\n                    </Grid>\n                        {   \n                        attributes &&\n                            attributes.map((att, i)=>(\n                            <Grid container spacing={2} xs={12} style={{marginBottom: 10}}>\n                                <Grid item xs={12} md={5}>\n                                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"attribute\"\n                                        label=\"Nombre\"\n                                        name=\"attribute\"\n                                        autoComplete=\"attribute\"\n                                        value={att.name}\n                                        onChange={(e) => {\n                                            setAttributes(attributes.slice(0,i).concat({'name': e.target.value, 'value': att.value}).concat(attributes.slice(i+1,)));\n                                        }}\n                                    />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} md={5}>\n                                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"attributeValue\"\n                                        label=\"Valor\"\n                                        name=\"attributeValue\"\n                                        autoComplete=\"attributeValue\"\n                                        value={att.value}\n                                        onChange={(e) => {\n                                            setAttributes(attributes.slice(0,i).concat({'name': att.name, 'value': e.target.value}).concat(attributes.slice(i+1,)));\n                                        }}\n                                    />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={2}>\n                                <Button variant=\"contained\" color=\"primary\" onClick={()=>{ setAttributes(attributes.slice(0, i).concat(attributes.slice(i+1,)))}} disabled={buttonState} style={{ marginTop: 20}}>\n                                    -\n                                </Button>\n                                </Grid>\n                            </Grid>\n                            ))\n                        }\n                    <Grid item xs={12} align=\"center\">\n                    <Button variant=\"contained\" color=\"default\" onClick={()=>{setAttributes(attributes.concat({ name:'', value:'' }))}} disabled={buttonState} style={{ marginTop: 20}}>\n                        +\n                    </Button>\n                    </Grid>\n                </Grid>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={buttonState} style={{ marginTop: 20}}>\n                    {props.variant && \"Actualizar\" || \"Crear\"}\n                </Button>\n            </Grid>\n        </form>\n        <Snackbar\n          open={snackBarError}\n          autoHideDuration={1000}\n          message={errorMessage}\n          className={classes.snackbar}\n        />\n    </React.Fragment>\n  );\n}",{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","severity":1,"message":"498","line":31,"column":10,"nodeType":"499","messageId":"500","endLine":31,"endColumn":26},{"ruleId":"497","severity":1,"message":"501","line":32,"column":8,"nodeType":"499","messageId":"500","endLine":32,"endColumn":16},{"ruleId":"497","severity":1,"message":"502","line":33,"column":8,"nodeType":"499","messageId":"500","endLine":33,"endColumn":13},{"ruleId":"497","severity":1,"message":"503","line":97,"column":10,"nodeType":"499","messageId":"500","endLine":97,"endColumn":21},{"ruleId":"497","severity":1,"message":"504","line":101,"column":17,"nodeType":"499","messageId":"500","endLine":101,"endColumn":25},{"ruleId":"497","severity":1,"message":"505","line":103,"column":9,"nodeType":"499","messageId":"500","endLine":103,"endColumn":18},{"ruleId":"497","severity":1,"message":"506","line":105,"column":9,"nodeType":"499","messageId":"500","endLine":105,"endColumn":23},{"ruleId":"497","severity":1,"message":"507","line":114,"column":9,"nodeType":"499","messageId":"500","endLine":114,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":181,"column":3,"nodeType":"499","endLine":181,"endColumn":12,"suggestions":"510"},{"ruleId":"497","severity":1,"message":"511","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"512","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":15},{"ruleId":"497","severity":1,"message":"513","line":28,"column":8,"nodeType":"499","messageId":"500","endLine":28,"endColumn":13},{"ruleId":"497","severity":1,"message":"514","line":148,"column":10,"nodeType":"499","messageId":"500","endLine":148,"endColumn":16},{"ruleId":"497","severity":1,"message":"515","line":148,"column":18,"nodeType":"499","messageId":"500","endLine":148,"endColumn":27},{"ruleId":"497","severity":1,"message":"516","line":149,"column":10,"nodeType":"499","messageId":"500","endLine":149,"endColumn":19},{"ruleId":"497","severity":1,"message":"517","line":149,"column":21,"nodeType":"499","messageId":"500","endLine":149,"endColumn":33},{"ruleId":"497","severity":1,"message":"503","line":150,"column":10,"nodeType":"499","messageId":"500","endLine":150,"endColumn":21},{"ruleId":"497","severity":1,"message":"518","line":151,"column":22,"nodeType":"499","messageId":"500","endLine":151,"endColumn":35},{"ruleId":"497","severity":1,"message":"519","line":157,"column":10,"nodeType":"499","messageId":"500","endLine":157,"endColumn":16},{"ruleId":"497","severity":1,"message":"520","line":157,"column":18,"nodeType":"499","messageId":"500","endLine":157,"endColumn":27},{"ruleId":"497","severity":1,"message":"505","line":158,"column":9,"nodeType":"499","messageId":"500","endLine":158,"endColumn":18},{"ruleId":"497","severity":1,"message":"521","line":163,"column":9,"nodeType":"499","messageId":"500","endLine":163,"endColumn":22},{"ruleId":"497","severity":1,"message":"522","line":171,"column":9,"nodeType":"499","messageId":"500","endLine":171,"endColumn":20},{"ruleId":"523","severity":1,"message":"524","line":475,"column":13,"nodeType":"525","endLine":483,"endColumn":14},{"ruleId":"497","severity":1,"message":"526","line":22,"column":8,"nodeType":"499","messageId":"500","endLine":22,"endColumn":18},{"ruleId":"497","severity":1,"message":"527","line":23,"column":8,"nodeType":"499","messageId":"500","endLine":23,"endColumn":21},{"ruleId":"497","severity":1,"message":"528","line":24,"column":8,"nodeType":"499","messageId":"500","endLine":24,"endColumn":18},{"ruleId":"497","severity":1,"message":"529","line":25,"column":8,"nodeType":"499","messageId":"500","endLine":25,"endColumn":22},{"ruleId":"497","severity":1,"message":"530","line":26,"column":8,"nodeType":"499","messageId":"500","endLine":26,"endColumn":19},{"ruleId":"497","severity":1,"message":"531","line":27,"column":8,"nodeType":"499","messageId":"500","endLine":27,"endColumn":18},{"ruleId":"497","severity":1,"message":"532","line":28,"column":8,"nodeType":"499","messageId":"500","endLine":28,"endColumn":21},{"ruleId":"497","severity":1,"message":"533","line":29,"column":8,"nodeType":"499","messageId":"500","endLine":29,"endColumn":12},{"ruleId":"497","severity":1,"message":"534","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":35},{"ruleId":"535","severity":1,"message":"536","line":234,"column":12,"nodeType":"537","messageId":"538","endLine":234,"endColumn":22},{"ruleId":"508","severity":1,"message":"539","line":85,"column":3,"nodeType":"499","endLine":85,"endColumn":12,"suggestions":"540"},{"ruleId":"497","severity":1,"message":"541","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":17},{"ruleId":"497","severity":1,"message":"542","line":63,"column":9,"nodeType":"499","messageId":"500","endLine":63,"endColumn":16},{"ruleId":"508","severity":1,"message":"543","line":251,"column":6,"nodeType":"544","endLine":251,"endColumn":8,"suggestions":"545"},{"ruleId":"508","severity":1,"message":"546","line":292,"column":6,"nodeType":"544","endLine":292,"endColumn":20,"suggestions":"547"},{"ruleId":"548","severity":1,"message":"549","line":375,"column":68,"nodeType":"550","messageId":"538","endLine":375,"endColumn":70},{"ruleId":"497","severity":1,"message":"551","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":13},{"ruleId":"497","severity":1,"message":"552","line":1,"column":28,"nodeType":"499","messageId":"500","endLine":1,"endColumn":39},{"ruleId":"497","severity":1,"message":"553","line":19,"column":8,"nodeType":"499","messageId":"500","endLine":19,"endColumn":15},{"ruleId":"497","severity":1,"message":"554","line":150,"column":10,"nodeType":"499","messageId":"500","endLine":150,"endColumn":22},{"ruleId":"497","severity":1,"message":"555","line":150,"column":24,"nodeType":"499","messageId":"500","endLine":150,"endColumn":39},{"ruleId":"497","severity":1,"message":"556","line":154,"column":20,"nodeType":"499","messageId":"500","endLine":154,"endColumn":31},{"ruleId":"508","severity":1,"message":"557","line":179,"column":6,"nodeType":"544","endLine":179,"endColumn":83,"suggestions":"558"},{"ruleId":"548","severity":1,"message":"549","line":240,"column":12,"nodeType":"550","messageId":"538","endLine":240,"endColumn":14},{"ruleId":"548","severity":1,"message":"549","line":252,"column":25,"nodeType":"550","messageId":"538","endLine":252,"endColumn":27},{"ruleId":"497","severity":1,"message":"559","line":307,"column":12,"nodeType":"499","messageId":"500","endLine":307,"endColumn":22},{"ruleId":"497","severity":1,"message":"560","line":354,"column":9,"nodeType":"499","messageId":"500","endLine":354,"endColumn":20},{"ruleId":"561","severity":1,"message":"562","line":355,"column":23,"nodeType":"563","messageId":"564","endLine":355,"endColumn":25},{"ruleId":"497","severity":1,"message":"565","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"566","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"566","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"513","line":9,"column":8,"nodeType":"499","messageId":"500","endLine":9,"endColumn":13},{"ruleId":"497","severity":1,"message":"567","line":1,"column":28,"nodeType":"499","messageId":"500","endLine":1,"endColumn":47},{"ruleId":"497","severity":1,"message":"568","line":70,"column":12,"nodeType":"499","messageId":"500","endLine":70,"endColumn":24},{"ruleId":"497","severity":1,"message":"569","line":70,"column":26,"nodeType":"499","messageId":"500","endLine":70,"endColumn":41},{"ruleId":"497","severity":1,"message":"570","line":71,"column":12,"nodeType":"499","messageId":"500","endLine":71,"endColumn":26},{"ruleId":"497","severity":1,"message":"571","line":71,"column":28,"nodeType":"499","messageId":"500","endLine":71,"endColumn":45},{"ruleId":"497","severity":1,"message":"572","line":72,"column":12,"nodeType":"499","messageId":"500","endLine":72,"endColumn":25},{"ruleId":"497","severity":1,"message":"573","line":72,"column":27,"nodeType":"499","messageId":"500","endLine":72,"endColumn":43},{"ruleId":"508","severity":1,"message":"574","line":100,"column":6,"nodeType":"544","endLine":100,"endColumn":25,"suggestions":"575"},{"ruleId":"548","severity":1,"message":"549","line":120,"column":41,"nodeType":"550","messageId":"538","endLine":120,"endColumn":43},{"ruleId":"576","severity":1,"message":"577","line":166,"column":21,"nodeType":"578","endLine":166,"endColumn":41},{"ruleId":"497","severity":1,"message":"565","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":18},{"ruleId":"497","severity":1,"message":"579","line":39,"column":11,"nodeType":"499","messageId":"500","endLine":39,"endColumn":19},{"ruleId":"497","severity":1,"message":"528","line":4,"column":18,"nodeType":"499","messageId":"500","endLine":4,"endColumn":28},{"ruleId":"497","severity":1,"message":"580","line":9,"column":3,"nodeType":"499","messageId":"500","endLine":9,"endColumn":12},{"ruleId":"497","severity":1,"message":"581","line":10,"column":3,"nodeType":"499","messageId":"500","endLine":10,"endColumn":14},{"ruleId":"497","severity":1,"message":"582","line":11,"column":3,"nodeType":"499","messageId":"500","endLine":11,"endColumn":8},{"ruleId":"497","severity":1,"message":"583","line":12,"column":3,"nodeType":"499","messageId":"500","endLine":12,"endColumn":12},{"ruleId":"497","severity":1,"message":"584","line":95,"column":10,"nodeType":"499","messageId":"500","endLine":95,"endColumn":14},{"ruleId":"497","severity":1,"message":"585","line":119,"column":9,"nodeType":"499","messageId":"500","endLine":119,"endColumn":20},{"ruleId":"497","severity":1,"message":"586","line":162,"column":9,"nodeType":"499","messageId":"500","endLine":162,"endColumn":12},{"ruleId":"497","severity":1,"message":"586","line":196,"column":11,"nodeType":"499","messageId":"500","endLine":196,"endColumn":14},{"ruleId":"497","severity":1,"message":"586","line":216,"column":9,"nodeType":"499","messageId":"500","endLine":216,"endColumn":12},{"ruleId":"548","severity":1,"message":"587","line":315,"column":31,"nodeType":"550","messageId":"538","endLine":315,"endColumn":33},{"ruleId":"588","severity":1,"message":"589","line":482,"column":21,"nodeType":"525","endLine":482,"endColumn":69},{"ruleId":"590","severity":1,"message":"591","line":483,"column":23,"nodeType":"525","endLine":487,"endColumn":24},{"ruleId":"497","severity":1,"message":"566","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"592","line":10,"column":19,"nodeType":"499","messageId":"500","endLine":10,"endColumn":21},{"ruleId":"497","severity":1,"message":"593","line":11,"column":11,"nodeType":"499","messageId":"500","endLine":11,"endColumn":18},{"ruleId":"497","severity":1,"message":"594","line":12,"column":20,"nodeType":"499","messageId":"500","endLine":12,"endColumn":29},{"ruleId":"508","severity":1,"message":"595","line":17,"column":28,"nodeType":"499","endLine":17,"endColumn":39},{"ruleId":"561","severity":1,"message":"562","line":19,"column":23,"nodeType":"563","messageId":"564","endLine":19,"endColumn":25},{"ruleId":"548","severity":1,"message":"549","line":21,"column":23,"nodeType":"550","messageId":"538","endLine":21,"endColumn":25},{"ruleId":"561","severity":1,"message":"596","line":33,"column":39,"nodeType":"563","messageId":"597","endLine":33,"endColumn":41},{"ruleId":"548","severity":1,"message":"549","line":34,"column":25,"nodeType":"550","messageId":"538","endLine":34,"endColumn":27},{"ruleId":"561","severity":1,"message":"562","line":53,"column":45,"nodeType":"563","messageId":"564","endLine":53,"endColumn":47},{"ruleId":"548","severity":1,"message":"549","line":54,"column":9,"nodeType":"550","messageId":"538","endLine":54,"endColumn":11},{"ruleId":"548","severity":1,"message":"549","line":56,"column":16,"nodeType":"550","messageId":"538","endLine":56,"endColumn":18},{"ruleId":"548","severity":1,"message":"587","line":70,"column":47,"nodeType":"550","messageId":"538","endLine":70,"endColumn":49},{"ruleId":"548","severity":1,"message":"549","line":70,"column":75,"nodeType":"550","messageId":"538","endLine":70,"endColumn":77},{"ruleId":"548","severity":1,"message":"587","line":76,"column":28,"nodeType":"550","messageId":"538","endLine":76,"endColumn":30},{"ruleId":"598","severity":1,"message":"599","line":79,"column":44,"nodeType":"600","messageId":"538","endLine":79,"endColumn":48},{"ruleId":"598","severity":1,"message":"599","line":80,"column":44,"nodeType":"600","messageId":"538","endLine":80,"endColumn":48},{"ruleId":"497","severity":1,"message":"601","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":19},{"ruleId":"548","severity":1,"message":"587","line":116,"column":89,"nodeType":"550","messageId":"538","endLine":116,"endColumn":91},{"ruleId":"548","severity":1,"message":"587","line":120,"column":89,"nodeType":"550","messageId":"538","endLine":120,"endColumn":91},{"ruleId":"548","severity":1,"message":"587","line":154,"column":68,"nodeType":"550","messageId":"538","endLine":154,"endColumn":70},{"ruleId":"548","severity":1,"message":"587","line":194,"column":68,"nodeType":"550","messageId":"538","endLine":194,"endColumn":70},{"ruleId":"561","severity":1,"message":"562","line":262,"column":39,"nodeType":"563","messageId":"564","endLine":262,"endColumn":41},{"ruleId":"497","severity":1,"message":"602","line":264,"column":27,"nodeType":"499","messageId":"500","endLine":264,"endColumn":31},{"ruleId":"508","severity":1,"message":"603","line":110,"column":6,"nodeType":"544","endLine":110,"endColumn":19,"suggestions":"604"},{"ruleId":"605","severity":1,"message":"606","line":141,"column":11,"nodeType":"607","messageId":"608","endLine":141,"endColumn":12},{"ruleId":"497","severity":1,"message":"609","line":5,"column":7,"nodeType":"499","messageId":"500","endLine":5,"endColumn":16},{"ruleId":"497","severity":1,"message":"610","line":116,"column":10,"nodeType":"499","messageId":"500","endLine":116,"endColumn":15},{"ruleId":"588","severity":1,"message":"589","line":347,"column":19,"nodeType":"525","endLine":351,"endColumn":20},{"ruleId":"588","severity":1,"message":"589","line":366,"column":23,"nodeType":"525","endLine":370,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":387,"column":23,"nodeType":"525","endLine":391,"endColumn":24},{"ruleId":"523","severity":1,"message":"524","line":147,"column":17,"nodeType":"525","endLine":147,"endColumn":50},{"ruleId":"497","severity":1,"message":"611","line":4,"column":10,"nodeType":"499","messageId":"500","endLine":4,"endColumn":20},{"ruleId":"497","severity":1,"message":"612","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":12},{"ruleId":"497","severity":1,"message":"613","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":13},{"ruleId":"497","severity":1,"message":"614","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":24},{"ruleId":"497","severity":1,"message":"615","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":16},{"ruleId":"497","severity":1,"message":"616","line":18,"column":8,"nodeType":"499","messageId":"500","endLine":18,"endColumn":14},{"ruleId":"497","severity":1,"message":"593","line":27,"column":11,"nodeType":"499","messageId":"500","endLine":27,"endColumn":18},{"ruleId":"508","severity":1,"message":"617","line":41,"column":3,"nodeType":"544","endLine":41,"endColumn":5,"suggestions":"618"},{"ruleId":"548","severity":1,"message":"549","line":45,"column":12,"nodeType":"550","messageId":"538","endLine":45,"endColumn":14},{"ruleId":"619","severity":1,"message":"620","line":46,"column":34,"nodeType":"550","messageId":"621","endLine":46,"endColumn":35},{"ruleId":"548","severity":1,"message":"549","line":47,"column":12,"nodeType":"550","messageId":"538","endLine":47,"endColumn":14},{"ruleId":"619","severity":1,"message":"620","line":48,"column":34,"nodeType":"550","messageId":"621","endLine":48,"endColumn":35},{"ruleId":"548","severity":1,"message":"549","line":49,"column":12,"nodeType":"550","messageId":"538","endLine":49,"endColumn":14},{"ruleId":"619","severity":1,"message":"620","line":50,"column":34,"nodeType":"550","messageId":"621","endLine":50,"endColumn":35},{"ruleId":"590","severity":1,"message":"591","line":79,"column":41,"nodeType":"525","endLine":79,"endColumn":102},{"ruleId":"497","severity":1,"message":"526","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":18},{"ruleId":"497","severity":1,"message":"527","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":21},{"ruleId":"497","severity":1,"message":"528","line":15,"column":8,"nodeType":"499","messageId":"500","endLine":15,"endColumn":18},{"ruleId":"497","severity":1,"message":"529","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":22},{"ruleId":"497","severity":1,"message":"531","line":18,"column":8,"nodeType":"499","messageId":"500","endLine":18,"endColumn":18},{"ruleId":"497","severity":1,"message":"532","line":19,"column":8,"nodeType":"499","messageId":"500","endLine":19,"endColumn":21},{"ruleId":"622","severity":1,"message":"623","line":36,"column":58,"nodeType":"624","messageId":"625","endLine":36,"endColumn":60},{"ruleId":"622","severity":1,"message":"623","line":36,"column":82,"nodeType":"624","messageId":"625","endLine":36,"endColumn":84},{"ruleId":"622","severity":1,"message":"623","line":37,"column":66,"nodeType":"624","messageId":"625","endLine":37,"endColumn":68},{"ruleId":"622","severity":1,"message":"623","line":37,"column":94,"nodeType":"624","messageId":"625","endLine":37,"endColumn":96},{"ruleId":"497","severity":1,"message":"626","line":38,"column":13,"nodeType":"499","messageId":"500","endLine":38,"endColumn":27},{"ruleId":"497","severity":1,"message":"627","line":38,"column":29,"nodeType":"499","messageId":"500","endLine":38,"endColumn":46},{"ruleId":"622","severity":1,"message":"623","line":39,"column":68,"nodeType":"624","messageId":"625","endLine":39,"endColumn":70},{"ruleId":"622","severity":1,"message":"623","line":39,"column":90,"nodeType":"624","messageId":"625","endLine":39,"endColumn":92},{"ruleId":"622","severity":1,"message":"623","line":40,"column":68,"nodeType":"624","messageId":"625","endLine":40,"endColumn":70},{"ruleId":"622","severity":1,"message":"623","line":40,"column":97,"nodeType":"624","messageId":"625","endLine":40,"endColumn":99},{"ruleId":"622","severity":1,"message":"623","line":41,"column":62,"nodeType":"624","messageId":"625","endLine":41,"endColumn":64},{"ruleId":"622","severity":1,"message":"623","line":41,"column":88,"nodeType":"624","messageId":"625","endLine":41,"endColumn":90},{"ruleId":"622","severity":1,"message":"623","line":42,"column":74,"nodeType":"624","messageId":"625","endLine":42,"endColumn":76},{"ruleId":"622","severity":1,"message":"623","line":42,"column":106,"nodeType":"624","messageId":"625","endLine":42,"endColumn":108},{"ruleId":"622","severity":1,"message":"623","line":43,"column":70,"nodeType":"624","messageId":"625","endLine":43,"endColumn":72},{"ruleId":"622","severity":1,"message":"623","line":43,"column":108,"nodeType":"624","messageId":"625","endLine":43,"endColumn":110},{"ruleId":"622","severity":1,"message":"623","line":44,"column":74,"nodeType":"624","messageId":"625","endLine":44,"endColumn":76},{"ruleId":"622","severity":1,"message":"623","line":44,"column":108,"nodeType":"624","messageId":"625","endLine":44,"endColumn":110},{"ruleId":"622","severity":1,"message":"623","line":45,"column":72,"nodeType":"624","messageId":"625","endLine":45,"endColumn":74},{"ruleId":"622","severity":1,"message":"623","line":45,"column":104,"nodeType":"624","messageId":"625","endLine":45,"endColumn":106},{"ruleId":"622","severity":1,"message":"623","line":46,"column":72,"nodeType":"624","messageId":"625","endLine":46,"endColumn":74},{"ruleId":"622","severity":1,"message":"623","line":46,"column":110,"nodeType":"624","messageId":"625","endLine":46,"endColumn":112},{"ruleId":"622","severity":1,"message":"623","line":47,"column":76,"nodeType":"624","messageId":"625","endLine":47,"endColumn":78},{"ruleId":"622","severity":1,"message":"623","line":47,"column":110,"nodeType":"624","messageId":"625","endLine":47,"endColumn":112},{"ruleId":"622","severity":1,"message":"623","line":48,"column":72,"nodeType":"624","messageId":"625","endLine":48,"endColumn":74},{"ruleId":"622","severity":1,"message":"623","line":48,"column":104,"nodeType":"624","messageId":"625","endLine":48,"endColumn":106},{"ruleId":"622","severity":1,"message":"623","line":53,"column":62,"nodeType":"624","messageId":"625","endLine":53,"endColumn":64},{"ruleId":"622","severity":1,"message":"623","line":53,"column":88,"nodeType":"624","messageId":"625","endLine":53,"endColumn":90},{"ruleId":"497","severity":1,"message":"628","line":58,"column":12,"nodeType":"499","messageId":"500","endLine":58,"endColumn":25},{"ruleId":"497","severity":1,"message":"629","line":58,"column":27,"nodeType":"499","messageId":"500","endLine":58,"endColumn":43},{"ruleId":"497","severity":1,"message":"630","line":59,"column":12,"nodeType":"499","messageId":"500","endLine":59,"endColumn":22},{"ruleId":"497","severity":1,"message":"631","line":59,"column":24,"nodeType":"499","messageId":"500","endLine":59,"endColumn":37},{"ruleId":"561","severity":1,"message":"632","line":63,"column":67,"nodeType":"563","messageId":"597","endLine":63,"endColumn":69},{"ruleId":"548","severity":1,"message":"587","line":63,"column":80,"nodeType":"550","messageId":"538","endLine":63,"endColumn":82},{"ruleId":"622","severity":1,"message":"623","line":95,"column":34,"nodeType":"624","messageId":"625","endLine":95,"endColumn":36},{"ruleId":"622","severity":1,"message":"623","line":95,"column":55,"nodeType":"624","messageId":"625","endLine":95,"endColumn":57},{"ruleId":"622","severity":1,"message":"623","line":401,"column":36,"nodeType":"624","messageId":"625","endLine":401,"endColumn":38},{"ruleId":"622","severity":1,"message":"623","line":401,"column":52,"nodeType":"624","messageId":"625","endLine":401,"endColumn":54},"no-native-reassign",["633"],"no-negated-in-lhs",["634"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'buttonState' is assigned a value but never used.","'setValue' is assigned a value but never used.","'isDesktop' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'body' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setButtonState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [email, username, password] as a second argument to the useEffect Hook.",["635"],"'Avatar' is defined but never used.","'AddIcon' is defined but never used.","'Terms' is defined but never used.","'avatar' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'avatarObj' is assigned a value but never used.","'setAvatarObj' is assigned a value but never used.","'setTermsAgree' is assigned a value but never used.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'setCheckedBox' is assigned a value but never used.","'acceptTerms' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'IconButton' is defined but never used.","'OutlinedInput' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'clsx' is defined but never used.","'Suspense' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","React Hook useEffect contains a call to 'setErrorMessage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["636"],"'CardMedia' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.artId', 'props.match.params.username', and 'tiles'. Either include them or remove the dependency array.","ArrayExpression",["637"],"React Hook useEffect has missing dependencies: 'updatedTile._id', 'updatedTile.artId', 'updatedTile.artLocation', 'updatedTile.artType', 'updatedTile.category', 'updatedTile.description', 'updatedTile.imageUrl', 'updatedTile.license', 'updatedTile.originalPhotoHeight', 'updatedTile.originalPhotoIso', 'updatedTile.originalPhotoPpi', 'updatedTile.originalPhotoWidth', 'updatedTile.prixerUsername', 'updatedTile.publicId', 'updatedTile.status', 'updatedTile.tags', 'updatedTile.thumbnailUrl', 'updatedTile.title', 'updatedTile.use', and 'updatedTile.userId'. Either include them or remove the dependency array.",["638"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'axios' is defined but never used.","'useCallback' is defined but never used.","'Cropper' is defined but never used.","'thumbnailUrl' is assigned a value but never used.","'setThumbnailUrl' is assigned a value but never used.","'setPublicId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'artType' and 'handleMaxPrintCalc'. Either include them or remove the dependency array.",["639"],"'blobToFile' is defined but never used.","'removeCrops' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'useImperativeHandle' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'snackBarAction' is assigned a value but never used.","'setSnackBarAction' is assigned a value but never used.","'snackBarError' is assigned a value but never used.","'setSnackBarError' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'art', 'croppedArtTemp', and 'setCroppedArt'. Either include them or remove the dependency array.",["640"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'response' is assigned a value but never used.","'FormGroup' is defined but never used.","'FilledInput' is defined but never used.","'Input' is defined but never used.","'TextField' is defined but never used.","'Open' is assigned a value but never used.","'createOpenF' is assigned a value but never used.","'res' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ar' is assigned a value but never used.","'classes' is assigned a value but never used.","'setAspect' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-eval","eval can be harmful.","CallExpression","'Preferences' is defined but never used.","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'globalParams' and 'props.prixerUsername'. Either include them or remove the dependency array.",["641"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useStyles' is assigned a value but never used.","'ready' is assigned a value but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","'Title' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'base_url' and 'props.product'. Either include them or remove the dependency array.",["642"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'buttonAttState' is assigned a value but never used.","'setButtonAttState' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'emailError' is assigned a value but never used.","'setEmailError' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation",{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},"Add dependencies array: [email, username, password]",{"range":"659","text":"660"},"Add dependencies array: [token]",{"range":"661","text":"662"},"Update the dependencies array to be: [props.match.params.artId, props.match.params.username, tiles]",{"range":"663","text":"664"},"Update the dependencies array to be: [artDataState, updatedTile._id, updatedTile.artId, updatedTile.artLocation, updatedTile.artType, updatedTile.category, updatedTile.description, updatedTile.imageUrl, updatedTile.license, updatedTile.originalPhotoHeight, updatedTile.originalPhotoIso, updatedTile.originalPhotoPpi, updatedTile.originalPhotoWidth, updatedTile.prixerUsername, updatedTile.publicId, updatedTile.status, updatedTile.tags, updatedTile.thumbnailUrl, updatedTile.title, updatedTile.use, updatedTile.userId]",{"range":"665","text":"666"},"Update the dependencies array to be: [originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso, artType, handleMaxPrintCalc]",{"range":"667","text":"668"},"Update the dependencies array to be: [art, croppedAreaPixels, croppedArtTemp, setCroppedArt]",{"range":"669","text":"670"},"Update the dependencies array to be: [globalParams, props.prixerUsername, searchValue]",{"range":"671","text":"672"},"Update the dependencies array to be: [base_url, props.product]",{"range":"673","text":"674"},[6149,6149],", [email, username, password]",[3371,3371],", [token]",[6861,6863],"[props.match.params.artId, props.match.params.username, tiles]",[8402,8416],"[artDataState, updatedTile._id, updatedTile.artId, updatedTile.artLocation, updatedTile.artType, updatedTile.category, updatedTile.description, updatedTile.imageUrl, updatedTile.license, updatedTile.originalPhotoHeight, updatedTile.originalPhotoIso, updatedTile.originalPhotoPpi, updatedTile.originalPhotoWidth, updatedTile.prixerUsername, updatedTile.publicId, updatedTile.status, updatedTile.tags, updatedTile.thumbnailUrl, updatedTile.title, updatedTile.use, updatedTile.userId]",[5303,5380],"[originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso, artType, handleMaxPrintCalc]",[2842,2861],"[art, croppedAreaPixels, croppedArtTemp, setCroppedArt]",[3443,3456],"[globalParams, props.prixerUsername, searchValue]",[1421,1423],"[base_url, props.product]"]