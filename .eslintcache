[{"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\serviceWorker.js":"2","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\App.js":"3","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\theme.js":"4","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\expire.js":"5","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\prixerProfile.jsx":"6","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\login\\loginPage.jsx":"7","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\fullscreenPhoto\\fullscreenPhoto.jsx":"8","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\adminLogin\\adminLoginPage.jsx":"9","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\products\\productsCatalog.jsx":"10","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\gallery\\gallery.jsx":"11","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\passwordReset.jsx":"12","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\forgotPassword.jsx":"13","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\passwordChange\\passwordChange.jsx":"14","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\adminMain.jsx":"15","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\register\\prixerRegistration.jsx":"16","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\register\\userRegistration.jsx":"17","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\home\\home.jsx":"18","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\validations.js":"19","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\utils.js":"20","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\grid\\grid.jsx":"21","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\prixerOptions\\prixerOptions.jsx":"22","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\Copyright\\copyright.jsx":"23","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\floatingAddButton\\floatingAddButton.jsx":"24","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\appBar\\appBar.jsx":"25","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\artUploader.jsx":"26","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\userData\\userData.jsx":"27","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\Preferences.jsx":"28","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\searchBar\\searchBar.jsx":"29","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\tabPreferences.jsx":"30","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\aspectRatioSelector.jsx":"31","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\cropImage.js":"32","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferenceTerms.jsx":"33","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferencesCarousel.jsx":"34","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\easyCropper.jsx":"35","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\simpleDialog\\simpleDialog.jsx":"36","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\prixerGrid\\prixerGrid.jsx":"37","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\register\\Terms.jsx":"38","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orders.jsx":"39","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\paymentMethods.jsx":"40","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\consumers\\consumers.jsx":"41","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\listItems.jsx":"42","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\products.jsx":"43","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\adminUser\\adminUser.jsx":"44","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\dashboard.jsx":"45","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\updatePaymentMethod.jsx":"46","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\createPaymentMethod.jsx":"47","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\readPaymentMethods.jsx":"48","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\readConsumers.jsx":"49","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\createConsumer.jsx":"50","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\updateConsumer.jsx":"51","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\updateOrder.jsx":"52","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\orders.jsx":"53","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\deposits.jsx":"54","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\chart.jsx":"55","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\disableAdmin.jsx":"56","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\updateAdmin.jsx":"57","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\readAdmins.jsx":"58","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\createAdmin.jsx":"59","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\disableProduct.jsx":"60","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\readProducts.jsx":"61","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\updateProduct.jsx":"62","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\createProduct.jsx":"63","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\consumerServices.js":"64","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\Title.jsx":"65","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orderServices.js":"66","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\createOrder.jsx":"67","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\variants.jsx":"68","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderDetails.jsx":"69","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderBasicInfo.jsx":"70","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\readVariants.jsx":"71","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\products\\productsGrid.jsx":"72","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\createVariant.jsx":"73","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\products\\services.js":"74","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\index.js":"75","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\theme.js":"76","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\App.js":"77","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\serviceWorker.js":"78","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\expire.js":"79","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\userRegistration.jsx":"80","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\login\\loginPage.jsx":"81","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\adminLogin\\adminLoginPage.jsx":"82","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\prixerRegistration.jsx":"83","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerProfile.jsx":"84","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\passwordReset.jsx":"85","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsCatalog.jsx":"86","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordChange\\passwordChange.jsx":"87","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\home\\home.jsx":"88","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\forgotPassword.jsx":"89","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\fullscreenPhoto\\fullscreenPhoto.jsx":"90","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminMain.jsx":"91","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\gallery\\gallery.jsx":"92","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\validations.js":"93","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\utils.js":"94","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\grid\\grid.jsx":"95","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\Copyright\\copyright.jsx":"96","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\artUploader.jsx":"97","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\simpleDialog\\simpleDialog.jsx":"98","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\floatingAddButton\\floatingAddButton.jsx":"99","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\appBar\\appBar.jsx":"100","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\Preferences.jsx":"101","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\paymentMethods.jsx":"102","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orders.jsx":"103","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\prixerGrid\\prixerGrid.jsx":"104","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orderServices.js":"105","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\updateOrder.jsx":"106","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\createOrder.jsx":"107","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\tabPreferences.jsx":"108","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\aspectRatioSelector.jsx":"109","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\createPaymentMethod.jsx":"110","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\readPaymentMethods.jsx":"111","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\updatePaymentMethod.jsx":"112","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\consumerServices.js":"113","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\Title.jsx":"114","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderDetails.jsx":"115","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderBasicInfo.jsx":"116","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferenceTerms.jsx":"117","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\cropImage.js":"118","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferencesCarousel.jsx":"119","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\services.js":"120","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\searchBar\\searchBar.jsx":"121","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\easyCropper.jsx":"122","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\consumers\\consumers.jsx":"123","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\listItems.jsx":"124","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\products.jsx":"125","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\dashboard.jsx":"126","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminUser\\adminUser.jsx":"127","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsGrid.jsx":"128","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\Terms.jsx":"129","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerOptions\\prixerOptions.jsx":"130","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\userData\\userData.jsx":"131","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\readConsumers.jsx":"132","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\updateConsumer.jsx":"133","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\createConsumer.jsx":"134","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\chart.jsx":"135","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\deposits.jsx":"136","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\orders.jsx":"137","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\disableProduct.jsx":"138","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\updateAdmin.jsx":"139","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\updateProduct.jsx":"140","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\createProduct.jsx":"141","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\readProducts.jsx":"142","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\disableAdmin.jsx":"143","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\createAdmin.jsx":"144","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\readAdmins.jsx":"145","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\variants.jsx":"146","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\readVariants.jsx":"147","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\createVariant.jsx":"148"},{"size":958,"mtime":1661179060799,"results":"149","hashOfConfig":"150"},{"size":5227,"mtime":1661179060817,"results":"151","hashOfConfig":"150"},{"size":3390,"mtime":1661179060773,"results":"152","hashOfConfig":"150"},{"size":419,"mtime":1661179060827,"results":"153","hashOfConfig":"150"},{"size":418,"mtime":1661179060829,"results":"154","hashOfConfig":"150"},{"size":2419,"mtime":1661263262650,"results":"155","hashOfConfig":"150"},{"size":9855,"mtime":1661179060801,"results":"156","hashOfConfig":"150"},{"size":25203,"mtime":1661179060804,"results":"157","hashOfConfig":"150"},{"size":9100,"mtime":1661179060796,"results":"158","hashOfConfig":"150"},{"size":2405,"mtime":1661179060812,"results":"159","hashOfConfig":"150"},{"size":2416,"mtime":1662664549586,"results":"160","hashOfConfig":"150"},{"size":7383,"mtime":1661179060808,"results":"161","hashOfConfig":"150"},{"size":4822,"mtime":1661179060807,"results":"162","hashOfConfig":"150"},{"size":8779,"mtime":1661179060807,"results":"163","hashOfConfig":"150"},{"size":6844,"mtime":1662664549582,"results":"164","hashOfConfig":"150"},{"size":15336,"mtime":1662651308858,"results":"165","hashOfConfig":"150"},{"size":13360,"mtime":1662651308859,"results":"166","hashOfConfig":"150"},{"size":15017,"mtime":1662395963266,"results":"167","hashOfConfig":"150"},{"size":608,"mtime":1661179060831,"results":"168","hashOfConfig":"150"},{"size":2792,"mtime":1661179060831,"results":"169","hashOfConfig":"150"},{"size":5580,"mtime":1661263262649,"results":"170","hashOfConfig":"150"},{"size":1195,"mtime":1662664549588,"results":"171","hashOfConfig":"150"},{"size":501,"mtime":1661179060818,"results":"172","hashOfConfig":"150"},{"size":1500,"mtime":1661179060825,"results":"173","hashOfConfig":"150"},{"size":4802,"mtime":1661263262652,"results":"174","hashOfConfig":"150"},{"size":27092,"mtime":1661179060821,"results":"175","hashOfConfig":"150"},{"size":21212,"mtime":1662665387100,"results":"176","hashOfConfig":"150"},{"size":207,"mtime":1662066599218,"results":"177","hashOfConfig":"150"},{"size":1796,"mtime":1661179060826,"results":"178","hashOfConfig":"150"},{"size":1701,"mtime":1662664549585,"results":"179","hashOfConfig":"150"},{"size":6918,"mtime":1661179060821,"results":"180","hashOfConfig":"150"},{"size":2393,"mtime":1661179060829,"results":"181","hashOfConfig":"150"},{"size":3617,"mtime":1662651308854,"results":"182","hashOfConfig":"150"},{"size":15915,"mtime":1662664549583,"results":"183","hashOfConfig":"150"},{"size":1353,"mtime":1661179060822,"results":"184","hashOfConfig":"150"},{"size":1862,"mtime":1661179060826,"results":"185","hashOfConfig":"150"},{"size":6850,"mtime":1662664549590,"results":"186","hashOfConfig":"150"},{"size":7926,"mtime":1662651308857,"results":"187","hashOfConfig":"150"},{"size":5443,"mtime":1661179060781,"results":"188","hashOfConfig":"150"},{"size":5222,"mtime":1661179060782,"results":"189","hashOfConfig":"150"},{"size":4996,"mtime":1661179060778,"results":"190","hashOfConfig":"150"},{"size":4174,"mtime":1662664549582,"results":"191","hashOfConfig":"150"},{"size":5066,"mtime":1662066427582,"results":"192","hashOfConfig":"150"},{"size":4595,"mtime":1661263262645,"results":"193","hashOfConfig":"150"},{"size":3304,"mtime":1661179060779,"results":"194","hashOfConfig":"150"},{"size":6964,"mtime":1661179060791,"results":"195","hashOfConfig":"150"},{"size":6547,"mtime":1661179060790,"results":"196","hashOfConfig":"150"},{"size":3081,"mtime":1661179060791,"results":"197","hashOfConfig":"150"},{"size":3002,"mtime":1661179060785,"results":"198","hashOfConfig":"150"},{"size":16679,"mtime":1661179060784,"results":"199","hashOfConfig":"150"},{"size":17561,"mtime":1661179060785,"results":"200","hashOfConfig":"150"},{"size":8857,"mtime":1661179060790,"results":"201","hashOfConfig":"150"},{"size":2418,"mtime":1661179060780,"results":"202","hashOfConfig":"150"},{"size":881,"mtime":1661179060779,"results":"203","hashOfConfig":"150"},{"size":1482,"mtime":1661179060779,"results":"204","hashOfConfig":"150"},{"size":0,"mtime":1661179060775,"results":"205","hashOfConfig":"150"},{"size":0,"mtime":1661179060776,"results":"206","hashOfConfig":"150"},{"size":2157,"mtime":1661179060776,"results":"207","hashOfConfig":"150"},{"size":8892,"mtime":1661179060775,"results":"208","hashOfConfig":"150"},{"size":0,"mtime":1661179060793,"results":"209","hashOfConfig":"150"},{"size":3066,"mtime":1661179060793,"results":"210","hashOfConfig":"150"},{"size":16195,"mtime":1661179060794,"results":"211","hashOfConfig":"150"},{"size":19133,"mtime":1661179060793,"results":"212","hashOfConfig":"150"},{"size":1082,"mtime":1661179060784,"results":"213","hashOfConfig":"150"},{"size":356,"mtime":1661179060776,"results":"214","hashOfConfig":"150"},{"size":2794,"mtime":1661179060781,"results":"215","hashOfConfig":"150"},{"size":12883,"mtime":1661179060787,"results":"216","hashOfConfig":"150"},{"size":5293,"mtime":1661179060783,"results":"217","hashOfConfig":"150"},{"size":39777,"mtime":1661179060788,"results":"218","hashOfConfig":"150"},{"size":15989,"mtime":1661179060787,"results":"219","hashOfConfig":"150"},{"size":3748,"mtime":1661179060795,"results":"220","hashOfConfig":"150"},{"size":11501,"mtime":1661179060813,"results":"221","hashOfConfig":"150"},{"size":19566,"mtime":1661179060795,"results":"222","hashOfConfig":"150"},{"size":2851,"mtime":1661179060813,"results":"223","hashOfConfig":"150"},{"size":958,"mtime":1661179060799,"results":"224","hashOfConfig":"225"},{"size":419,"mtime":1661179060827,"results":"226","hashOfConfig":"225"},{"size":3390,"mtime":1661179060773,"results":"227","hashOfConfig":"225"},{"size":5227,"mtime":1661179060817,"results":"228","hashOfConfig":"225"},{"size":418,"mtime":1661179060829,"results":"229","hashOfConfig":"225"},{"size":13360,"mtime":1662651308859,"results":"230","hashOfConfig":"225"},{"size":9855,"mtime":1661179060801,"results":"231","hashOfConfig":"225"},{"size":9100,"mtime":1661179060796,"results":"232","hashOfConfig":"225"},{"size":15336,"mtime":1662651308858,"results":"233","hashOfConfig":"225"},{"size":2419,"mtime":1661263262650,"results":"234","hashOfConfig":"225"},{"size":7383,"mtime":1661179060808,"results":"235","hashOfConfig":"225"},{"size":2405,"mtime":1661179060812,"results":"236","hashOfConfig":"225"},{"size":8779,"mtime":1661179060807,"results":"237","hashOfConfig":"225"},{"size":15017,"mtime":1662395963266,"results":"238","hashOfConfig":"225"},{"size":4822,"mtime":1661179060807,"results":"239","hashOfConfig":"225"},{"size":25203,"mtime":1661179060804,"results":"240","hashOfConfig":"225"},{"size":6844,"mtime":1662664549582,"results":"241","hashOfConfig":"225"},{"size":2416,"mtime":1662664549586,"results":"242","hashOfConfig":"225"},{"size":608,"mtime":1661179060831,"results":"243","hashOfConfig":"225"},{"size":2792,"mtime":1661179060831,"results":"244","hashOfConfig":"225"},{"size":5580,"mtime":1661263262649,"results":"245","hashOfConfig":"225"},{"size":501,"mtime":1661179060818,"results":"246","hashOfConfig":"225"},{"size":27092,"mtime":1661179060821,"results":"247","hashOfConfig":"225"},{"size":1862,"mtime":1661179060826,"results":"248","hashOfConfig":"225"},{"size":1500,"mtime":1661179060825,"results":"249","hashOfConfig":"225"},{"size":4802,"mtime":1661263262652,"results":"250","hashOfConfig":"225"},{"size":207,"mtime":1662066599218,"results":"251","hashOfConfig":"225"},{"size":5222,"mtime":1661179060782,"results":"252","hashOfConfig":"225"},{"size":5443,"mtime":1661179060781,"results":"253","hashOfConfig":"225"},{"size":6850,"mtime":1662664549590,"results":"254","hashOfConfig":"225"},{"size":2794,"mtime":1661179060781,"results":"255","hashOfConfig":"225"},{"size":8857,"mtime":1661179060790,"results":"256","hashOfConfig":"225"},{"size":12883,"mtime":1661179060787,"results":"257","hashOfConfig":"225"},{"size":1701,"mtime":1662664549585,"results":"258","hashOfConfig":"225"},{"size":6918,"mtime":1661179060821,"results":"259","hashOfConfig":"225"},{"size":6547,"mtime":1661179060790,"results":"260","hashOfConfig":"225"},{"size":3081,"mtime":1661179060791,"results":"261","hashOfConfig":"225"},{"size":6964,"mtime":1661179060791,"results":"262","hashOfConfig":"225"},{"size":1082,"mtime":1661179060784,"results":"263","hashOfConfig":"225"},{"size":356,"mtime":1661179060776,"results":"264","hashOfConfig":"225"},{"size":39777,"mtime":1661179060788,"results":"265","hashOfConfig":"225"},{"size":15989,"mtime":1661179060787,"results":"266","hashOfConfig":"225"},{"size":3617,"mtime":1662651308854,"results":"267","hashOfConfig":"225"},{"size":2393,"mtime":1661179060829,"results":"268","hashOfConfig":"225"},{"size":15915,"mtime":1662664549583,"results":"269","hashOfConfig":"225"},{"size":2851,"mtime":1661179060813,"results":"270","hashOfConfig":"225"},{"size":1796,"mtime":1661179060826,"results":"271","hashOfConfig":"225"},{"size":1353,"mtime":1661179060822,"results":"272","hashOfConfig":"225"},{"size":4996,"mtime":1661179060778,"results":"273","hashOfConfig":"225"},{"size":4174,"mtime":1662664549582,"results":"274","hashOfConfig":"225"},{"size":5066,"mtime":1662066427582,"results":"275","hashOfConfig":"225"},{"size":3304,"mtime":1661179060779,"results":"276","hashOfConfig":"225"},{"size":4595,"mtime":1661263262645,"results":"277","hashOfConfig":"225"},{"size":11501,"mtime":1661179060813,"results":"278","hashOfConfig":"225"},{"size":7926,"mtime":1662651308857,"results":"279","hashOfConfig":"225"},{"size":1195,"mtime":1662664549588,"results":"280","hashOfConfig":"225"},{"size":21255,"mtime":1662667229244,"results":"281","hashOfConfig":"225"},{"size":3002,"mtime":1661179060785,"results":"282","hashOfConfig":"225"},{"size":17561,"mtime":1661179060785,"results":"283","hashOfConfig":"225"},{"size":16679,"mtime":1661179060784,"results":"284","hashOfConfig":"225"},{"size":1482,"mtime":1661179060779,"results":"285","hashOfConfig":"225"},{"size":881,"mtime":1661179060779,"results":"286","hashOfConfig":"225"},{"size":2418,"mtime":1661179060780,"results":"287","hashOfConfig":"225"},{"size":0,"mtime":1661179060793,"results":"288","hashOfConfig":"225"},{"size":0,"mtime":1661179060776,"results":"289","hashOfConfig":"225"},{"size":16195,"mtime":1661179060794,"results":"290","hashOfConfig":"225"},{"size":19133,"mtime":1661179060793,"results":"291","hashOfConfig":"225"},{"size":3066,"mtime":1661179060793,"results":"292","hashOfConfig":"225"},{"size":0,"mtime":1661179060775,"results":"293","hashOfConfig":"225"},{"size":8892,"mtime":1661179060775,"results":"294","hashOfConfig":"225"},{"size":2157,"mtime":1661179060776,"results":"295","hashOfConfig":"225"},{"size":5293,"mtime":1661179060783,"results":"296","hashOfConfig":"225"},{"size":3748,"mtime":1661179060795,"results":"297","hashOfConfig":"225"},{"size":19566,"mtime":1661179060795,"results":"298","hashOfConfig":"225"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},"1uoma0x",{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"301"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"301"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"301"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"301"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"301"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"301"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"301"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"301"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"301"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"301"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"301"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"301"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"301"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"301"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"301"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"301"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"301"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"301"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"301"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"301"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"301"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"301"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"301"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"301"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12dukld",{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"562","messages":"563","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"618","messages":"619","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\index.js",[],["620","621"],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\serviceWorker.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\App.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\theme.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\expire.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\prixerProfile.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\login\\loginPage.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\fullscreenPhoto\\fullscreenPhoto.jsx",["622","623","624","625","626"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport AppBar from '../../sharedComponents/appBar/appBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FloatingAddButton from '../../sharedComponents/floatingAddButton/floatingAddButton';\r\nimport ArtUploader from '../../sharedComponents/artUploader/artUploader';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport utils from '../../utils/utils';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Img from \"react-cool-img\";\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  loading: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    marginLeft: \"50vw\",\r\n    marginTop: \"50vh\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'left',\r\n    maxWidth: 850,\r\n    flexGrow:1\r\n  },\r\n  root: {\r\n    width: '100vw'\r\n  },\r\n  float: {\r\n    position:'relative',\r\n    marginLeft:'87%'\r\n  }\r\n}));\r\n\r\nconst photoIsos = [\r\n  '100',\r\n  '200',\r\n  '400'\r\n]\r\n\r\nexport default function FullscreePhoto(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [ready, setReady] = useState(false);\r\n  const [tiles, setTiles] = useState([]);\r\n  const [updatedTile, setUpdatedTile] = useState([]);\r\n  const [artDataState, setArtDataState] = useState();\r\n  const [snackBar, setSnackBar] = useState(false);\r\n  const [snackBarMessage, setSnackBarMessage] = useState(false);\r\n  const [openArtFormDialog, setOpenArtFormDialog] = useState(false);\r\n\r\nconst handleArtEdit = (e, tile)=> {\r\n  if(artDataState===tile.artId) {\r\n    setUpdatedTile(tile);\r\n    setArtDataState('');\r\n  } else {\r\n    setArtDataState(tile.artId);\r\n  } \r\n}\r\n\r\nconst handleArtDescriptionEdit = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await descriptionEdit(tempTiles,tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleArtTitleEdit = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await titleEdit(tempTiles, tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleOriginalPhotoHeight = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await originalPhotoHeightEdit(tempTiles, tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleOriginalPhotoWidth = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await originalPhotoWidthEdit(tempTiles, tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleOriginalPhotoPpi = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await originalPhotoPpiEdit(tempTiles, tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleOriginalPhotoIso = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await originalPhotoIsoEdit(tempTiles, tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleArtTagsEdit = async (e, tile, tags)=> {\r\n  let tempTiles = tiles;\r\n  let result = await tagsEdit(tempTiles, tile, e, tags);\r\n  setTiles(result);\r\n}\r\n\r\nconst handleArtLocationEdit = async (e, tile)=> {\r\n  let tempTiles = tiles;\r\n  let result = await locationEdit(tempTiles, tile, e);\r\n  setTiles(result);\r\n}\r\n\r\nfunction tagsEdit(tempTiles, tile, e, tags) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.tags = tags\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction locationEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.artLocation = e.target.value\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction titleEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.title = e.target.value\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction originalPhotoHeightEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.originalPhotoHeight = e.target.value\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction originalPhotoWidthEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.originalPhotoWidth = e.target.value\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction originalPhotoPpiEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.originalPhotoPpi = e.target.value\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction originalPhotoIsoEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item) => {\r\n    if (item.artId === tile.artId) {\r\n      item.originalPhotoIso = e.target.value\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction descriptionEdit(tempTiles, tile, e) {\r\n  return tempTiles.map((item)=> {\r\n    if(item.artId === tile.artId) {\r\n      item.description = e.target.value;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nconst maxPrintValues = (tile)=> {\r\n\r\n  const [maxPrintWidthCm, maxPrintHeightCm] = \r\n    utils.maxPrintCalc(\r\n      tile.originalPhotoWidth, \r\n      tile.originalPhotoHeight, \r\n      tile.originalPhotoPpi, \r\n      tile.originalPhotoIso\r\n      );\r\n\r\n  return maxPrintWidthCm + \" x \" + maxPrintHeightCm + \" cm\";\r\n        \r\n}\r\n\r\nconst navigateToPrixer = (e, prixerUsername)=> {\r\n  // history.push({pathname:'/'+ prixerUsername});\r\n}\r\n\r\n// const copyCodeToClipboard = (e, tile) => {\r\n//   const el = document.createElement('textarea');\r\n//   el.value = utils.generateArtMessage(tile, 'copy');\r\n//   document.body.appendChild(el);\r\n//   el.select();\r\n//   document.execCommand('copy');\r\n//   document.body.removeChild(el);\r\n// }\r\n  \r\nuseEffect(()=> {\r\n  if(tiles){\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-prixer\";\r\n    const data = {\r\n      username: props.match.params.username\r\n    }\r\n    axios.post(base_url, data)\r\n    .then(response =>{\r\n      if(tiles.length !== response.data.arts.length) {\r\n        setTiles(response.data.arts);\r\n        setReady(true);\r\n        if(document.getElementById(props.match.params.artId)) {\r\n          document.getElementById(props.match.params.artId).scrollIntoView({\r\n              behavior: 'smooth',\r\n              block: 'center',\r\n            });\r\n        } else {\r\n          setSnackBarMessage('Arte no encontrado, por favor inténtalo de nuevo.');\r\n          setSnackBar(true);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if(artDataState === '') {\r\n      const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/update\";\r\n      const data= {\r\n          'title': updatedTile.title,\r\n          'description': updatedTile.description,\r\n          'tags': updatedTile.tags,\r\n          'imageUrl': updatedTile.imageUrl,\r\n          'thumbnailUrl': updatedTile.thumbnailUrl,\r\n          'userId': updatedTile.userId,\r\n          'category': updatedTile.category,\r\n          'license': updatedTile.license,\r\n          'use': updatedTile.use,\r\n          'prixerUsername': updatedTile.prixerUsername,\r\n          'status': updatedTile.status,\r\n          'publicId': updatedTile.publicId,\r\n          '_id': updatedTile._id,\r\n          'artId': updatedTile.artId,\r\n          'artType': updatedTile.artType,\r\n          'originalPhotoWidth': updatedTile.originalPhotoWidth,\r\n          'originalPhotoHeight': updatedTile.originalPhotoHeight,\r\n          'originalPhotoIso': updatedTile.originalPhotoIso,\r\n          'originalPhotoPpi': updatedTile.originalPhotoPpi,\r\n          'artLocation': updatedTile.artLocation\r\n          };\r\n          axios.post(base_url,data)\r\n          .then(response =>{\r\n            if(response.data.data.success){\r\n              setSnackBarMessage(response.data.data.artResult);\r\n              setSnackBar(true);\r\n            } else {\r\n              setSnackBarMessage(response.data.data.error_message);\r\n              setSnackBar(true);\r\n            }\r\n          })\r\n          .catch(error =>{\r\n              console.log(error.response)\r\n          })\r\n    }\r\n  }, [artDataState])\r\n\r\n\r\n  return (\r\n      !ready? \r\n      <div className={classes.loading}>\r\n        <CircularProgress />\r\n      </div> \r\n      :\r\n      <Container component=\"main\" className={classes.paper}>\r\n      <div style={{position:'fixed', zIndex:'20', marginTop: 10}}>\r\n      <AppBar />\r\n      </div>\r\n      <div style={{marginTop: 55}}>\r\n      {tiles ?\r\n      tiles.map((tile) => (\r\n        (artDataState !== tile.artId) ?\r\n        <div id={tile.artId} key={tile.artId}>\r\n        <Card style={{marginTop: 35}}>\r\n            <CardActionArea>\r\n                {/* <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                image={tile.imageUrl}\r\n                title=\"Contemplative Reptile\"\r\n                /> */}\r\n                <Img \r\n                  placeholder=\"/imgLoading.svg\"\r\n                  style={{ backgroundColor: \"#eeeeee\", width: '100%' }}\r\n                  src={tile.largeThumbUrl || tile.thumbnailUrl} \r\n                  debounce={1000} // Default is 300 (ms)\r\n                  cache\r\n                  error=\"/imgError.svg\"\r\n                  srcSet={tile.smallThumbUrl + ' 600w, ' + tile.mediumThumbUrl + ' 850w, ' + tile.largeThumbUrl + ' 1300w'}\r\n                  sizes=\"(min-width: 960px) 1300px, (min-width: 640px) 850px, 600px\"\r\n                  alt={tile.title}\r\n                  id={tile.artId}\r\n                />\r\n                <CardContent>\r\n                  <Grid item container xs={12} sm={12} style={{whiteSpace: 'nowrap', padding:0, margin:0}} justify=\"space-between\">\r\n                    <Typography style={{display:'inline-block', fontSize: '0.8em', paddingLeft:0}}> \r\n                        ID: {tile.artId}\r\n                    </Typography>\r\n                    <div onClick={navigateToPrixer(tile.prixerUsername)}>\r\n                    <Typography gutterBottom variant=\"h7\" component=\"h2\" style={{display:'inline-block', right: 0, textAlign:'right', margin:0, fontSize: 12}}>\r\n                      Prixer: {tile.prixerUsername}\r\n                    </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                <Grid item container xs={12} sm={12} justify=\"space-between\" style={{textAlign:'left', padding:0, margin:0}}>\r\n                  <Grid item xs={6} sm={6} style={{textAlign:'left', padding:0, margin:0}}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{margin:0}}>\r\n                        {tile.title}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container xs={12} sm={12} style={{textAlign:'left', padding:0, margin:0}}>\r\n                  { tile.artLocation &&\r\n                    <Typography style={{fontSize: '0.8em', paddingBottom: 10, paddingLeft: 3}}> \r\n                      Ubicación: {tile.artLocation}\r\n                    </Typography>\r\n                  }\r\n                </Grid>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{whiteSpace: 'pre-line', fontSize: '1.1em', marginBottom: 10}}>\r\n                    {tile.description}\r\n                </Typography>\r\n                {\r\n                  (tile.originalPhotoHeight && tile.originalPhotoWidth) &&\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      Máximo para impresión: {maxPrintValues(tile)}\r\n                  </Typography>\r\n                }\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {/* <Button size=\"small\" color=\"primary\">\r\n                  Comparte\r\n                </Button> */}\r\n                <Button size=\"small\" color=\"primary\" onClick={(e)=>{window.open(utils.generateWaMessage(tile), '_blank');}}>\r\n                  <WhatsAppIcon /> Escríbenos\r\n                </Button>\r\n                {\r\n                JSON.parse(localStorage.getItem('token')) &&\r\n                JSON.parse(localStorage.getItem('token')).username == tile.prixerUsername &&\r\n                    <Button size=\"small\" color=\"primary\" onClick={(e)=>{handleArtEdit(e, tile)}}>\r\n                      Editar\r\n                    </Button>\r\n                }\r\n                {/* <Button size=\"small\" color=\"primary\" onClick={(e)=>{copyCodeToClipboard(e, tile)}}>\r\n                  <FileCopyIcon/>\r\n                </Button> */}\r\n            </CardActions>\r\n        </Card>\r\n        </div>\r\n      :\r\n      <Card id={tile.artId} key={tile.artId}>\r\n      <CardActionArea>\r\n          {/* <CardMedia\r\n          component=\"img\"\r\n          alt=\"img\"\r\n          image={tile.imageUrl}\r\n          title=\"img\"\r\n          /> */}\r\n          <Img\r\n            placeholder=\"/imgLoading.svg\"\r\n            style={{ backgroundColor: \"#eeeeee\", height: '100%' }}\r\n            src={tile.largeThumbUrl || tile.thumbnailUrl} \r\n            debounce={1000} // Default is 300 (ms)\r\n            cache\r\n            error=\"/imgError.svg\"\r\n            srcSet={tile.smallThumbUrl + ' 600w, ' + tile.mediumThumbUrl + ' 850w, ' + tile.largeThumbUrl + ' 1300w'}\r\n            sizes=\"(min-width: 960px) 1300px, (min-width: 640px) 850px, 600px\"\r\n            alt={tile.title} \r\n            id={tile.artId}\r\n          />\r\n          <CardContent>\r\n          <Grid item xs={12} container>\r\n            <Grid item xs container direction=\"column\">\r\n              <Grid item xs>\r\n                <Grid item xs>\r\n                  <TextField \r\n                  fullWidth id='artTitle' \r\n                  label=\"Titulo del arte\" \r\n                  variant=\"outlined\"\r\n                  value={tile.title} \r\n                  onChange={(e)=> {handleArtTitleEdit(e, tile)}} />\r\n                </Grid>\r\n                {\r\n                tile.artType === 'Foto' &&\r\n                <React.Fragment>\r\n                  <Grid item container xs={12} style={{paddingTop: 15, paddingBottom: 15}}>\r\n                    <Grid item xs={12} sm={12} style={{textAlign:'left'}}>\r\n                      <Typography style={{whiteSpace: 'pre-line', fontSize: '1.3em'}}> Medida del archivo original </Typography>\r\n                    </Grid>\r\n                    {\r\n                    (tile.originalPhotoWidth && tile.originalPhotoHeight) &&\r\n                      <Grid item container xs={12} sm={12} style={{paddingTop: 15}} justify=\"space-between\">\r\n                        <Grid item xs={5} sm={5}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"originalPhotoWidth\"\r\n                            label=\"Ancho\"\r\n                            type=\"number\"\r\n                            name=\"originalPhotoWidth\"\r\n                            autoComplete=\"originalPhotoWidth\"\r\n                            value={tile.originalPhotoWidth}\r\n                            onChange={(e)=>{\r\n                              handleOriginalPhotoWidth(e, tile);\r\n                              if(e.target.value < 2000) {\r\n                                setSnackBarMessage('La foto original debe tener un ancho mayor a 2.000 px.');\r\n                                setSnackBar(true);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                          <Typography style={{paddingTop: 13}}> x </Typography>\r\n                        <Grid item xs={5} sm={5}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            id=\"originalPhotoHeight\"\r\n                            label=\"Alto\"\r\n                            name=\"originalPhotoHeight\"\r\n                            autoComplete=\"originalPhotoHeight\"\r\n                            value={tile.originalPhotoHeight}\r\n                            onChange={(e)=>{\r\n                              handleOriginalPhotoHeight(e, tile);\r\n                              if(e.target.value < 2000) {\r\n                                setSnackBarMessage('La foto original debe tener un alto mayor a 2.000 px.');\r\n                                setSnackBar(true);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                          <Typography style={{paddingTop: 13, paddingLeft: 2}}> px </Typography>\r\n                      </Grid>\r\n                    }\r\n                    <Grid item container xs={12} sm={12} style={{paddingTop: 15}} justify=\"space-between\">\r\n                      <Grid item xs={5} sm={5}>\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              type=\"number\"\r\n                              id=\"originalPhotoPpi\"\r\n                              label=\"PPI\"\r\n                              name=\"originalPhotoPpi\"\r\n                              autoComplete=\"originalPhotoPpi\"\r\n                              value={tile.originalPhotoPpi}\r\n                              onChange={(e)=>{\r\n                                handleOriginalPhotoPpi(e, tile);\r\n                                if(e.target.value < 100) {\r\n                                  setSnackBarMessage('La foto original debe ser mayor a 100 ppi.');\r\n                                  setSnackBar(true);\r\n                                }\r\n                              }}\r\n                            />\r\n                      </Grid>\r\n                      <Grid item xs={5} sm={6} style={{paddingLeft: 0}}>\r\n                        <FormControl variant=\"outlined\" style={{width:\"100%\"}}>\r\n                          <InputLabel id=\"originalPhotoIsoLabel\" style={{width:\"100%\"}}>ISO</InputLabel>\r\n                          <Select\r\n                            labelId=\"originalPhotoIsoLabel\"\r\n                            id=\"originalPhotoIso\"\r\n                            value={tile.originalPhotoIso}\r\n                            onChange={(e)=>{\r\n                              handleOriginalPhotoIso(e, tile);\r\n                            }}\r\n                            label=\"originalPhotoIso\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em></em>\r\n                            </MenuItem>\r\n                            { photoIsos.map((n)=> (\r\n                                <MenuItem key={n} value={n}>{n}</MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container xs={12} justify=\"space-between\">\r\n                    <Grid item xs={12} sm={12} style={{textAlign:'left'}}>\r\n                      <Typography style={{whiteSpace: 'pre-line', fontSize: '1.3em'}}> Medida máxima para impresión:</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} style={{textAlign:'left'}}>\r\n                      <Typography style={{whiteSpace: 'pre-line', fontSize: '1.3em'}}>  {maxPrintValues(tile)} </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item container xs={12}>\r\n                  </Grid>\r\n                </React.Fragment>\r\n                }\r\n                {/* <Grid item container xs={12} style={{marginBottom: 15}}>\r\n                  <Grid item xs={4} sm={4}>\r\n                    <Typography style={{whiteSpace: 'pre-line', padding: 15, fontSize: '0.7em'}}> Máximo para <br/> impresión (cm) </Typography>\r\n                  </Grid>\r\n                  <Grid item container xs={8} sm={8}>\r\n                    <Grid item xs={5} sm={5}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"originalArtWidth\"\r\n                        label=\"Ancho\"\r\n                        name=\"originalArtWidth\"\r\n                        autoComplete=\"originalArtHeight\"\r\n                        value={tile.originalArtWidth}\r\n                        onChange={(e)=> {handleArtOriginalWidthEdit(e, tile)}}\r\n                      />\r\n                    </Grid>\r\n                      <Typography style={{padding: 10}}> x </Typography>\r\n                    <Grid item xs={5} sm={5}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"originalArtHeight\"\r\n                        label=\"Alto\"\r\n                        name=\"originalArtHeight\"\r\n                        autoComplete=\"originalArtHeight\"\r\n                        value={tile.originalArtHeight}\r\n                        onChange={(e)=> {handleArtOriginalHeightEdit(e, tile)}}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid> */}\r\n                <Grid item xs style={{marginBottom:20, marginTop: 20}}>  \r\n                  <TextField \r\n                    multiline rows={2} \r\n                    fullWidth id='artDescription'\r\n                    variant=\"outlined\" \r\n                    label=\"Descripción del arte\" \r\n                    value={tile.description} \r\n                    onChange={(e)=> {handleArtDescriptionEdit(e, tile)}} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Autocomplete\r\n                      multiple\r\n                      freeSolo\r\n                      id=\"tags-outlined\"\r\n                      options={[]}\r\n                      defaultValue={[]}\r\n                      value={tile.tags}\r\n                      onChange={(e, tags, reason) => {\r\n                        handleArtTagsEdit(e, tile, tags);\r\n                      }}\r\n                      renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            onKeyDown={e => {\r\n                              if (e.key === 13 && e.target.value) {\r\n                                handleArtTagsEdit(e, tile);\r\n                              }\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            label=\"Etiquetas\"\r\n                            placeholder=\"tags\"\r\n                        />\r\n                      )}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop: 15}}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"artLocation\"\r\n                    label=\"Ubicación\"\r\n                    name=\"artLocation\"\r\n                    autoComplete=\"artLocation\"\r\n                    value={tile.artLocation}\r\n                    onChange={(e)=>handleArtLocationEdit(e, tile)}\r\n                  />\r\n                </Grid> \r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {/* <Button size=\"small\" color=\"primary\">\r\n                Comparte\r\n                </Button> */}\r\n                {\r\n                JSON.parse(localStorage.getItem('token')) &&\r\n                JSON.parse(localStorage.getItem('token')).username &&\r\n                  <Button size=\"small\" color=\"primary\" onClick={(e)=>{handleArtEdit(e, tile)}}>\r\n                    Guardar\r\n                  </Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n          ))\r\n          :\r\n          <p>Prueba prueba</p>\r\n        }\r\n        {\r\n          openArtFormDialog &&\r\n          <ArtUploader  \r\n            openArtFormDialog={openArtFormDialog} \r\n            setOpenArtFormDialog={setOpenArtFormDialog} \r\n            />\r\n        }\r\n        {\r\n          JSON.parse(localStorage.getItem('token')) &&\r\n          JSON.parse(localStorage.getItem('token')).username &&\r\n          <Grid className={classes.float}>\r\n            <FloatingAddButton setOpenArtFormDialog={setOpenArtFormDialog} />\r\n          </Grid>\r\n        }\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={2000}\r\n          message={snackBarMessage}\r\n          className={classes.snackbar}\r\n          onClose={() => setSnackBar(false)}\r\n        />\r\n    </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\adminLogin\\adminLoginPage.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\products\\productsCatalog.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\gallery\\gallery.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\passwordReset.jsx",["627"],"//Llevar el Password a un componente propio.\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport validations from '../../utils/validations';\r\nimport Copyright from '../../sharedComponents/Copyright/copyright';\r\n\r\n//material-ui\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function PasswordReset(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const token = props.match.params.token;\r\n  const [backdrop, setBackdrop] = useState(true);\r\n\r\n  //Error states.\r\n  const [newPasswordError, setNewPasswordError] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n//FALTA AGREGAR AQUI LA VALIDACION DE QUE EL LINK EXISTE.\r\n  useEffect(()=>{\r\n\r\n    if(!token) {\r\n        setErrorMessage('Token inválido o expirado. Por favor inténtalo de nuevo.');\r\n        setSnackBarError(true);\r\n    } else {\r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/pw-token-check\";\r\n        const data= {\r\n          'token': token\r\n          };\r\n        axios.post(base_url,data)\r\n        .then(response =>{\r\n            if(!response.data.success){\r\n                setErrorMessage(response.data.info);\r\n                setSnackBarError(true);\r\n            } else {\r\n                setBackdrop(false);\r\n            }\r\n        })\r\n        .catch(error =>{\r\n            console.log(error.response)\r\n        })\r\n      }\r\n\r\n  });\r\n\r\n  const handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n    if((!newPassword)) {\r\n      setErrorMessage('Por favor completa todos los campos requeridos.');\r\n      setSnackBarError(true);\r\n    } else {\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/reset-password\";\r\n    const data= {\r\n      'token': token,\r\n      'newPassword': newPassword\r\n      };\r\n    axios.post(base_url,data)\r\n    .then(response =>{\r\n        if(!response.data.success){\r\n          setNewPasswordError(true);\r\n          setErrorMessage(\"Por favor intentar nuevamente\");\r\n          setSnackBarError(true);\r\n        } else {\r\n          setErrorMessage(response.data.info);\r\n          setSnackBarError(true);\r\n          history.push({pathname:'/iniciar'});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error.response)\r\n    })\r\n  }\r\n   } \r\n\r\n//New password\r\nconst handleNewPasswordChange = (e)=> {\r\n    if(validations.isAValidPassword(e.target.value)) {\r\n      setNewPassword(e.target.value); \r\n      setNewPasswordError(false);\r\n      setSnackBarError(false);\r\n    } else {\r\n      setNewPassword(e.target.value); \r\n      setNewPasswordError(true); \r\n      setErrorMessage('Disculpa, tu contraseña nueva debe tener entre 8 y 15 caracteres, incluyendo al menos: una minúscula, una mayúscula, un número y un caracter especial.');\r\n      setSnackBarError(true);\r\n    }\r\n   }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n      setShowNewPassword(!showNewPassword);\r\n    };\r\n  \r\n    const handleMouseDownNewPassword = (event) => {\r\n      event.preventDefault();\r\n    };\r\n//END New password\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n    <Backdrop className={classes.backdrop} open={backdrop}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cambia tu contraseña\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n              <InputLabel htmlFor=\"new-password\">Contraseña nueva</InputLabel>\r\n              <OutlinedInput\r\n                id=\"new-password\"\r\n                type={showNewPassword ? 'text' : 'password'}\r\n                value={newPassword}\r\n                label=\"Contraseña nueva\"\r\n                error={newPasswordError}\r\n                onChange={handleNewPasswordChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowNewPassword}\r\n                      onMouseDown={handleMouseDownNewPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showNewPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={100}\r\n              />\r\n            </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"submit\"\r\n          >\r\n            Cambiar contraseña\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={6000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n    </Container>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\forgotPassword.jsx",["628","629","630","631","632","633","634","635"],"//Llevar el Password a un componente propio.\r\n\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport Copyright from '../../sharedComponents/Copyright/copyright';\r\n\r\n//material-ui\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n\r\n  //Error states.\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n  const handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n    if(!email) {\r\n      setErrorMessage('Por favor indica tu correo electrónico registrado para reestablecer tu contraseña.');\r\n      setSnackBarError(true);\r\n    } else {\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/forgot-password\";\r\n    const data= {\r\n      'email': email,\r\n      };\r\n    axios.post(base_url,data)\r\n    .then(async response =>{\r\n        if(!response.data.success){\r\n        //   setCurrentPasswordError(true);\r\n          setErrorMessage(response.data.info);\r\n          setSnackBarError(true);\r\n        } else {\r\n          setErrorMessage('Hemos enviado un enlace a tu correo electrónico.');\r\n          setSnackBarError(true);\r\n          await sleep(3000);\r\n          history.push({pathname:'/'});\r\n        }\r\n    })\r\n    .catch(error =>{\r\n        console.log(error.response)\r\n    })\r\n  }\r\n   } \r\n\r\n\r\n   const handleEmailChange = (e)=> {\r\n     setEmail(e.target.value)\r\n   }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Solicita el cambio de contraseña\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    // error={emailError}\r\n                    id=\"email\"\r\n                    label=\"Correo electrónico\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"submit\"\r\n          >\r\n            Recuperar acceso\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={6000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n    </Container>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\passwordChange\\passwordChange.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\adminMain.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\register\\prixerRegistration.jsx",["636","637","638","639","640","641","642","643","644","645","646","647","648","649","650"],"import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useState } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nimport Terms from \"./Terms\"; //Anterior Términos y condiciones\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://prixelart.com/\">\r\n        prixelart.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#000\",\r\n    backgroundColor: \"#fff\",\r\n    width: \"160px\",\r\n    height: \"160px\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  loading: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(0),\r\n    },\r\n    marginLeft: \"50%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  modal: {\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    maxHeight: 450,\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"white\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: \"16px 32px 24px\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    textAlign: \"justify\",\r\n  },\r\n  button: {\r\n    textAlign: \"center\",\r\n  },\r\n  root: {\r\n    height: 300,\r\n    flexGrow: 1,\r\n    minWidth: 300,\r\n  },\r\n}));\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst specialties = [\"Fotografía\", \"Diseño\", \"Artes plásticas\"];\r\nfunction getStyles(specialty, theme) {\r\n  return {\r\n    fontWeight:\r\n      specialty.indexOf(specialty) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nexport default function PrixerRegistration() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [facebook, setFacebook] = useState(\"\");\r\n  const [twitter, setTwitter] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState();\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarObj, setAvatarObj] = useState(\"\");\r\n  const [buttonState, setButtonState] = useState(true);\r\n  const [termsAgree, setTermsAgree] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isChecked, setIsChecked] = React.useState(false);\r\n  const theme = useTheme();\r\n  const [specialty, setSpecialty] = React.useState([]);\r\n  const [change, setChange] = useState(false);\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleOnChange = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n  const setCheckedBox = () => {\r\n    setIsChecked(!Checkbox);\r\n  };\r\n  const styles = useStyles();\r\n  const [modal, setModal] = useState(false);\r\n  const openModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const acceptTerms = () => {\r\n    setIsChecked(!isChecked);\r\n    openModal();\r\n  };\r\n  const body = (\r\n    <div className={styles.modal}>\r\n      {/* <Terms /> */}\r\n      <div>{value}</div>\r\n\r\n      <div align=\"center\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setIsChecked(true);\r\n            setModal(false);\r\n          }}\r\n        >\r\n          Aceptar\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //Error states.\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !instagram ||\r\n      !dateOfBirth ||\r\n      !specialty ||\r\n      !phone ||\r\n      !country ||\r\n      !city ||\r\n      !description ||\r\n      !isChecked\r\n    ) {\r\n      // ||(!avatar)) {\r\n      setErrorMessage(\"Por favor completa todos los campos requeridos.\");\r\n      setSnackBarError(true);\r\n      setIsChecked(true);\r\n    } else {\r\n      setLoading(true);\r\n      setButtonState(true);\r\n      const base_url =\r\n        process.env.REACT_APP_BACKEND_URL + \"/prixer-registration\";\r\n      // const cldAvatarUrl = await uploadToCld();\r\n      const data = {\r\n        specialtyArt: specialty,\r\n        instagram: instagram,\r\n        facebook: facebook,\r\n        twitter: twitter,\r\n        dateOfBirth: dateOfBirth,\r\n        phone: phone,\r\n        country: country,\r\n        city: city,\r\n        description: description,\r\n        termsAgree: termsAgree,\r\n        // 'avatar': cldAvatarUrl,\r\n        username: JSON.parse(localStorage.getItem(\"token\")).username,\r\n      };\r\n\r\n      axios\r\n        .post(base_url, data)\r\n        .then((response) => {\r\n          if (response.data.success === false) {\r\n            setLoading(false);\r\n            setButtonState(false);\r\n            setErrorMessage(response.data.message);\r\n            setSnackBarError(true);\r\n          } else {\r\n            setErrorMessage(\"Registro de Prixer exitoso.\");\r\n            setSnackBarError(true);\r\n            history.push({ pathname: \"/\" + response.data.prixerData.username });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setButtonState(false);\r\n          console.log(error.response);\r\n        });\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    setSpecialty(event.target.value);\r\n  };\r\n  const getTerms = () => {\r\n    const base_url =\r\n      process.env.REACT_APP_BACKEND_URL + \"/termsAndConditions/read\";\r\n    axios\r\n      .get(base_url)\r\n      .then((response) => {\r\n        setValue(response.data.terms.termsAndConditions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getTerms();\r\n  }, []);\r\n  console.log(isChecked);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Comparte con tus futuros clientes\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={3}>\r\n            {loading && (\r\n              <div className={classes.loading}>\r\n                <CircularProgress />\r\n              </div>\r\n            )}\r\n            <Grid item xs={6}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-mutiple-name-label\">\r\n                  Especialidad\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-mutiple-name-label\"\r\n                  id=\"demo-mutiple-name\"\r\n                  multiple\r\n                  value={specialty}\r\n                  onChange={handleChange}\r\n                  input={<Input />}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {specialties.map((specialty) => (\r\n                    <MenuItem\r\n                      key={specialty}\r\n                      value={specialty}\r\n                      style={getStyles(specialty, theme)}\r\n                    >\r\n                      {specialty}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              sm={6}\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <TextField\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n                id=\"dateOfBirth\"\r\n                label=\"Fecha de Nacimiento\"\r\n                type=\"date\"\r\n                required\r\n                format=\"dd-MM-yyyy\"\r\n                defaultValue=\"06-07-2016\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e) => {\r\n                  setDateOfBirth(new Date(e.target.value));\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"instagram\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={instagram}\r\n                id=\"instagram\"\r\n                label=\"Instagram\"\r\n                autoFocus\r\n                onChange={(e) => {\r\n                  setInstagram(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"facebook\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={facebook}\r\n                id=\"facebook\"\r\n                label=\"Facebook\"\r\n                autoFocus\r\n                onChange={(e) => {\r\n                  setFacebook(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"twitter\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={twitter}\r\n                id=\"twitter\"\r\n                label=\"Twitter\"\r\n                autoFocus\r\n                onChange={(e) => {\r\n                  setTwitter(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"phone\"\r\n                label=\"Teléfono\"\r\n                value={phone}\r\n                onChange={(e) => {\r\n                  setPhone(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"country\"\r\n                label=\"País\"\r\n                value={country}\r\n                type=\"country\"\r\n                id=\"country\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  setCountry(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"city\"\r\n                label=\"Ciudad\"\r\n                value={city}\r\n                type=\"city\"\r\n                id=\"city\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  setCity(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"description\"\r\n                label=\"Descripción\"\r\n                value={description}\r\n                type=\"description\"\r\n                id=\"description\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              paddingTop: \"24px\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              style={{ margin: 0, paddingRight: 8 }}\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  value={isChecked}\r\n                  checked={isChecked ? true : false}\r\n                />\r\n              }\r\n              label=\"Acepto los\"\r\n              onChange={handleOnChange}\r\n              required\r\n            />\r\n\r\n            <a\r\n              style={{\r\n                textTransform: \"lowercase\",\r\n                fontSize: \"1rem\",\r\n                textDecoration: \"underline\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={openModal}\r\n            >\r\n              Términos y condiciones\r\n            </a>\r\n            <Modal\r\n              open={modal}\r\n              onClose={openModal}\r\n              xl={800}\r\n              lg={800}\r\n              md={480}\r\n              sm={360}\r\n              xs={360}\r\n            >\r\n              {body}\r\n            </Modal>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"submit\"\r\n            required\r\n            disabled={!isChecked}\r\n          >\r\n            Guardar e ir a mi perfil\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n        open={snackBarError}\r\n        autoHideDuration={1000}\r\n        message={errorMessage}\r\n        className={classes.snackbar}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\register\\userRegistration.jsx",["651","652","653","654","655","656","657","658","659"],"//Llevar el Password a un componente propio.\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport validations from \"../utils/validations\";\r\nimport Copyright from \"../sharedComponents/Copyright/copyright\";\r\n\r\n//material-ui\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { FormControlLabel } from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\n// import Terms from \"./Terms\";     //Anterior Términos y condiciones\r\nimport clsx from \"clsx\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    maxHeight: 450,\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"white\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: \"16px 32px 24px\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    textAlign: \"justify\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [buttonState, setButtonState] = useState(true);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [termsAgree, setTermsAgree] = useState(false);\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  const handleOnChange = () => {\r\n    setIsChecked(!isChecked);\r\n    setTermsAgree(!isChecked);\r\n  };\r\n  const styles = useStyles();\r\n  const [modal, setModal] = useState(false);\r\n  const openModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const body = (\r\n    <div className={styles.modal}>\r\n      <div>{value}</div>\r\n      {/* <Terms /> */}\r\n      <div align=\"center\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => openModal()}>\r\n          Aceptar\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  //Error states.\r\n  const [usernameError, setUsernameError] = useState();\r\n  const [emailError, setEmailError] = useState();\r\n  const [passwordError, setPasswordError] = useState();\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n  const now = new Date();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!username || !email || !firstName || !lastName || !email || !password) {\r\n      setErrorMessage(\"Por favor completa todos los campos requeridos.\");\r\n      setSnackBarError(true);\r\n    } else {\r\n      const base_url = process.env.REACT_APP_BACKEND_URL + \"/register\";\r\n      const data = {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        termsAgree: termsAgree,\r\n      };\r\n      setButtonState(true);\r\n      axios\r\n        .post(base_url, data)\r\n        .then((response) => {\r\n          if (response.data.info === \"error_username\") {\r\n            setUsernameError(true);\r\n            setErrorMessage(response.data.message);\r\n            setSnackBarError(true);\r\n          } else if (response.data.info === \"error_email\") {\r\n            setEmailError(true);\r\n            setErrorMessage(response.data.message);\r\n            setSnackBarError(true);\r\n          } else {\r\n            setPasswordError(true);\r\n            setErrorMessage(\"Registro de usuario exitoso.\");\r\n            setSnackBarError(true);\r\n            const token = jwt(response.data.token);\r\n            localStorage.setItem(\"token\", JSON.stringify(token));\r\n            localStorage.setItem(\r\n              \"tokenExpire\",\r\n              JSON.stringify(now.getTime() + 21600000)\r\n            );\r\n            history.push({ pathname: \"/registrar/prixer\" });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setButtonState(false);\r\n          console.log(error.response);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (email && username && password) {\r\n      if (\r\n        validations.isAValidEmail(email) &&\r\n        validations.isAValidUsername(username) &&\r\n        validations.isAValidPassword(password)\r\n      ) {\r\n        setButtonState(false);\r\n      } else {\r\n        setButtonState(true);\r\n      }\r\n    } else {\r\n      setButtonState(true);\r\n    }\r\n  });\r\n\r\n  const handleEmailChange = (e) => {\r\n    if (validations.isAValidEmail(e.target.value)) {\r\n      setEmail(e.target.value);\r\n      setEmailError(false);\r\n      setSnackBarError(false);\r\n    } else {\r\n      setEmail(e.target.value);\r\n      setErrorMessage(\"Por favor introduce un correo electrónico válido.\");\r\n      setSnackBarError(true);\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    if (validations.isAValidUsername(e.target.value)) {\r\n      setUsername(e.target.value);\r\n      setUsernameError(false);\r\n      setSnackBarError(false);\r\n    } else {\r\n      setUsername(e.target.value);\r\n      setErrorMessage(\r\n        \"Por favor introduce un nombre de usuario que solo incluya letras en minúscula y números.\"\r\n      );\r\n      setSnackBarError(true);\r\n      setUsernameError(true);\r\n    }\r\n  };\r\n\r\n  //Password\r\n  const handlePasswordChange = (e) => {\r\n    if (validations.isAValidPassword(e.target.value)) {\r\n      setPassword(e.target.value);\r\n      setPasswordError(false);\r\n      setSnackBarError(false);\r\n    } else {\r\n      setPassword(e.target.value);\r\n      setPasswordError(true);\r\n      setErrorMessage(\r\n        \"Disculpa, tu contraseña debe tener entre 8 y 15 caracteres, incluyendo al menos: una minúscula, una mayúscula, un número y un caracter especial.\"\r\n      );\r\n      setSnackBarError(true);\r\n    }\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registrar\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                error={usernameError}\r\n                id=\"username\"\r\n                label=\"Usuario\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                value={username}\r\n                onChange={handleUsernameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Nombre\"\r\n                autoFocus\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Apellido\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                error={emailError}\r\n                id=\"email\"\r\n                label=\"Correo electrónico\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n                xs={12}\r\n                fullWidth={true}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Contraseña\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={password}\r\n                  label=\"Contraseña\"\r\n                  error={passwordError}\r\n                  onChange={handlePasswordChange}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={100}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            {/* <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                display: \"flex\",\r\n                paddingTop: \"24px\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                style={{ margin: 0 }}\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Acepto los\"\r\n                onChange={handleOnChange}\r\n                value={termsAgree}\r\n              />\r\n\r\n              <Button\r\n                style={{ textTransform: \"lowercase\", fontSize: \"1rem\" }}\r\n                onClick={() => openModal()}\r\n              >\r\n                Términos y condiciones\r\n              </Button>\r\n              <Modal\r\n                open={modal}\r\n                onClose={openModal}\r\n                width={isDesktop ? 800 : 420}\r\n              >\r\n                {body}\r\n              </Modal>\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"submit\"\r\n          >\r\n            Registrarme\r\n          </Button>\r\n          <Grid container style={{ justifyContent: \"center\" }}>\r\n            <Grid item>\r\n              <Link\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  history.push({ pathname: \"/iniciar\" });\r\n                }}\r\n                variant=\"body2\"\r\n              >\r\n                ¿Ya tienes una cuenta? Inicia sesión.\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n        open={snackBarError}\r\n        autoHideDuration={6000}\r\n        message={errorMessage}\r\n        className={classes.snackbar}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\home\\home.jsx",["660","661"],"import React, { useState, Suspense, useEffect } from 'react';\r\n// import AppBar from '@material-ui/core/AppBar';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport AppBar from '../sharedComponents/appBar/appBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport ArtsGrid from '../prixerProfile/grid/grid';\r\nimport PrixersGrid from '../sharedComponents/prixerGrid/prixerGrid';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport SimpleDialog from '../sharedComponents/simpleDialog/simpleDialog';\r\nimport FloatingAddButton from '../sharedComponents/floatingAddButton/floatingAddButton';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport MaximizeIcon from '@material-ui/icons/Maximize';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArtUploader from '../sharedComponents/artUploader/artUploader';\r\nimport utils from '../utils/utils';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://prixelart.com/\">\r\n        Prixelart C.A.\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconTabs: {\r\n    flexGrow: 1,\r\n    maxWidth: 666,\r\n    margin: 'auto',\r\n    marginBottom: 50\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'left',\r\n    overflowX: 'none',\r\n    flexGrow: 1,\r\n    overflow: 'visible'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(25, 0, 6),\r\n    minHeight: '100vh'\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    width: \"100%\",\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(8)\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n    position: 'relative',\r\n    bottom: 0\r\n  },\r\n  float: {\r\n    position:'relative',\r\n    marginLeft:'87%'\r\n  },\r\n  CarouselContent: {\r\n      width: '100vw',\r\n      heigh: '92vh'\r\n  }\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\r\n  const isDeskTop = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const classes = useStyles();\r\n  const prixerUsername = 'all';\r\n  const [imgsDesktop, setImgsDesktop] = useState({imgs: []})\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openPrixers, setOpenPrixers] = useState(false);\r\n  const [openArts, setOpenArts] = useState(true);\r\n  // const [scrolledTop, setScrolledTop] = useState(false);\r\n  const history = useHistory();\r\n  const [openArtFormDialog, setOpenArtFormDialog] = useState(false);\r\n  // const imgsDesktop =  [\r\n  //     {\r\n  //       url: './Portada_de_Pagina_Web_Museo_Chuao_Espejo_PC_v2.jpg'\r\n  //     },\r\n  //     {\r\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/bedroom-g9548c5f75_1920.jpg'\r\n  //     },\r\n  //     {\r\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/corporate-building-with-minimalist-empty-room%202.jpg'\r\n  //     },\r\n  //     {\r\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Vecislavas%20Popa%20en%20Pexels_lINEAL%20120X40.2.jpg'\r\n  //     },\r\n  //     {\r\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/interior_dark_blue_wall_with_yellow_sofa_and_decor_in_living_room.jpg'\r\n  //     },\r\n  //     {\r\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/interior-g373dfef45_1920.2.jpg'\r\n  //     },\r\n  //     {\r\n  //       url : 'https://devprix.nyc3.digitaloceanspaces.com/interior-g373dfef45_1920.jpg'\r\n  //     }\r\n  //   ]\r\nconst imgsMobile = [\r\n  {\r\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Portada%20de%20Pagina%20Web_Museo%20Chuao%20Espejo_Telefono_V1.jpg'\r\n  },\r\n  {\r\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Canva%20Studio%20en%20Pexels_16a9.jpg'\r\n  },\r\n  {\r\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Medhat%20Ayad%20en%20Pexels_9a16.jpg'\r\n  },\r\n  {\r\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Pixabay_%203X.2%20Phone.jpg'\r\n  },\r\n  {\r\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Vecislavas%20Popa%20en%20Pexels_lINEAL%20120X40.2%20%20Phone.jpg'\r\n  },\r\n  {\r\n    url: 'https://devprix.nyc3.digitaloceanspaces.com/Foto%20de%20Daria%20Shevtsova%20en%20Pexels.jpg'\r\n  }\r\n]\r\n  const handleChange = (event, newValue) => {\r\n\r\n    if (newValue === 0) {\r\n      setOpenArts(true);\r\n      setOpenModal(false);\r\n      setOpenPrixers(false);\r\n    } else if (newValue === 1) {\r\n      setOpenModal(false);\r\n      setOpenPrixers(true);\r\n      setOpenArts(false);\r\n    } else if (newValue === 2) {\r\n      setOpenModal(true);\r\n      setOpenPrixers(false);\r\n      setOpenArts(false);\r\n    } else {\r\n      setOpenModal(false);\r\n      setOpenPrixers(false);\r\n      setOpenArts(false);\r\n    }\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (prixerUsername == 'all') {\r\n  //     const base_url = process.env.REACT_APP_BACKEND_URL + \"/art/random\";\r\n\r\n  //     axios.get(base_url)\r\n  //       .then(response => {\r\n  //         // if (tiles.length != response.data.arts.length) {\r\n  //           setTiles(response.data.arts);\r\n  //         // }\r\n  //       });\r\n  //   }\r\n  // });\r\n\r\n  const getImagesForTheCarousel = () =>\r\n  {\r\n    const URI = process.env.REACT_APP_BACKEND_URL +'/admin/preferences/carousel';\r\n    fetch(URI)\r\n    .then(res => res.json()\r\n    .then(data => { setImgsDesktop({imgs: data.imagesCarousels})})\r\n    .catch(err => console.error(`Your request is wrong: ${err}`)))\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n  const handleGallery = (e) => {\r\n    e.preventDefault();\r\n    history.push({pathname:\"/galeria\"});\r\n  };\r\n\r\n  const handleProductCatalog = (e) => {\r\n    e.preventDefault();\r\n    history.push({pathname:\"/productos\"});\r\n  };\r\n\r\n  useEffect(() => \r\n  {\r\n    getImagesForTheCarousel();\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"s\" className={classes.paper}>\r\n        <CssBaseline />\r\n        <Grid>\r\n          <AppBar prixerUsername={prixerUsername} />\r\n        </Grid>\r\n        <main>\r\n          <Card className={classes.card} style={{ display: 'flex',\r\n           position: 'relative', \r\n           width: '100vw', \r\n           marginLeft: isDesktop ? '-24px' : '-16px' , \r\n           marginLeft: isDeskTop ? '-24px' : '-16px',\r\n           height: '100vh'}}>\r\n            <div className={classes.CarouselContent}>\r\n              <Carousel \r\n              stopAutoPlayOnHover={false}\r\n              animation='slide'\r\n              duration={500}\r\n              fullHeightHover={false}\r\n              style={{marginTop: isDesktop ? '0' : '-40px'}}\r\n              IndicatorIcon={<MaximizeIcon/>}\r\n              NextIcon={<ArrowForwardIosIcon style={{fontSize: '3rem'}} />}\r\n              PrevIcon={<ArrowBackIosIcon style={{fontSize: '3rem'}}/>}\r\n              navButtonsProps={\r\n                {\r\n                  style: {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n                    width: '98%',\r\n                    height: '100vh',\r\n                    marginTop: '-50vh',\r\n                    borderRadius: '0',\r\n                    marginLeft: '1px'\r\n                  }\r\n                }\r\n              }\r\n              indicatorContainerProps={\r\n                {\r\n                  style:{\r\n                    marginTop: isDesktop ? '-70px' : '-100px',\r\n                    position: 'absolute'\r\n                  }\r\n                }\r\n              }\r\n              >\r\n                {\r\n                  isDesktop ?\r\n                imgsDesktop.imgs.map((img, key_id) => \r\n                {\r\n                  return(\r\n                    <div className={classes.heroContent} key={key_id} style={{ backgroundImage: 'url(' + img.carouselImages + ')', backgroundSize: 'cover', backgroundPosition: 'top', marginTop: '-24px'}} ></div>\r\n                  )\r\n                })\r\n                 :\r\n                 imgsMobile.map((img, key_id) => \r\n                 {\r\n                  return(\r\n                    <div className={classes.heroContent} key={key_id} style={{ backgroundImage: 'url(' + img.url + ')', backgroundSize: 'cover', backgroundPosition: 'left'}}></div>\r\n                  )\r\n                 })\r\n                }\r\n                 </Carousel>\r\n            </div>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around', color: '#404e5c', backgroundColor: '#fff', width: '100%', minHeight: 50, bottom: 0, position: 'absolute', margin: 0, padding: 10, }}>\r\n              <div style={{ left: 10, alignItems: 'center', width: '400px' }}>\r\n                <Typography component=\"h1\" variant=\"h1\" align=\"left\" style={{ fontSize: '1.7em', paddingLeft: 10, textAlign: 'center' }} gutterBottom>\r\n                      Encuentra el <strong>cuadro</strong> ideal para ti.\r\n                </Typography>\r\n              </div>\r\n              <div style={{ display: 'flex', height: '100%', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <div>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" color=\"white\" style={{ width: 85, color: '#404e5c', fontSize: 13 }} onClick={handleGallery}>\r\n                     Galería\r\n                    </Button>\r\n                  </Grid>\r\n                </div>\r\n                <div>\r\n                  <Grid item style={{ marginLeft: 10 }}>\r\n                    <Button variant=\"contained\" color=\"white\" style={{ width: 85, color: '#404e5c', fontSize: 13 }} onClick={handleProductCatalog}>\r\n                      Productos\r\n                    </Button>\r\n                  </Grid>\r\n                </div>\r\n                <div>\r\n                  <Grid item style={{ marginLeft: 10 }}>\r\n                    <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{ width: 105, color: '#ffffff', fontSize: 13 }}\r\n                    onClick={(e)=>{window.open(utils.generateWaMessage(), '_blank');}}\r\n                    >\r\n                      <WhatsAppIcon/> Whatsapp\r\n                    </Button>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          <Container className={classes.cardGrid} maxWidth=\"xl\">\r\n            {/* End hero unit */}\r\n            {/* {scrolledTop ?\r\n              <Grid container spacing={1} style={{ position: 'fixed', top: 10 }}>\r\n                <Paper square className={classes.iconTabs}>\r\n                  <Tabs\r\n                    value={tabValue}\r\n                    onChange={handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    aria-label=\"icon label tabs example\"\r\n                  >\r\n                    <Tab icon={<PhotoLibraryIcon />} label=\"ARTES\" />\r\n                    <Tab icon={<FavoriteIcon />} label=\"PRIXERS\" />\r\n                    <Tab icon={<PhoneIcon />} label=\"TE ASESORAMOS\" />\r\n                  </Tabs>\r\n                </Paper>\r\n              </Grid>\r\n              : */}\r\n              <Grid container spacing={1}>\r\n                <Paper square className={classes.iconTabs}>\r\n                  <Tabs\r\n                    value={tabValue}\r\n                    onChange={handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    aria-label=\"icon label tabs example\"\r\n                  >\r\n                    <Tab icon={<PhotoLibraryIcon />} label=\"ARTES\" />\r\n                    <Tab icon={<FavoriteIcon />} label=\"PRIXERS\" />\r\n                    <Tab icon={<PhoneIcon />} label=\"TE ASESORAMOS\" />\r\n                    {/* <Tab icon={<PersonPinIcon />} label=\"CONFÍA EN PRIX\" /> */}\r\n                  </Tabs>\r\n                </Paper>\r\n              </Grid>\r\n            {/* } */}\r\n            {\r\n              openArts &&\r\n              // <Suspense fallback={<div>Loading...</div>}>\r\n              <ArtsGrid prixerUsername={null} />\r\n              // </Suspense>\r\n            }\r\n            {\r\n              openPrixers &&\r\n              // <Suspense fallback={<div>Loading...</div>}>\r\n              <PrixersGrid />\r\n              // </Suspense>\r\n            }\r\n          </Container>\r\n        </main>\r\n        {/* Footer */}\r\n        <footer className={classes.footer}>\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n            Si quieres convertirte en un Prixer <a target='blank' href='https://prixelart.com/registrar'>regístrate</a>.\r\n        </Typography>\r\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n            <a target='blank' href='https://instagram.com/prixelart'><InstagramIcon /></a>\r\n        </Typography>\r\n          <Copyright />\r\n        </footer>\r\n        {/* End footer */}\r\n      </Container>\r\n        {\r\n          openArtFormDialog &&\r\n          <ArtUploader  \r\n            openArtFormDialog={openArtFormDialog}\r\n            setOpenArtFormDialog={setOpenArtFormDialog} \r\n            />\r\n        }\r\n        {\r\n          JSON.parse(localStorage.getItem('token')) &&\r\n          JSON.parse(localStorage.getItem('token')).username &&\r\n          <Grid className={classes.float}>\r\n            <FloatingAddButton \r\n            setOpenArtFormDialog={setOpenArtFormDialog} \r\n            />\r\n          </Grid>\r\n        }\r\n      {\r\n        openModal &&\r\n        <SimpleDialog arts={openArts} setTabValue={setTabValue} setArts={setOpenArts} open={openModal} setOpen={setOpenModal} />\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\validations.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\utils.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\grid\\grid.jsx",["662"],"//[]      17. Búsqueda de Prixers.\r\n//[]      21. Términos y condiciones.\r\n//[]      16. Filtros para las búsquedas (Por etiqueta).\r\n//[]      25. Editar datos de la imagen en la tarjeta del grid grande.\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Img from \"react-cool-img\";\r\n\r\nimport utils from '../../utils/utils';\r\nimport SearchBar from '../../sharedComponents/searchBar/searchBar.jsx';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    // maxWidth: 850,\r\n    paddingTop: 15\r\n  },\r\n  img: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxHeight: 180\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minHeight: 300,\r\n      maxHeight: 450\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      minHeight: 350,\r\n      maxHeight: 450\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      minHeight: 450,\r\n      maxHeight: 450\r\n    }\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function Grid(props) {\r\n  const classes = useStyles();\r\n  const [tiles, setTiles] = useState([]);\r\n  const history = useHistory();\r\n  let globalParams = new URLSearchParams(window.location.search);\r\n  const [searchValue, setSearchValue] = useState(globalParams.get('name') || null);\r\n  const [backdrop, setBackdrop] = useState(true);\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  useEffect(()=> {\r\n    if(props.prixerUsername || globalParams.get('prixer')) {\r\n      if(searchValue) {\r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-username-by-query\";\r\n        const params = {\r\n          text: searchValue,\r\n          username: props.prixerUsername || globalParams.get('prixer')\r\n        }\r\n        axios.get(base_url, {params})\r\n        .then(response =>{\r\n          setTiles(utils.shuffle(response.data.arts));\r\n          setBackdrop(false);\r\n        });\r\n      } else {\r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-prixer\";\r\n        const body = {\r\n          username: props.prixerUsername || globalParams.get('prixer')\r\n        }\r\n        axios.post(base_url, body)\r\n        .then(response =>{\r\n          setTiles(utils.shuffle(response.data.arts));\r\n          setBackdrop(false);\r\n        });\r\n      }\r\n    } else if(searchValue){\r\n      const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-by-query\";\r\n      const params = {\r\n        text: searchValue\r\n      }\r\n      axios.get(base_url, {params})\r\n      .then(response =>{\r\n        setTiles(utils.shuffle(response.data.arts));\r\n        setBackdrop(false);\r\n      });\r\n    } else {\r\n      const base_url= process.env.REACT_APP_BACKEND_URL + \"/art/read-all\";\r\n      axios.get(base_url)\r\n      .then(response =>{\r\n        setTiles(utils.shuffle(response.data.arts));\r\n        setBackdrop(false);\r\n      });\r\n    }\r\n  }, [searchValue]);\r\n\r\nconst handleFullImage = (e, tile)=> {\r\n  history.push({pathname:\"/\"+tile.prixerUsername+'/art/'+e.target.id});\r\n}\r\n\r\nconst searchPhotos = (e, queryValue) => {\r\n  setSearchValue(queryValue);\r\n  if(props.prixerUsername || globalParams.get('prixer')){\r\n    if(globalParams.get('prixer')){\r\n      history.push({pathname:'/galeria/s?prixer='+globalParams.get('prixer')+'&name='+queryValue});\r\n    } else {\r\n      history.push({pathname:'/galeria/s?prixer='+props.prixerUsername+'&name='+queryValue});\r\n    }\r\n  } else {\r\n    history.push({pathname:'/galeria/s?name='+queryValue});\r\n  }\r\n  e.preventDefault();\r\n};\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Backdrop className={classes.backdrop} open={backdrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        <SearchBar searchPhotos={searchPhotos} searchValue={searchValue} setSearchValue={setSearchValue}/>\r\n      <GridList cellSize={\"auto\"}  className={classes.gridList} cols={isDesktop ? 4 : 2 } >\r\n         {tiles ?\r\n         tiles.map((tile) => (\r\n          <GridListTile key={tile.artId} cols={1} onClick={(e)=>{handleFullImage(e, tile)}} className={classes.img}>\r\n            <Img\r\n            placeholder=\"/imgLoading.svg\"\r\n            style={{ backgroundColor: \"#eeeeee\", height: '100%' }}\r\n            src={tile.squareThumbUrl}\r\n            debounce={1000}\r\n            cache\r\n            error='/imgError.svg'\r\n            // srcSet={tile.smallThumbUrl + ' 600w, ' + tile.mediumThumbUrl + ' 850w, ' + tile.largeThumbUrl + ' 1300w'}\r\n            // sizes=\"(min-width: 1600px) 850px, (min-width: 960px) 450px, (min-width: 640px) 400px, 200px\"\r\n            sizes=\"(min-width: 1600px) 850px, (min-width: 960px) 450px, (min-width: 640px) 200px, (min-width: 375px) 80px\"\r\n            alt={tile.title}\r\n            id={tile.artId}\r\n            />\r\n          </GridListTile>\r\n        ))\r\n        :\r\n        <h1>Pronto encontrarás todo el arte que buscas.</h1>\r\n      }\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\prixerOptions\\prixerOptions.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\Copyright\\copyright.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\floatingAddButton\\floatingAddButton.jsx",["663"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport axios from 'axios';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      // margin: theme.spacing(1),\r\n      margin: 0,\r\n      top: 'auto',\r\n      // marginLeft:333,\r\n      bottom: 20,\r\n      left: 'auto',\r\n      position: 'fixed'\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  uwStyles: {\r\n    palette: {\r\n        window: \"#ffffff\",\r\n        sourceBg: \"#f4f4f5\",\r\n        windowBorder: \"#90a0b3\",\r\n        tabIcon: \"#000000\",\r\n        inactiveTabIcon: \"#d33f49\",\r\n        menuIcons: \"#555a5f\",\r\n        link: theme.palette.primary.main,\r\n        action: \"#339933\",\r\n        inProgress: theme.palette.primary.main,\r\n        complete: \"#339933\",\r\n        error: \"#cc0000\",\r\n        textDark: \"#000000\",\r\n        textLight: \"#fcfffd\"\r\n    },\r\n    fonts: {\r\n        default: null,\r\n        \"sans-serif\": {\r\n            url: null,\r\n            active: true\r\n        }\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function FloatingAddButton(props) {\r\n  const classes = useStyles();\r\n  \r\n  const handleClick = ()=> {\r\n    props.setOpenArtFormDialog(true);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleClick}>\r\n        <AddPhotoAlternateIcon/>\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\appBar\\appBar.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\artUploader.jsx",["664","665","666","667","668","669","670","671","672","673","674"],"import React, { useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport utils from '../../utils/utils.js';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AspectRatioSelector from './aspectRatioSelector'\r\nimport Cropper from 'react-easy-crop'\r\n\r\n\r\n\r\n\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Copyright from '../Copyright/copyright';\r\n\r\n//material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    maxWidth: '80vw',\r\n    maxHeight: '300px',\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n    objectPosition: '50% 50%',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(0),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst photoIsos = [\r\n  '100',\r\n  '200',\r\n  '400'\r\n]\r\n\r\nconst artTypes = [\r\n  'Diseño',\r\n  'Foto'\r\n];\r\n\r\n// const useValues = [\r\n//   'Impresión',\r\n//   'Catálogo',\r\n//   'Privado para clientes',\r\n// ];\r\n\r\nconst categories = [\r\n  'Abstracto',\r\n  'Animales',\r\n  'Arquitectura',\r\n  'Atardecer',\r\n  'Cacao',\r\n  'Café',\r\n  'Carros',\r\n  'Ciudades',\r\n  'Edificios',\r\n  'Fauna',\r\n  'Flora',\r\n  'Lanchas, barcos o yates',\r\n  'Montañas',\r\n  'Naturaleza',\r\n  'Navidad',\r\n  'Playas',\r\n  'Puentes',\r\n  'Surrealista',\r\n  'Transportes',\r\n  'Vehículos'\r\n]\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst aspectRatios = [\r\n  { id: 1, name: '1:1', aspect: 1, thumb: '', crop: { x: 0, y: 0 }, zoom: 1, cropped: false },\r\n  { id: 2, name: '3:1', aspect: 3, thumb: '', crop: { x: 0, y: 0 }, zoom: 1, cropped: false },\r\n  { id: 3, name: '2:1', aspect: 2, thumb: '', crop: { x: 0, y: 0 }, zoom: 1, cropped: false },\r\n  { id: 4, name: '3:2', aspect: 3/2, thumb: '', crop: { x: 0, y: 0 }, zoom: 1, cropped: false },\r\n  { id: 5, name: '2:3', aspect: 2/3, thumb: '', crop: { x: 0, y: 0 }, zoom: 1, cropped: false },\r\n  { id: 6, name: '1:2', aspect: 1/2, thumb: '', crop: { x: 0, y: 0 }, zoom: 1, cropped: false },\r\n]\r\n\r\nexport default function ArtUploader(props) {\r\n  const classes = useStyles();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [artUrl, setArtUrl] = useState();\r\n  const [thumbnailUrl, setThumbnailUrl] = useState();\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [tags, setTags] = useState(['foto', 'arte']);\r\n  const [publicId, setPublicId] = useState('');\r\n  const [originalPhotoHeight, setOriginalPhotoHeight] = useState('');\r\n  const [originalPhotoWidth, setOriginalPhotoWidth] = useState('');\r\n  const [originalPhotoIso, setOriginalPhotoIso] = useState('');\r\n  const [originalPhotoPpi, setOriginalPhotoPpi] = useState('');\r\n  const [maxPrintHeightCm, setMaxPrintHeightCm] = useState('');\r\n  const [maxPrintWidthCm, setMaxPrintWidthCm] = useState('');\r\n  const [artType, setArtType] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [requiredPhoto, setRequiredPhoto] = useState('');\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [mimeType, setMimeType] = useState('');\r\n  const [backdrop, setBackdrop] = useState(false);\r\n  const [croppedArt, setCroppedArt] = useState(aspectRatios);\r\n  const [uploadedArtMeta, setUploadedArtMeta] = useState({ width:0, height:0, size: 0});\r\n\r\n  //Error states.\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [snackBarAction, setSnackBarAction] = useState();\r\n  const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (artType === 'Foto') {\r\n      handleMaxPrintCalc();\r\n    }\r\n  }, [originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso]);\r\n\r\n  const handleArtTypeChange = (e) => {\r\n    if (!e.target.value) {\r\n      setRequiredPhoto(false);\r\n      setErrorMessage('Por favor indica a qué categoría pertenece el arte.');\r\n      setSnackBarError(true);\r\n    } else {\r\n      if (e.target.value === 'Foto') { setRequiredPhoto(true); }\r\n      setArtType(e.target.value);\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.setOpenArtFormDialog(false);\r\n  };\r\n\r\n  const handleMaxPrintCalc = () => {\r\n    if (originalPhotoWidth && originalPhotoHeight && originalPhotoPpi && originalPhotoIso) {\r\n      const [widthCm, heightCm] = utils.maxPrintCalc(originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso);\r\n      setMaxPrintWidthCm(widthCm);\r\n      setMaxPrintHeightCm(heightCm);\r\n    } else if (!originalPhotoIso && originalPhotoWidth && originalPhotoHeight && originalPhotoPpi) {\r\n      setErrorMessage('Por favor indica a el ISO de la foto. ');\r\n      setSnackBarAction(<Button target=\"_blank\" style={{ color: \"#fff\" }} href=\"https://www.ionos.es/digitalguide/paginas-web/diseno-web/que-son-los-datos-exif/#:~:text=los%20datos%20EXIF.-,EXIF%20con%20el%20bot%C3%B3n%20derecho%20del%20rat%C3%B3n,de%20archivo%20y%20el%20nombre).\">\r\n        Aprende cómo\r\n      </Button>);\r\n      setSnackBarError(true);\r\n    } else if (originalPhotoIso && (!originalPhotoWidth || !originalPhotoHeight) && originalPhotoPpi) {\r\n      setErrorMessage('Por favor indica a el Ancho y Alto de la foto. ');\r\n      setSnackBarAction(<Button target=\"_blank\" style={{ color: \"#fff\" }} href=\"https://www.ionos.es/digitalguide/paginas-web/diseno-web/que-son-los-datos-exif/#:~:text=los%20datos%20EXIF.-,EXIF%20con%20el%20bot%C3%B3n%20derecho%20del%20rat%C3%B3n,de%20archivo%20y%20el%20nombre).\">\r\n        Aprende cómo\r\n      </Button>);\r\n      setSnackBarError(true);\r\n    } else if (originalPhotoIso && originalPhotoWidth && originalPhotoHeight && !originalPhotoPpi) {\r\n      setErrorMessage('Por favor indica a los PPI de la foto. ');\r\n      setSnackBarAction(<Button target=\"_blank\" style={{ color: \"#fff\" }} href=\"https://www.ionos.es/digitalguide/paginas-web/diseno-web/que-son-los-datos-exif/#:~:text=los%20datos%20EXIF.-,EXIF%20con%20el%20bot%C3%B3n%20derecho%20del%20rat%C3%B3n,de%20archivo%20y%20el%20nombre).\">\r\n        Aprende cómo\r\n      </Button>);\r\n      setSnackBarError(true);\r\n    } else {\r\n      setErrorMessage('Por favor completa los campos requeridos.');\r\n      setSnackBarAction(<Button target=\"_blank\" style={{ color: \"#fff\" }} href=\"https://www.ionos.es/digitalguide/paginas-web/diseno-web/que-son-los-datos-exif/#:~:text=los%20datos%20EXIF.-,EXIF%20con%20el%20bot%C3%B3n%20derecho%20del%20rat%C3%B3n,de%20archivo%20y%20el%20nombre).\">\r\n        Aprende cómo\r\n      </Button>);\r\n      setSnackBarError(true);\r\n    }\r\n  }\r\n\r\n  const allCrops = ()=> {\r\n    const sum = croppedArt.reduce((prev, art, i)=>{\r\n      if(art.cropped){\r\n        return prev + 1;\r\n      } else {\r\n        return prev + 0;\r\n      }\r\n    }, 0)\r\n    if(sum == croppedArt.length) {\r\n      return [null, true];\r\n    } else {\r\n      return [croppedArt.length - sum, false];\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async()=> {\r\n    try {\r\n      const [ pendingCrops, isCrops ] = allCrops()\r\n      if(!isCrops) {\r\n        setErrorMessage('Por favor realiza los '+ pendingCrops +' recortes restantes de tu arte antes de continuar.');\r\n        if(pendingCrops == 1){setErrorMessage('Tu arte está casi listo, solo falta realizar '+ pendingCrops +' recorte para continuar.');}\r\n        setSnackBarError(true);\r\n      } else {\r\n      if (title && description && category && tags) {\r\n        if ((artType === 'Diseño') || (originalPhotoWidth && originalPhotoHeight && originalPhotoPpi && originalPhotoIso)) {\r\n          setBackdrop(true);\r\n          await newArtPost();\r\n        } else {\r\n          setErrorMessage('Por favor indica ancho, alto, PPI e ISO de la foto. ');\r\n          setSnackBarError(true);\r\n        }\r\n      } else {\r\n        setErrorMessage('Por favor completa el todos los campos.');\r\n        setSnackBarError(true);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    setBackdrop(false);\r\n    props.setOpenArtFormDialog(false);\r\n    setErrorMessage('Ocurrió un error inesperado, por favor valida e inicia sesión.');\r\n    setSnackBarError(true);\r\n  }\r\n  }\r\n\r\n  const getMimeType = (img) => {\r\n    const fileReader = new FileReader();\r\n    let type = '';\r\n    fileReader.onloadend = function (e) {\r\n      const arr = (new Uint8Array(e.target.result)).subarray(0, 4);\r\n      let header = \"\";\r\n      for (var i = 0; i < arr.length; i++) {\r\n        header += arr[i].toString(16);\r\n      }\r\n\r\n      switch (header) {\r\n        case \"89504e47\":\r\n            type = \"image/png\";\r\n            break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n            type = \"image/jpeg\";\r\n            break;\r\n        default:\r\n            type = \"unknown\";\r\n            break;\r\n    }\r\n      setMimeType(type);\r\n    };\r\n    fileReader.readAsArrayBuffer(img);\r\n  }\r\n\r\n  function blobToFile(theBlob, fileName){\r\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\r\n    theBlob.lastModifiedDate = new Date();\r\n    theBlob.name = fileName;\r\n    return theBlob;\r\n  }\r\n  \r\n  const handleArtChange = async (e) => {\r\n    let artMeta = {};\r\n    getMimeType(e.target.files[0]);\r\n    if (e.target.files && e.target.files[0]) {\r\n      if(mimeType === 'unknow') {\r\n        e.target.value = '';\r\n        setSnackBarError(true);\r\n        setErrorMessage('Disculpa, pero el formato de tu arte no está permitido por los momentos.');\r\n        console.log('error, file format not allowed');\r\n      } else if (e.target.files[0].size >= 5120000) {\r\n        setSnackBarError(true);\r\n        setErrorMessage('Disculpa, el arte que subiste es muy grande. El máximo por los momentos es de 5 MB.');\r\n      } else {\r\n        var img = new Image();\r\n        var objectUrl = URL.createObjectURL(e.target.files[0]);\r\n        img.onload = function () {\r\n          if (img.width <= 900 && img.height <= 900) {\r\n            setSnackBarError(true);\r\n            setErrorMessage('Disculpa, tanto el ancho como el alto de tu arte es menor al establecido. Por favor sube un arte con mayor resolución.');\r\n          } else if (img.width <= 900) {\r\n            setSnackBarError(true);\r\n            setErrorMessage('Disculpa, el ancho de tu arte es menor al establecido. Por favor sube un arte con mayor resolución.');\r\n          } else if (img.height <= 900) {\r\n            setSnackBarError(true);\r\n            setErrorMessage('Disculpa, el alto de tu arte es menor al establecido. Por favor sube un arte con mayor resolución.');\r\n          } else {\r\n            artMeta.width = img.width;\r\n            artMeta.height = img.height;\r\n            setUploadedArtMeta(artMeta);\r\n            setUploaded(objectUrl);\r\n          }\r\n        };\r\n        img.src = objectUrl;\r\n        setArtUrl(e.target.files[0]);\r\n        artMeta.size = e.target.files[0].size;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeCrops = ()=> {\r\n    croppedArt.map((n)=>{\r\n      delete n.thumb;\r\n    });\r\n  }\r\n\r\n  async function newArtPost() {\r\n    var formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('category', category);\r\n    formData.append('tags', tags);\r\n    formData.append('uploadedArtMeta', uploadedArtMeta);\r\n    formData.append('crops', JSON.stringify(croppedArt));\r\n    formData.append('userId', JSON.parse(localStorage.getItem('token')).id);\r\n    formData.append('prixerUsername', JSON.parse(localStorage.getItem('token')).username);\r\n    formData.append('status', 'Active');\r\n    formData.append('publicId', publicId);\r\n    formData.append('artType', artType);\r\n    formData.append('originalPhotoWidth', originalPhotoWidth);\r\n    formData.append('originalPhotoHeight', originalPhotoHeight);\r\n    formData.append('originalPhotoIso', originalPhotoIso);\r\n    formData.append('originalPhotoPpi', originalPhotoPpi);\r\n    formData.append('artLocation', location);\r\n    formData.append('imageUrl', artUrl);\r\n    const base_url = process.env.REACT_APP_BACKEND_URL + \"/art/create\";\r\n    const data = await axios.post(base_url, formData, {'Content-Type': 'multipart/form-data'});\r\n    if (data.data.success) {\r\n      props.setOpenArtFormDialog(false);\r\n      setBackdrop(false);\r\n      window.location.reload();\r\n    } else {\r\n      setErrorMessage('Por favor vuelve a intentarlo, puede que exista algún inconveniente de conexión. Si aún no lo has hecho por favor inicia sesión.');\r\n      setSnackBarError(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog xs={12} open={props.openArtFormDialog} onClose={handleClose} TransitionComponent={Transition}>\r\n        <Backdrop className={classes.backdrop} open={backdrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n          <p>Esto puede tardar unos pocos minutos.</p>\r\n        </Backdrop>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Comparte tu Arte\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSubmit}>\r\n              Guardar\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <form className={classes.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Paper variant=\"outlined\" style={{ textAlign: \"center\", 'hover':{background: '#000000'} }}>\r\n                      <div style={{padding:\"5%\", maxHeight: 410}}>\r\n                        <input type=\"file\" id=\"inputfile\" accept=\"image/jpeg, image/jpg, image/webp, image/png\"\r\n                          onChange={handleArtChange} style={{display:\"none\"}} />\r\n                          {\r\n                          !uploaded ? \r\n                            <label htmlFor=\"inputfile\">\r\n                            <Tooltip title={\"Carga tu arte con un mínimo de 1080px tanto de ancho como de alto. Tu Arte debe pesar máximo 5Mb y estar en formato .jpeg o .png\"}>\r\n                              <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<CloudUploadIcon />}>\r\n                                Cargar arte\r\n                              </Button>\r\n                            </Tooltip>\r\n                            </label>\r\n                          :\r\n                          <AspectRatioSelector \r\n                          art={uploaded}\r\n                          croppedArt={croppedArt}\r\n                          setCroppedArt={setCroppedArt} />\r\n                          }\r\n                        </div>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Título\"\r\n                    name=\"title\"\r\n                    autoComplete=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => {\r\n                      setTitle(e.target.value)\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <FormControl variant=\"outlined\" className={classes.form} xs={12} sm={12} md={12}>\r\n                    <InputLabel required id=\"artTypeLabel\">Tipo</InputLabel>\r\n                    <Select\r\n                      labelId=\"artTypeLabel\"\r\n                      id=\"artType\"\r\n                      value={artType}\r\n                      onChange={handleArtTypeChange}\r\n                      label=\"artType\"\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em></em>\r\n                      </MenuItem>\r\n                      {artTypes.map((n) => (\r\n                        <MenuItem key={n} value={n}>{n}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                {\r\n                  artType === 'Foto' &&\r\n                  <React.Fragment>\r\n                    <Grid item container xs={12}>\r\n                      <Grid item xs={4} sm={4}>\r\n                        <Typography style={{ whiteSpace: 'pre-line', padding: 15, fontSize: '0.7em' }}> Medida del archivo <br /> original en px </Typography>\r\n                      </Grid>\r\n                      <Grid item container xs={8} sm={8}>\r\n                        <Grid item xs={5} sm={5}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            required={requiredPhoto}\r\n                            id=\"originalPhotoWidth\"\r\n                            label=\"Ancho\"\r\n                            type=\"number\"\r\n                            name=\"originalPhotoWidth\"\r\n                            autoComplete=\"originalPhotoWidth\"\r\n                            value={originalPhotoWidth}\r\n                            onChange={(e) => {\r\n                              setOriginalPhotoWidth(e.target.value);\r\n                              if (e.target.value < 2000) {\r\n                                setErrorMessage('La foto original debe tener un ancho mayor a 2.000 px.');\r\n                                setSnackBarError(true);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Typography style={{ padding: 10 }}> x </Typography>\r\n                        <Grid item xs={5} sm={5}>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            required={requiredPhoto}\r\n                            type=\"number\"\r\n                            id=\"originalPhotoHeight\"\r\n                            label=\"Alto\"\r\n                            name=\"originalPhotoHeight\"\r\n                            autoComplete=\"originalPhotoHeight\"\r\n                            value={originalPhotoHeight}\r\n                            onChange={(e) => {\r\n                              setOriginalPhotoHeight(e.target.value);\r\n                              if (e.target.value < 2000) {\r\n                                setErrorMessage('La foto original debe tener un alto mayor a 2.000 px.');\r\n                                setSnackBarError(true);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container xs={12}>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required={requiredPhoto}\r\n                          type=\"number\"\r\n                          id=\"originalPhotoPpi\"\r\n                          label=\"PPI\"\r\n                          name=\"originalPhotoPpi\"\r\n                          autoComplete=\"originalPhotoPpi\"\r\n                          value={originalPhotoPpi}\r\n                          onChange={(e) => {\r\n                            setOriginalPhotoPpi(e.target.value);\r\n                            if (e.target.value < 100) {\r\n                              setErrorMessage('La foto original debe ser mayor a 100 ppi.');\r\n                              setSnackBarError(true);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <FormControl variant=\"outlined\" className={classes.form} xs={12} sm={12} md={12}>\r\n                          <InputLabel required={requiredPhoto} id=\"originalPhotoIsoLabel\">ISO</InputLabel>\r\n                          <Select\r\n                            labelId=\"originalPhotoIsoLabel\"\r\n                            id=\"originalPhotoIso\"\r\n                            value={originalPhotoIso}\r\n                            onChange={(e) => {\r\n                              setOriginalPhotoIso(e.target.value);\r\n                            }}\r\n                            label=\"originalPhotoIso\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em></em>\r\n                            </MenuItem>\r\n                            {photoIsos.map((n) => (\r\n                              <MenuItem key={n} value={n}>{n}</MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {\r\n                      (originalPhotoIso && originalPhotoWidth && originalPhotoHeight) &&\r\n                      <Grid item container xs={12}>\r\n                        <Grid item xs={6} sm={6} style={{ textAlign: 'center' }}>\r\n                          <Typography style={{ whiteSpace: 'pre-line', padding: 15, fontSize: '1em' }}> Medida máxima <br /> para impresión</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={6} style={{ textAlign: 'center' }}>\r\n                          <Typography style={{ whiteSpace: 'pre-line', padding: 15, fontSize: '1.5em' }}> {maxPrintWidthCm} x {maxPrintHeightCm} cm </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    }\r\n                  </React.Fragment>\r\n                }\r\n                <Grid item xs={12} sm={12}>\r\n                  <FormControl variant=\"outlined\" className={classes.form} xs={12} sm={12} md={12}>\r\n                    <InputLabel required id=\"categoryLabel\">Categoría</InputLabel>\r\n                    <Select\r\n                      labelId=\"categoryLabel\"\r\n                      id=\"category\"\r\n                      value={category}\r\n                      onChange={handleCategoryChange}\r\n                      label=\"category\"\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em></em>\r\n                      </MenuItem>\r\n                      {categories.map((n) => (\r\n                        <MenuItem key={n} value={n}>{n}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    freeSolo\r\n                    id=\"tags-outlined\"\r\n                    options={[]}\r\n                    defaultValue={[]}\r\n                    value={tags}\r\n                    onChange={(e, newval, reason) => {\r\n                      setTags(newval);\r\n                    }}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        required\r\n                        {...params}\r\n                        onKeyDown={e => {\r\n                          if (e.key === 13 && e.target.value) {\r\n                            setTags(tags.concat(e.target.value));\r\n                          }\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label=\"Etiquetas\"\r\n                        placeholder=\"Etiquetas\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    autoComplete=\"description\"\r\n                    required\r\n                    name=\"description\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"description\"\r\n                    label=\"Descripción\"\r\n                    autoFocus\r\n                    multiline\r\n                    rows={4}\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"location\"\r\n                    label=\"Ubicación\"\r\n                    name=\"location\"\r\n                    autoComplete=\"location\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n          <Snackbar\r\n            open={snackBarError}\r\n            autoHideDuration={5000}\r\n            message={errorMessage}\r\n            className={classes.snackbar}\r\n            action={snackBarAction}\r\n            onClose={() => { setSnackBarError(false); setSnackBarAction(false); }}\r\n          />\r\n        </Container>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\prixerProfile\\userData\\userData.jsx",["675"],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\Preferences.jsx",["676","677"],"import { React, useState, useEffect} from 'react'\r\nimport SimpleTabs from './tabPreferences'\r\n\r\n\r\nexport default function Preferences(props)\r\n{\r\n    return(\r\n    <>\r\n        <SimpleTabs />\r\n    </>\r\n    )\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\searchBar\\searchBar.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\tabPreferences.jsx",["678","679"],"import { React, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CarouselAdmin from \"./preferencesCarousel\";\r\nimport TermsAndConditions from \"./preferenceTerms\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"margin-left\": \"60px\",\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab label=\"Carrusel\" />\r\n          <Tab label=\"Términos y condiciones\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <CarouselAdmin />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <TermsAndConditions />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\aspectRatioSelector.jsx",["680","681","682","683","684","685","686","687","688","689"],"import React, { useEffect, useImperativeHandle } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useCallback } from 'react';\r\nimport EasyCropper from './easyCropper'\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport getCroppedImg from '../../utils/cropImage';\r\nimport CropIcon from '@material-ui/icons/Crop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    iconTabs: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      margin: 'auto',\r\n      marginBottom: 50\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'left',\r\n      // maxWidth: 850,\r\n      flexGrow: 1,\r\n      overflow: 'visible'\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    cardGrid: {\r\n        position: 'relative'\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n      maxHeight: '200px',\r\n      width: '100%',\r\n      height: '100%',\r\n      objectFit: 'contain',\r\n      objectPosition: '50% 50%'\r\n    },\r\n    tab: {\r\n        minWidth: 100\r\n    },\r\n    button: {\r\n        width: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\nexport default function AspectRatioSelector(props) {\r\n    const { art, croppedArt, setCroppedArt } = props;\r\n    const classes = useStyles();\r\n    const [tabValue, setTabValue] = useState(1);\r\n    const croppedArtTemp = croppedArt;\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState();\r\n\r\n    //Error states.\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [snackBarAction, setSnackBarAction] = useState();\r\n    const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n    useEffect(()=>{\r\n    });\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\nconst updateCrop = (i)=> {    \r\n    croppedArtTemp[i].thumb = '';\r\n    croppedArtTemp[i].cropped = false;\r\n    setCroppedArt([...croppedArtTemp]);\r\n\r\n}\r\n\r\n\r\n  const handleCrop = useCallback(async (i) => {\r\n    try {\r\n      const { croppedImg, croppedImgFile } = await getCroppedImg(art,croppedAreaPixels)\r\n      croppedArtTemp[i].thumb = croppedImg;\r\n      croppedArtTemp[i].thumbFile = croppedImgFile;\r\n      croppedArtTemp[i].cropped = true;\r\n      croppedArtTemp[i].croppedAreaPixels = croppedAreaPixels;\r\n      setCroppedArt([...croppedArtTemp]);\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [croppedAreaPixels])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        {\r\n            tabValue === 0 ?\r\n            <Grid item xs={12} sm={12} md={12} style={{position:'relative', height:300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                <label htmlFor=\"inputfile\" style={{cursor:\"pointer\"}}>\r\n                    <Tooltip title={\"Carga tu arte con un mínimo de 1080px tanto de ancho como de alto. Tu Arte debe pesar máximo 5Mb y estar en formato .jpeg o .png\"}>\r\n                        <img className={classes.img} alt=\"Uploaded\" src={art} />\r\n                    </Tooltip>\r\n                </label>\r\n            </Grid>\r\n            :\r\n            croppedArt &&\r\n            croppedArt.map((ar, index)=>(\r\n            ar.id === tabValue &&\r\n            <Grid item xs={12} sm={12} md={12} style={{position:'relative', height: 300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                {\r\n                croppedArt[index].thumb == '' ?\r\n                        <EasyCropper \r\n                        art={art}\r\n                        ar={ar}\r\n                        croppedArt={croppedArt}\r\n                        setCroppedArt={setCroppedArt}\r\n                        index={index}\r\n                        setCroppedAreaPixels={setCroppedAreaPixels}\r\n                        />\r\n                :\r\n                <Grid item xs={12} sm={12} md={12} style={{position:'relative', height: 300, display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                        <Tooltip title={\"Genera el recorte para recomendar a tus clientes las mejores secciones de tu arte.\"}>\r\n                            <img className={classes.img} alt=\"Uploaded\" src={croppedArtTemp[index].thumb} />\r\n                        </Tooltip>\r\n                </Grid>\r\n                }\r\n                {\r\n                croppedArt[index].cropped ?\r\n                <Grid item xs={12} sm={12} md={12} style={{position: 'absolute', right: 5, bottom: 5}}>\r\n                    \r\n                    <IconButton color=\"secondary\" aria-label=\"add an alarm\" style={{padding: 0}} onClick={()=>{updateCrop(index)}}>\r\n                        <Typography>Recortar</Typography>\r\n                        <CropIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                :\r\n                <Grid item xs={12} sm={12} md={12} style={{position: 'absolute', right: 5, bottom: 5, zIndex: 20}}>\r\n                    \r\n                    <IconButton color=\"secondary\" aria-label=\"add an alarm\" style={{padding: 0}} onClick={()=>{handleCrop(index)}}>\r\n                        <Typography>Listo</Typography>\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n        ))\r\n        }\r\n            {/* <Grid xs={12} sm={12} md={12}><Typography>Selecciona cómo quieres recomendar el arte a tus clientes:</Typography></Grid> */}\r\n            <Grid xs={12} sm={12} md={12} style={{ maxHeight: 80}}>\r\n                <Paper square className={classes.iconTabs}>\r\n                    <Tabs\r\n                    value={tabValue}\r\n                    onChange={handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    >\r\n                    \r\n                    <Tab className={classes.tab} icon={<PhotoLibraryIcon />} label=\"Original\" />\r\n                    {\r\n                    croppedArt &&\r\n                    croppedArt.map((ar)=>(\r\n                        <Tab className={classes.tab} icon={<PhotoLibraryIcon />} label={ar.name} id={ar.id} />\r\n                    ))\r\n                    }\r\n                    </Tabs>\r\n                </Paper> \r\n            </Grid>\r\n          </div>\r\n  )\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\utils\\cropImage.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferenceTerms.jsx",["690","691"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function MultilineTextFields(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleChange = async (event) => {\r\n    const base_url =\r\n      process.env.REACT_APP_BACKEND_URL + \"/termsAndConditions/update\";\r\n    const response = await axios.put(base_url, { termsAndConditions: value });\r\n  };\r\n  const setValueText = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const base_url =\r\n      process.env.REACT_APP_BACKEND_URL + \"/termsAndConditions/read\";\r\n    axios\r\n      .get(base_url)\r\n      .then((response) => {\r\n        setValue(response.data.terms.termsAndConditions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = (newState) => () => {\r\n    setState({ open: true, ...newState });\r\n    handleChange();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n  };\r\n\r\n  const buttons = (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        style={{ margin: \"14px 30px\" }}\r\n        onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}\r\n      >\r\n        Actualizar\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop className={classes.backdrop}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Paper className={classes.paper}>\r\n        {\r\n          <Grid container spacing={2}>\r\n            {buttons}\r\n            <Grid item xs={12}>\r\n              <Box\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"15px\",\r\n                  textAlign: \"justify\",\r\n                }}\r\n              >\r\n                <Box>\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Multiline\"\r\n                    multiline\r\n                    rows={16}\r\n                    value={value}\r\n                    onChange={setValueText}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          //)\r\n        }\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        message=\"Los términos y condiciones fueron actualizados!\"\r\n        key={vertical + horizontal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferencesCarousel.jsx",["692","693","694","695","696","697","698","699","700","701","702","703","704"],"import { React, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\r\nimport { Button, InputLabel, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FilledInput,\r\n  Input,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  images: {\r\n    width: \"500px\",\r\n    height: \"300px\",\r\n    borderRadius: \"10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  buttons: {\r\n    position: \"absolute\",\r\n    color: \"#ccc\",\r\n    display: \"flex\",\r\n    cursor: \"pointer\",\r\n    padding: \"10px\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    width: \"37vw\",\r\n  },\r\n  nameFile: {\r\n    width: \"300px\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    padding: \"10px\",\r\n    fontSize: \"1rem\",\r\n    margin: \"0\",\r\n    background: \"#cccc\",\r\n  },\r\n  loaderImage: {\r\n    width: \"50vw\",\r\n    height: \"60vh\",\r\n    marginLeft: \"220px\",\r\n    backgroundColor: \"#cccc\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  imageLoad: {\r\n    width: \"50vw\",\r\n    height: \"60vh\",\r\n  },\r\n  buttonImgLoader: {\r\n    color: \"#ccc\",\r\n    width: \"50vw\",\r\n    height: \"60vh\",\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: \"10px\",\r\n    position: \"absolute\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nfunction CarouselAdmin(props) {\r\n  const [image, newImage] = useState({ file: \"\", _id: \"\" }); //enviar\r\n  const [imageLoader, setLoadImage] = useState({\r\n    loader: \"\",\r\n    filename: \"Subir imagenes\",\r\n  }); //loader de imagenes\r\n  const [images, newImages] = useState({ images: [] }); // lista de imagenes para renderizar\r\n  const [update, setUpdate] = useState(0); // modal de update\r\n  const [open, setOpen] = useState(false); //modal de eliminar -> confirm\r\n  const [Open, setOpenI] = useState(false); // Toast para imagen eliminada exitosamente\r\n  const [maxImage, setMaxImages] = useState(false); //Toast para maximo de 6 imagenes\r\n  const [create, setCreate] = useState(false); // toast para imagen creada y listada\r\n  const [createF, setCreateF] = useState(false);\r\n  const [loading, setLoading] = useState(false); // Loading\r\n\r\n  const classes = useStyle();\r\n\r\n  const maxImageOpen = () => {\r\n    setMaxImages(true);\r\n  };\r\n\r\n  const maxImageClose = () => {\r\n    setMaxImages(false);\r\n  };\r\n\r\n  const createOpen = () => {\r\n    setCreate(true);\r\n  };\r\n\r\n  const createClose = () => {\r\n    setCreate(false);\r\n  };\r\n\r\n  const createOpenF = () => {\r\n    setCreateF(true);\r\n  };\r\n\r\n  const createCloseF = () => {\r\n    setCreateF(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenI = () => {\r\n    setOpenI(true);\r\n  };\r\n\r\n  const handleCloseI = () => {\r\n    setOpenI(false);\r\n  };\r\n\r\n  const openUpdate = () => {\r\n    setUpdate(true);\r\n  };\r\n\r\n  const closeUpdate = () => {\r\n    setUpdate(false);\r\n  };\r\n\r\n  // CRUD\r\n  //Editar imagen:\r\n  const handleUpdate = async (x) => {\r\n    x.preventDefault();\r\n    setLoading(true);\r\n    const URI =\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      \"/admin/preferences/carousel/\" +\r\n      image._id;\r\n    const formData = new FormData();\r\n    formData.append(\"newBannerImages\", image.file);\r\n    let res = await axios.put(URI, formData);\r\n    setLoadImage({\r\n      loader: \"\",\r\n      filename: \"Subir imagenes\",\r\n    });\r\n    newImage({\r\n      _id: \"\",\r\n      file: \"\",\r\n    });\r\n    setLoadImage(false);\r\n    openUpdate();\r\n    getImagesForTheCarousel();\r\n    closeUpdate();\r\n  };\r\n\r\n  // Crear imagen:\r\n  const handleSubmit = async (a) => {\r\n    a.preventDefault();\r\n    if (images.images[0].length >= 6) {\r\n      maxImageOpen();\r\n      setLoadImage({\r\n        loader: \"\",\r\n        filename: \"Subir imagenes\",\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n      setLoadImage({\r\n        loader: \"\",\r\n        filename: \"Subir imagenes\",\r\n      });\r\n      const URI =\r\n        process.env.REACT_APP_BACKEND_URL + \"/admin/preferences/carousel\";\r\n      const newFormData = new FormData();\r\n      newFormData.append(\"bannerImages\", image.file);\r\n      let res = await axios.post(URI, newFormData);\r\n      createOpen();\r\n      newImage({\r\n        _id: \"\",\r\n        file: \"\",\r\n      });\r\n      setLoadImage(false);\r\n      createOpen();\r\n      getImagesForTheCarousel();\r\n    }\r\n  };\r\n\r\n  const deleteImage = async (d) => {\r\n    d.preventDefault();\r\n    handleClose();\r\n    setLoading(true);\r\n    const URI =\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      \"/admin/preferences/carousel/\" +\r\n      image._id;\r\n    let res = await axios.delete(URI);\r\n    getImagesForTheCarousel();\r\n    handleClickOpenI();\r\n    setLoading(false);\r\n    handleCloseI();\r\n  };\r\n  //Preview de imagen antes de enviar\r\n  const convertToBase64 = (blob) => {\r\n    return new Promise((resolve) => {\r\n      var reader = new FileReader();\r\n      reader.onload = function () {\r\n        resolve(reader.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  };\r\n  // Actualizacion del estado para preview de imagen\r\n  const loadImage = async (e) => {\r\n    const file = e.target.files[0];\r\n    const resizedString = await convertToBase64(file);\r\n    setLoadImage({ loader: resizedString, filename: file.name });\r\n  };\r\n\r\n  //Cancelar subida de imagen\r\n  const cancelUploadImage = () => {\r\n    setLoadImage({ loader: \"\", filename: \"Subir imagenes\" });\r\n    newImage({ _id: \"\", file: \"\" });\r\n  };\r\n  //Tomar imagenes en array para ser listadas y renderizadas\r\n  const getImagesForTheCarousel = () => {\r\n    setLoading(true);\r\n    const URI = \"http://localhost:8000/admin/preferences/carousel\";\r\n    fetch(URI)\r\n      .then((res) =>\r\n        res\r\n          .json()\r\n          .then((data) => {\r\n            newImages({ images: [data.imagesCarousels] });\r\n          })\r\n          .catch((err) => console.error(`Your request is wrong: ${err}`))\r\n      )\r\n      .catch((err) => console.error(err));\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getImagesForTheCarousel();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress value={loading} style={{ marginTop: \"-250px\" }} />\r\n      </Backdrop>\r\n      <Grid>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            color: \"#bababa\",\r\n          }}\r\n        >\r\n          <ViewCarouselIcon />\r\n          <Typography style={{ fontSize: \"1.5rem\", padding: \"10px\" }}>\r\n            Edit carousel\r\n          </Typography>\r\n        </div>\r\n\r\n        <div className={classes.loaderImage}>\r\n          <Box className={classes.buttonImgLoader}>\r\n            {imageLoader.loader ? (\r\n              <HighlightOffOutlinedIcon\r\n                style={{ width: \"2rem\" }}\r\n                onClick={cancelUploadImage}\r\n              />\r\n            ) : (\r\n              <HighlightOffOutlinedIcon hidden />\r\n            )}\r\n          </Box>\r\n          <img className={classes.imageLoad} src={imageLoader.loader}></img>\r\n        </div>\r\n\r\n        <Box style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <FormControl>\r\n            <form\r\n              onSubmit={(s) => {\r\n                if (image._id != \"\") {\r\n                  handleUpdate(s);\r\n                } else {\r\n                  handleSubmit(s);\r\n                }\r\n              }}\r\n              encType=\"multipart/form-data\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                width: \"80vw\",\r\n                padding: \"40px\",\r\n              }}\r\n            >\r\n              <Typography className={classes.nameFile} id=\"uploadImage\">\r\n                {imageLoader.filename}\r\n              </Typography>\r\n              <Button variant=\"contained\" component=\"label\">\r\n                Upload File\r\n                <input\r\n                  name=\"bannerImages\"\r\n                  type=\"file\"\r\n                  hidden\r\n                  onChange={(a) => {\r\n                    a.preventDefault();\r\n                    loadImage(a);\r\n                    newImage({\r\n                      _id: image._id,\r\n                      file: a.target.files[0],\r\n                    });\r\n                  }}\r\n                />\r\n              </Button>\r\n              <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\r\n                Enviar\r\n              </Button>\r\n            </form>\r\n          </FormControl>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={create}\r\n            onClose={createClose}\r\n            autoHideDuration={5000}\r\n            message=\"Process sucessfull\"\r\n          />\r\n\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={createF}\r\n            onClose={createCloseF}\r\n            autoHideDuration={5000}\r\n            message=\"You must send a image\"\r\n          />\r\n\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={update}\r\n            onClose={closeUpdate}\r\n            autoHideDuration={5000}\r\n            message=\"Process sucessfull\"\r\n          />\r\n        </Box>\r\n        <div>\r\n          <ImageList cols={2} rowHeight={300}>\r\n            {images.images[0] ? (\r\n              images.images[0].map((img, key_id) => (\r\n                <ImageListItem key={key_id}>\r\n                  <Box>\r\n                    <Box className={classes.buttons}>\r\n                      <Button\r\n                        variant=\"text\"\r\n                        style={{ color: \"white\" }}\r\n                        component=\"label\"\r\n                      >\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"newBannerImages\"\r\n                          hidden\r\n                          onChange={(a) => {\r\n                            a.preventDefault();\r\n                            loadImage(a);\r\n                            newImage({\r\n                              _id: img._id,\r\n                              file: a.target.files[0],\r\n                            });\r\n                          }}\r\n                        />\r\n                        <EditIcon />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"text\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={handleClickOpen}\r\n                      >\r\n                        <HighlightOffOutlinedIcon\r\n                          onClick={() => {\r\n                            newImage({\r\n                              _id: img._id,\r\n                              file: image.file,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Button>\r\n                      <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                      >\r\n                        <DialogTitle id=\"alert-dialog-title\">\r\n                          {\"Estas seguro de eliminar esta imagen del carrusel?\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            Esta imagen ya no se vera en el carrusel del banner\r\n                            principal\r\n                          </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={handleClose} color=\"primary\">\r\n                            Cancelar\r\n                          </Button>\r\n                          <Button\r\n                            onClick={(d) => {\r\n                              deleteImage(d);\r\n                            }}\r\n                            color=\"primary\"\r\n                          >\r\n                            Aceptar\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n\r\n                      <Snackbar\r\n                        anchorOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"right\",\r\n                        }}\r\n                        open={Open}\r\n                        onClose={handleClose}\r\n                        autoHideDuration={5000}\r\n                        message=\"Imagen borrada exitosamente\"\r\n                      />\r\n                    </Box>\r\n                    <a href={img.carouselImages[0]} target=\"_BLANK\">\r\n                      <img\r\n                        className={classes.images}\r\n                        title={img.carouselImages[0]}\r\n                        src={img.carouselImages[0]}\r\n                      ></img>\r\n                    </a>\r\n                  </Box>\r\n                </ImageListItem>\r\n              ))\r\n            ) : (\r\n              <Typography>\r\n                Que mal, parece que no tienes imagenes en el carrusel\r\n              </Typography>\r\n            )}\r\n          </ImageList>\r\n        </div>\r\n      </Grid>\r\n      <Dialog\r\n        open={maxImage}\r\n        onClose={maxImageClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Limite alcanzado\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Solo puedes agregar 6 imagenes al carrusel, procura eliminar algunas\r\n            imagenes o reemplazar\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={maxImageClose}>Aceptar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CarouselAdmin;\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\easyCropper.jsx",["705","706","707","708","709"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useCallback } from 'react';\r\nimport Cropper from 'react-easy-crop'\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\n\r\nexport default function EasyCropper(props) {\r\n    const  { art, ar, croppedArt, setCroppedArt, index, setCroppedAreaPixels  } = props;\r\n    const classes = useStyles();\r\n    const [aspect, setAspect] = useState(croppedArt[index].aspect);\r\n    const [crop, setCrop] = useState(croppedArt[index].crop);\r\n    const [zoom, setZoom] = useState(croppedArt[index].zoom);\r\n    const croppedArtTemp = croppedArt;\r\n    \r\n    const onCropComplete = useCallback(async (croppedArea, croppedAreaPixels) => {\r\n        croppedArtTemp[index].crop.x = croppedAreaPixels.x;\r\n        croppedArtTemp[index].crop.y = croppedAreaPixels.y;\r\n        setCroppedAreaPixels(croppedAreaPixels);\r\n        setCroppedArt(croppedArtTemp);     \r\n    });\r\n\r\n    return (\r\n        // <div style={{display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n            <Cropper\r\n            image={art}\r\n            crop={crop}\r\n            zoom={zoom}\r\n            aspect={aspect}\r\n            onCropChange={setCrop}\r\n            onCropComplete={onCropComplete}\r\n            onZoomChange={setZoom}\r\n            />\r\n        // </div>\r\n  )\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\simpleDialog\\simpleDialog.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\sharedComponents\\prixerGrid\\prixerGrid.jsx",["710"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport utils from '../../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    // maxWidth: \"70%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: '100%',\r\n    height: 'auto'\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(8)\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '81.25%',\r\n    borderRadius: '50%',\r\n    margin: '28px'\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\n\r\nexport default function PrixerGrid(props) {\r\n  const classes = useStyles();\r\n  const [tiles, setTiles] = useState([]);\r\n  const history = useHistory();\r\n  const [backdrop, setBackdrop] = useState(true);\r\n\r\n  useEffect(()=> {\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/prixer/read-all-full\";\r\n  \r\n    axios.get(base_url)\r\n      .then(response =>{\r\n        setTiles(utils.shuffle(response.data.prixers));\r\n        setBackdrop(false);\r\n    });\r\n}, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Backdrop className={classes.backdrop} open={backdrop}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n    <Grid container spacing={1}>\r\n    {tiles &&\r\n    tiles.filter(tile => tile.avatar).map((tile) =>\r\n      (\r\n        <Grid item key={tile._id} xs={6} sm={6} md={3}>\r\n            <Card className={classes.card}>\r\n            <CardMedia\r\n                alt={tile.title}\r\n                height= '100'\r\n                image={tile.avatar}\r\n                className={classes.cardMedia}\r\n                title={tile.title}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {tile.firstName} {tile.lastName}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h6\" component=\"h6\" style={{fontSize: 16}}>\r\n                  {tile.username} - {tile.specialty}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={e => history.push({pathname:\"/\"+tile.username})}>\r\n                Explorar\r\n                </Button>\r\n            </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\register\\Terms.jsx",["711"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n  },\r\n  underline: {\r\n    textDecoration: \"underline\",\r\n  },\r\n}));\r\n\r\nexport default function Terms() {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" align=\"center\" style={{ fontWeight: \"bold\" }}>\r\n        CONVENIO DE RELACIÓN ENTRE LOS ARTISTAS Y LA COMPAÑÍA\r\n      </Typography>\r\n      <Typography>\r\n        <br />\r\n        Entre,{\" \"}\r\n        <span style={{ fontWeight: \"bold\" }}>\r\n          Prixelart C.A., (RIF N° J-408253143)\r\n        </span>\r\n        , Sociedad Mercantil domiciliada en Caracas e inscrita por ante el\r\n        Registro Mercantil Quinto de la Circunscripción Judicial del Distrito\r\n        Capital en fecha 6 de julio de 2016, bajo el No. 9, Tomo 191-A,\r\n        representada en este acto por Diego Henríquez, venezolano, mayor de\r\n        edad, domiciliado en Caracas y titular de la cédula de identidad Nº\r\n        19.874.891 y Ricardo Capuz, venezolano, mayor de edad, domiciliado en\r\n        Caracas y titular de la cédula de identidad N° 21.015.149,\r\n        suficientemente facultados para este acto según se evidencia de Director\r\n        de Operaciones y Director de Tecnología correspondientemente, en lo\r\n        sucesivo denominada LA COMPAÑÍA, por una parte y por la otra, EL\r\n        ARTISTA, y quienes actuando conjuntamente se denominarán LAS PARTES.\r\n        <br />\r\n        <br />\r\n        Ambas partes <span style={{ fontWeight: \"bold\" }}>RESUELVEN:</span>{\" \"}\r\n        Celebrar el presente Convenio de Relación entre LA ARTISTA y LA\r\n        COMPAÑÍA, el cual se regirá por las siguientes cláusulas:\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>PRIMERA</span>:\r\n        Definiciones.\r\n        <br />\r\n        <br />\r\n        A los efectos del presente Contrato:\r\n        <br />\r\n        <br />\r\n        Se entiende por EL ARTISTA, a todo persona natural o jurídica que provea\r\n        de arte a LA COMPAÑÍA con fines comerciales, el cual incluye, pero no es\r\n        limitado a: (arte digital, diseño gráfico, fotografía, diseños\r\n        digitales, planos, bocetos, bosquejos, prototipos, archivos multimedia o\r\n        cualquier forma de expresión artística). Se entiende por LA COMPAÑÍA, a\r\n        la persona jurídica con la facultad de comercializar el arte o las obras\r\n        de EL ARTISTA, a través de medios electrónicos y físicos, el cual\r\n        incluye, pero no es limitado a: (página web, redes sociales o cualquier\r\n        medio electrónico, así como ventas directas en exposiciones, bazares,\r\n        ferias, galerías o cualquier establecimiento comercial propio o de\r\n        tercero con el que LA COMPAÑÍA mantenga relación comercial, para\r\n        cualquiera de los casos anteriores).\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>SEGUNDA</span>:\r\n        Declaración de propiedad intelectual.\r\n        <br />\r\n        <br />\r\n        EL ARTISTA declara mediante el presente convenio que todo arte u obra\r\n        suministrada a LA COMPAÑÍA es de su propiedad, el cual cumple con toda\r\n        normativa nacional o internacional que haga referencia a la propiedad\r\n        intelectual, así mismo declara que es responsable de todo daño o\r\n        perjuicio que su obra genere a terceros, liberando a LA COMPAÑÍA de\r\n        cualquier responsabilidad.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>TERCERA</span>: Derechos\r\n        de autor.\r\n        <br />\r\n        <br />\r\n        LA COMPAÑÍA conviene en que ella, sus empleados, relacionados y agentes,\r\n        de ser el caso, respetarán todos los derechos de autor de EL ARTISTA,\r\n        limitando las cantidades a ser producidas de sus obras a la (s) orden\r\n        (es) de compra/producción de LA COMPAÑÍA. De producirse excedentes,\r\n        éstos no podrán ser comercializados por nadie sin el consentimiento y\r\n        aprobación de EL ARTISTA.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>CUARTA</span>:\r\n        Notificaciones.\r\n        <br />\r\n        <br />\r\n        Cualquier notificación que deba hacerse en virtud del presente Convenio\r\n        se hará por escrito y se considerará efectuada cuando sea entregada\r\n        personalmente o por correo certificado, siempre con acuse de recibo, en\r\n        las direcciones que aparecen a continuación o en aquellas otras\r\n        direcciones que LAS PARTES hubieren suministrado por escrito de la\r\n        manera antes dispuesta: LA COMPAÑÍA: Prixelart, C.A.\r\n        Tlf:+58(212)7142021. Correo: hola@prixelart.com EL ARTISTA: Mirian\r\n        Pereira. Tlf: +58(426)9213572 / (426)3125628. Correo:\r\n        carlospunto40@gmail.com.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>QUINTA</span>: Ley\r\n        Aplicable.\r\n        <br />\r\n        <br />\r\n        Este Convenio se regirá e interpretará de conformidad con las leyes de\r\n        la República Bolivariana de Venezuela.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>SEXTA</span>: Arbitraje.\r\n        <br />\r\n        <br />\r\n        Toda controversia o diferencia susceptible de transacción por LAS\r\n        PARTES, no excluida por la ley ni por este convenio de solución mediante\r\n        arbitraje, que verse sobre la existencia, extensión, interpretación y\r\n        cumplimiento de las obligaciones derivadas de él, será resuelta mediante\r\n        arbitraje institucional en la Ciudad de Caracas, Venezuela, en el idioma\r\n        castellano y de acuerdo con las disposiciones del Reglamento General del\r\n        Centro de Arbitraje de la Cámara de Comercio de Caracas. El Tribunal\r\n        Arbitral estará compuesto por tres (3) árbitros, los cuales decidirán\r\n        conforme a derecho.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>SÉPTIMA</span>:\r\n        Modificaciones.\r\n        <br />\r\n        <br />\r\n        Este Convenio sólo podrá ser modificado mediante acuerdo por escrito\r\n        firmado por LAS PARTES.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>OCTAVA</span>: Anulación.\r\n        <br />\r\n        <br />\r\n        Este Convenio sólo podrá ser anulado, cuando una de LAS PARTES así lo\r\n        decida, mediante un comunicado escrito por correo certificado, con un\r\n        lapso de un (1) mes de anticipación y sin que esta decisión afecte las\r\n        negociaciones comerciales que se hayan realizado antes de la emisión de\r\n        la comunicación escrita.\r\n        <br />\r\n        <br />\r\n        <span style={{ textDecoration: \"underline\" }}>NOVENA</span>: Acuerdo\r\n        Comercial.\r\n        <br />\r\n        <br />\r\n        LAS PARTES acuerdan que la remuneración, por la reproducción y\r\n        comercialización de las obras, es del diez porciento (10%) del monto\r\n        negociado por entre LA COMPAÑÍA y EL CLIENTE, el cual será registrado y\r\n        reportado mensualmente a EL ARTISTA vía correo electrónico. EL ARTISTA\r\n        hará entrega de la factura fiscal, una vez que reciba el monto acordado\r\n        al cabo de 3 días hábiles en físico y/o digital.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orders.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\paymentMethods.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\consumers\\consumers.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\listItems.jsx",["712"],"import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoyaltyIcon from \"@material-ui/icons/Loyalty\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport WebAssetIcon from \"@material-ui/icons/WebAsset\";\r\nimport Preferences from \"./preferences/Preferences\";\r\nimport Testimonials from \"../TestimonialsCrud/Testimonials\";\r\nimport { InsertEmoticon } from \"@material-ui/icons\";\r\n\r\nexport default function MainListItems(props) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (value) => {\r\n    history.push({ pathname: \"/admin/\" + value + \"/read\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"dashboard\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Tablero General\" />\r\n          {/* onClick={(e)=>{handleClick('dashboard')}} /> */}\r\n        </ListItem>\r\n        <ListItem button selected={props.active === \"product\"}>\r\n          <ListItemIcon>\r\n            <LocalMallIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Productos\"\r\n            // onClick={(e) => {\r\n            //   handleClick(\"product\");\r\n            // }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"consumer\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Consumidores\" />\r\n          {/* <ListItemText primary=\"Consumidores\" onClick={(e)=>{handleClick('consumer')}}  /> */}\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"payment-method\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <PaymentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Métodos de pago\" />\r\n          {/* <ListItemText primary=\"Métodos de pago\" onClick={(e)=>{handleClick('payment-method')}}  /> */}\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"order\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <ReceiptIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Pedidos\" />\r\n          {/* <ListItemText primary=\"Pedidos\" onClick={(e)=>{handleClick('order')}}  /> */}\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"prixer\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <LoyaltyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Prixers\"\r\n            onClick={(e) => {\r\n              handleClick(\"prixer\");\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"parameters\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <BarChartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Parámetros\" />\r\n          {/* onClick={(e)=>{handleClick('parameters')}}  /> */}\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"testimonials\"}\r\n          // style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <InsertEmoticon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Testimonios\"\r\n            onClick={(e) => {\r\n              handleClick(\"testimonials\");\r\n            }}\r\n          />\r\n        </ListItem>\r\n      </div>\r\n      <Divider />\r\n      <div>\r\n        <ListSubheader inset>Configuración</ListSubheader>\r\n        <ListItem button selected={props.active === \"user\"}>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Usuarios\"\r\n            onClick={(e) => {\r\n              handleClick(\"user\");\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <ListItem button selected={props.active === \"preferences\"}>\r\n          <ListItemIcon>\r\n            <WebAssetIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Preferencias\"\r\n            onClick={(e) => {\r\n              handleClick(\"preferences\");\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={props.active === \"role\"}\r\n          style={{ color: \"gray\" }}\r\n        >\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Roles\" />\r\n          {/* onClick={(e)=>{handleClick('role')}}  /> */}\r\n        </ListItem>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\products.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\adminUser\\adminUser.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\dashboard.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\updatePaymentMethod.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\createPaymentMethod.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\readPaymentMethods.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\readConsumers.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\createConsumer.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\updateConsumer.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\updateOrder.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\orders.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\deposits.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\chart.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\disableAdmin.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\updateAdmin.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\readAdmins.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminCrud\\createAdmin.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\disableProduct.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\readProducts.jsx",["713"],"import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from '../adminMain/Title';\r\nimport axios from 'axios';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nexport default function ReadProducts(props) {\r\n    const history = useHistory();\r\n    const [rows, setRows] = useState();\r\n\r\nuseEffect(()=> {\r\n  const base_url= process.env.REACT_APP_BACKEND_URL + \"/admin/product/read-all\";\r\n    axios.get(base_url)\r\n    .then(response =>{\r\n        setRows(response.data.products);\r\n    })\r\n    .catch(error =>{\r\n        console.log(error);\r\n    })\r\n},[]);\r\n\r\n  const handleActive = (product, action)=> {\r\n    props.setProduct(product);\r\n    history.push('/admin/product/'+action+'/'+product._id);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Productos</Title>\r\n        {\r\n        rows &&\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\"></TableCell>\r\n            <TableCell align=\"center\">Imagen</TableCell>\r\n            <TableCell align=\"center\">Nombre</TableCell>\r\n            <TableCell align=\"center\">Activo</TableCell>\r\n            <TableCell align=\"center\">Categoría</TableCell>\r\n            <TableCell align=\"center\">PVP desde-hasta</TableCell>\r\n            <TableCell align=\"center\">PVM desde-hasta</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {\r\n        rows &&\r\n          rows.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell align=\"center\">\r\n                <Fab color=\"default\" style={{width: 35, height: 35}} aria-label=\"edit\" onClick={(e)=>{handleActive(row, 'update')}}>\r\n                  <EditIcon/>\r\n                </Fab>\r\n              </TableCell>\r\n              <TableCell align=\"center\"><img alt=\"thumb\" src={row.thumbUrl} style={{width: 50, height: 'auto'}}/></TableCell>\r\n              <TableCell align=\"center\">{row.name}</TableCell>\r\n              <TableCell align=\"center\">\r\n                <Checkbox \r\n                  disabled\r\n                  checked={row.active}\r\n                  color=\"primary\" \r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.category}</TableCell>\r\n              <TableCell align=\"center\">{row.publicPrice.from}-{row.publicPrice.to}</TableCell>\r\n              <TableCell align=\"center\">{row.prixerPrice.from}-{row.prixerPrice.to}</TableCell>\r\n            </TableRow>\r\n          ))\r\n        }\r\n        </TableBody>\r\n      </Table>\r\n} \r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\updateProduct.jsx",["714"],"import React from 'react';\r\nimport {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from '../adminMain/Title';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport clsx from 'clsx';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Variants from '../adminMain/products/variants';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  form: {\r\n      height: 550\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function UpdateAdmin(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [ active, setActive ] = useState(props.product.active);\r\n    const [ productName, setProductName ] = useState(props.product.name);\r\n    const [ description, setDescription ] = useState(props.product.description);\r\n    const [ category, setCategory ] = useState(props.product.category);\r\n    const [ considerations, setConsiderations ] = useState(props.product.considerations);\r\n    // const [fixedPublicPrice, setFixedPublicPrice] = useState('');\r\n    const [fromPublicPrice, setFromPublicPrice] = useState(props.product.publicPrice.from);\r\n    const [ toPublicPrice, setToPublicPrice ] = useState(props.product.publicPrice.to);\r\n    // const [ fixedPrixerPrice, setFixedPrixerPrice ] = useState('');\r\n    const [ fromPrixerPrice, setFromPrixerPrice ] = useState(props.product.prixerPrice.from);\r\n    const [ toPrixerPrice, setToPrixerPrice ] = useState(props.product.prixerPrice.to);\r\n    const [loading, setLoading] = useState(false);\r\n    const [buttonState, setButtonState] = useState(false);\r\n    const [showVariants, setShowVariants] = useState(false);\r\n    const [ activeVCrud, setActiveVCrud ] = useState('read');\r\n    const [ hasSpecialVar, setHasSpecialVar ] = useState(props.product.hasSpecialVar || false);\r\n    \r\n    const [ thumbUrl, setThumbUrl ] = useState(props.product.thumbUrl);\r\n\r\n    //Error states.\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [snackBarError, setSnackBarError] = useState(false);\r\n\r\n\r\n    const handleSubmit = async (e)=> {\r\n      e.preventDefault();\r\n      if(!active && \r\n        !productName && \r\n        !description && \r\n        !category && \r\n        !considerations && \r\n        // !fixedPublicPrice &&\r\n        !fromPublicPrice &&\r\n        !toPublicPrice && \r\n        // !fixedPrixerPrice &&\r\n        !fromPrixerPrice &&\r\n        !toPrixerPrice &&\r\n        !thumbUrl){\r\n        setErrorMessage('Por favor completa todos los campos requeridos.');\r\n        setSnackBarError(true);\r\n        e.preventDefault();\r\n      } else {\r\n        setLoading(true);\r\n        setButtonState(true);\r\n        \r\n        const data = {\r\n            '_id': props.product._id,\r\n            'thumbUrl': thumbUrl,\r\n            'active' : active || false,\r\n            'name' : productName,\r\n            'description' : description,\r\n            'category' : category,\r\n            'considerations' : considerations,\r\n            publicPrice: {\r\n                'from': fromPublicPrice,\r\n                'to': toPublicPrice,\r\n            },\r\n            prixerPrice: {\r\n                'from': fromPrixerPrice,\r\n                'to': toPrixerPrice,\r\n            },\r\n            hasSpecialVar: hasSpecialVar\r\n        }\r\n        \r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/update\";\r\n        const response = await axios.post(base_url,data);\r\n        if(response.data.success === false){\r\n          setLoading(false);\r\n          setButtonState(false);\r\n          setErrorMessage(response.data.message);\r\n          setSnackBarError(true);\r\n        } else {\r\n          setErrorMessage('Actualización de producto exitosa.');\r\n          setSnackBarError(true);\r\n          history.push('/admin/product/read');\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    const handleVariantsClick = ()=> {\r\n        history.push({pathname:\"/admin/product/\"+props.product._id+\"/variant/read\"});\r\n        setShowVariants(true); \r\n        props.setProductEdit(false);\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n        <Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress />\r\n        </Backdrop>\r\n    }\r\n        {\r\n        showVariants ?\r\n        <>\r\n        <Grid container justify=\"left\">\r\n            <Grid item xs={2}>\r\n                <button href=\"#\" onClick={()=>{setShowVariants(false); props.setProductEdit(true);}}><h2 style={{color:\"rgba(191, 191, 191, 0.5)\", marginTop:0}}>Productos </h2></button>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <button href=\"#\" onClick={()=>{setShowVariants(true); setActiveVCrud('read');}}><h2 style={{color:'#d33f49', marginTop:0}}>Variantes</h2></button>\r\n            </Grid>\r\n        </Grid>\r\n        <Variants product={props.product} activeVCrud={activeVCrud} setActiveVCrud={setActiveVCrud}/>\r\n        </>\r\n        :\r\n        <div>\r\n        <Grid container justify=\"left\">\r\n            <Grid item xs={2} style={{color:\"rgba(191, 191, 191, 0.5)\"}}>\r\n                <Title>Productos </Title>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <a onClick={handleVariantsClick}><h2 style={{color:\"rgba(191, 191, 191, 0.5)\", marginTop:0}}>Variantes</h2></a>\r\n            </Grid>\r\n        </Grid>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            display=\"inline\"\r\n                            id=\"thumbUrl\"\r\n                            label=\"ThumbUrl\"\r\n                            name=\"thumbUrl\"\r\n                            autoComplete=\"thumbUrl\"\r\n                            value={thumbUrl}\r\n                            onChange={(e) => {setThumbUrl(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid container xs={6}>\r\n                      <Grid item xs={6}>\r\n                          <Checkbox \r\n                              checked={active}\r\n                              color=\"primary\" \r\n                              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                              onChange={()=>{active?setActive(false):setActive(true)}}\r\n                          /> Habilitado / Visible\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                          <Checkbox\r\n                              checked={hasSpecialVar}\r\n                              color=\"primary\" \r\n                              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                              onChange={()=>{hasSpecialVar?setHasSpecialVar(false):setHasSpecialVar(true)}}\r\n                          /> ¿Tiene variables especiales?\r\n                      </Grid>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            display=\"inline\"\r\n                            id=\"productName\"\r\n                            label=\"Nombre\"\r\n                            name=\"productName\"\r\n                            autoComplete=\"productName\"\r\n                            value={productName}\r\n                            onChange={(e) => {setProductName(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            display=\"inline\"\r\n                            fullWidth\r\n                            id=\"category\"\r\n                            label=\"Categoría\"\r\n                            name=\"category\"\r\n                            autoComplete=\"category\"\r\n                            value={category}\r\n                            onChange={(e) => {setCategory(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            fullWidth\r\n                            rows={2}\r\n                            id=\"description\"\r\n                            label=\"Descripción\"\r\n                            name=\"description\"\r\n                            autoComplete=\"description\"\r\n                            value={description}\r\n                            onChange={(e) => {setDescription(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            multiline\r\n                            rows={2}\r\n                            id=\"considerations\"\r\n                            label=\"Consideraciones\"\r\n                            name=\"considerations\"\r\n                            autoComplete=\"considerations\"\r\n                            value={considerations}\r\n                            onChange={(e) => {setConsiderations(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{marginTop: 20}}>\r\n                    <Title>PVP</Title>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                {/* <Grid item xs={4} md={4}>\r\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"fixedPublicPrice\"\r\n                        label=\"Fijo\"\r\n                        name=\"fixedPublicPrice\"\r\n                        autoComplete=\"fixedPublicPrice\"\r\n                        value={fixedPublicPrice}\r\n                        onChange={(e) => {setFixedPublicPrice(e.target.value);}}\r\n                    />\r\n                    </FormControl>\r\n                </Grid> */}\r\n                <Grid item xs={4} md={5}>\r\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"fromPublicPrice\"\r\n                        label=\"Desde\"\r\n                        name=\"fromPublicPrice\"\r\n                        autoComplete=\"fromPublicPrice\"\r\n                        value={fromPublicPrice}\r\n                        onChange={(e) => {setFromPublicPrice(e.target.value);}}\r\n                    />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4} md={5}>\r\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"toPublicPrice\"\r\n                        label=\"Hasta\"\r\n                        name=\"toPublicPrice\"\r\n                        autoComplete=\"toPublicPrice\"\r\n                        value={toPublicPrice}\r\n                        onChange={(e) => {setToPublicPrice(e.target.value);}}\r\n                    />\r\n                    </FormControl>\r\n                </Grid>\r\n                </Grid>\r\n                <Grid container style={{marginTop: 20}}>\r\n                    <Title>PVM</Title>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                {/* <Grid item xs={4} md={4}>\r\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"fixedPrixerPrice\"\r\n                        label=\"Fijo\"\r\n                        name=\"fixedPrixerPrice\"\r\n                        autoComplete=\"fixedPrixerPrice\"\r\n                        value={fixedPrixerPrice}\r\n                        onChange={(e) => {setFixedPrixerPrice(e.target.value);}}\r\n                    />\r\n                    </FormControl>\r\n                </Grid> */}\r\n                <Grid item xs={4} md={5}>\r\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"fromPrixerPrice\"\r\n                        label=\"Desde\"\r\n                        name=\"fromPrixerPrice\"\r\n                        autoComplete=\"fromPrixerPrice\"\r\n                        value={fromPrixerPrice}\r\n                        onChange={(e) => {setFromPrixerPrice(e.target.value);}}\r\n                    />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4} md={5}>\r\n                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"toPrixerPrice\"\r\n                        label=\"Hasta\"\r\n                        name=\"toPrixerPrice\"\r\n                        autoComplete=\"toPrixerPrice\"\r\n                        value={toPrixerPrice}\r\n                        onChange={(e) => {setToPrixerPrice(e.target.value);}}\r\n                    />\r\n                    </FormControl>\r\n                </Grid>\r\n                </Grid>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={buttonState} style={{ marginTop: 20}}>\r\n                Actualizar\r\n              </Button>\r\n            </Grid>\r\n        </form>\r\n        </div>\r\n        }\r\n        <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={1000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\createProduct.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\consumerCrud\\consumerServices.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\Title.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orderServices.js",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\createOrder.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\variants.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderDetails.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderBasicInfo.jsx",[],"C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\readVariants.jsx",["715","716","717","718","719","720","721","722","723","724","725","726","727","728"],"import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from '../../adminMain/Title';\r\nimport axios from 'axios';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ReadVariants(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [rows, setRows] = useState();\r\n    const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/read\";\r\n\r\nuseEffect(()=> {\r\n    axios.post(base_url, props.product)\r\n    .then(response =>{\r\n        response.data.products[0].variants &&\r\n            setRows(response.data.products[0].variants);\r\n    })\r\n    .catch(error =>{\r\n        console.log(error);\r\n    })\r\n},[]);\r\n\r\n  const handleActive = (variant, action)=> {\r\n    props.setVariant(variant);\r\n    action == 'create' &&\r\n    history.push('/admin/product'+'/'+props.product._id+'/variant/'+action);\r\n    action == 'read' &&\r\n    history.push('/admin/product'+'/'+props.product._id+'/variant/'+action);\r\n    action == 'update' &&\r\n    history.push('/admin/product'+'/'+props.product._id+'/variant/'+variant._id+'/'+action);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        {\r\n        rows &&\r\n      <Table size=\"small\" style={{overflow: 'auto'}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\"></TableCell>\r\n            <TableCell align=\"center\">Imagen</TableCell>\r\n            <TableCell align=\"center\">Nombre</TableCell>\r\n            <TableCell align=\"center\">Activo</TableCell>\r\n            <TableCell align=\"center\">Descripción</TableCell>\r\n            <TableCell align=\"center\">PVP desde-hasta</TableCell>\r\n            <TableCell align=\"center\">PVM desde-hasta</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {\r\n        rows &&\r\n          rows.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell align=\"center\">\r\n                <Fab color=\"default\" style={{width: 35, height: 35}} aria-label=\"edit\" onClick={(e)=>{handleActive(row, 'update')}}>\r\n                  <EditIcon/>\r\n                </Fab>\r\n              </TableCell>\r\n              <TableCell align=\"center\"><img src={row.thumbUrl} style={{width: 50, height: 'auto'}}/></TableCell>\r\n              <TableCell align=\"center\">{row.name}</TableCell>\r\n              <TableCell align=\"center\">\r\n                <Checkbox \r\n                  disabled\r\n                  checked={row.active}\r\n                  color=\"primary\" \r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.description}</TableCell>\r\n              <TableCell align=\"center\">{row.publicPrice.from}-{row.publicPrice.to}</TableCell>\r\n              <TableCell align=\"center\">{row.prixerPrice.from}-{row.prixerPrice.to}</TableCell>\r\n            </TableRow>\r\n          ))\r\n        }\r\n        </TableBody>\r\n      </Table>\r\n} \r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\products\\productsGrid.jsx",["729","730","731","732","733","734"],"//[]      17. Búsqueda de Prixers.\r\n//[]      21. Términos y condiciones.\r\n//[]      16. Filtros para las búsquedas (Por etiqueta).\r\n//[]      25. Editar datos de la imagen en la tarjeta del grid grande.\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { isWidthUp } from '@material-ui/core/withWidth';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport utils from '../utils/utils';\r\nimport axios from 'axios';\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { setProductAtts, getAttributes, getEquation } from './services.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow: 'hidden',\r\n    alignContent: \"space-between\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n    width: '50%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: 300\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      maxWidth: 330\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      maxWidth: 330\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: 330\r\n    }\r\n  },\r\n  gridList: {\r\n    overflow: 'hidden',\r\n    padding: 10,\r\n    width: '100%',\r\n    height: '100%',\r\n    justifyContent: 'space-around',\r\n  },\r\n  img: {\r\n    width: '100%'\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst getGridListCols = () => {\r\n  if (isWidthUp('md', 200)) {\r\n    return 4;\r\n  }\r\n\r\n  return 1;\r\n}\r\n\r\nexport default function ProductGrid(props) {\r\n  const classes = useStyles();\r\n  const [tiles, setTiles] = useState();\r\n  const [width, setWidth] = useState([]);\r\n  const [height, setHeight] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const base_url = process.env.REACT_APP_BACKEND_URL + \"/product/read-all\";\r\n    axios.get(base_url)\r\n      .then(async (response) => {\r\n        let productsAttTemp1 = response.data.products\r\n        await productsAttTemp1.map(async (p, iProd, pArr) => {\r\n          productsAttTemp1 = await getEquation(p, iProd, pArr);\r\n        });\r\n        setTiles(getAttributes(productsAttTemp1));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <GridList cellHeight={'auto'} className={classes.gridList} cols={getGridListCols()}>\r\n      {tiles ?\r\n        tiles.map((tile, iProd, productsArr) => (\r\n          <Card className={classes.root}>\r\n            <CardActionArea style={{ alignContent: \"space-between\" }}>\r\n              <CardMedia>\r\n                <img src={tile.thumbUrl} className={classes.img} alt=\"product thumbnail\" />\r\n              </CardMedia>\r\n              <CardContent>\r\n                <Typography gutterBottom style={{ padding: 0, marginBotom: 12, width: 10 }} variant=\"h5\" component=\"h2\">\r\n                  {tile.name}\r\n                </Typography>\r\n                <Typography gutterBottom style={{ fontSize: 15, padding: 0, marginBottom: 15 }} variant=\"h5\" component=\"h2\">\r\n                  {\r\n                    (JSON.parse(localStorage.getItem('token')) &&\r\n                      JSON.parse(localStorage.getItem('token')).username) ?\r\n                      (tile.needsEquation && tile.prixerEquation && tile.prixerEquation != 0) ?\r\n                        \"PVP: $\" + Math.round(parseFloat(tile.publicEquation)) + \" \\n PVM: $\" + Math.round(parseFloat(tile.prixerEquation)) :\r\n                        \"PVP: $\" + tile.publicPrice.from + \" - \" + tile.publicPrice.to + \" \\n PVM: $\" + tile.prixerPrice.from + \" - \" + tile.prixerPrice.to\r\n                      :\r\n                      (tile.needsEquation && tile.publicEquation && tile.publicEquation != 0) ?\r\n                        \"PVP: $\" + Math.round(parseFloat(tile.publicEquation)) :\r\n                        \"PVP: \" + tile.publicPrice.from + \" - \" + tile.publicPrice.to\r\n                  }\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {tile.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            {\r\n              tile.hasSpecialVar &&\r\n              <>\r\n                <CardActions style={{ width: '25%' }}>\r\n                  {/* <Grid container xs={12} md={12} spacing={2}> */}\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.form}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        display=\"inline\"\r\n                        id=\"width\"\r\n                        label=\"Ancho\"\r\n                        name=\"width\"\r\n                        autoComplete=\"width\"\r\n                        value={width[iProd]}\r\n                        onChange={async (e) => {\r\n                          if (!e.target.value) {\r\n                            let w = width;\r\n                            w[iProd] = e.target.value;\r\n                            setWidth([...w]);\r\n                            let l = await getEquation(tile, iProd, tiles, width, height);\r\n                            setTiles([...l]);\r\n                          } else {\r\n                            if (/^\\d+$/.test(e.target.value) && e.target.value[0] !== \"0\") {\r\n                              if (e.target.value && e.target.value != 0) {\r\n                                let w = width;\r\n                                w[iProd] = e.target.value;\r\n                                setWidth([...w]);\r\n                                let l = await getEquation(tile, iProd, tiles, width, height);\r\n                                setTiles([...l]);\r\n                              } else {\r\n                                let w = width;\r\n                                w[iProd] = e.target.value;\r\n                                setWidth([...w]);\r\n                                let l = await getEquation(tile, iProd, tiles, width, height);\r\n                                setTiles([...l]);\r\n                              }\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </CardActions>\r\n                <CardActions style={{ width: '25%' }}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.form}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        display=\"inline\"\r\n                        id=\"height\"\r\n                        label=\"Alto\"\r\n                        name=\"height\"\r\n                        autoComplete=\"height\"\r\n                        value={height[iProd]}\r\n                        onChange={async (e) => {\r\n                          if (!e.target.value) {\r\n                            let h = height;\r\n                            h[iProd] = e.target.value;\r\n                            setHeight([...h]);\r\n                            let l = await getEquation(tile, iProd, tiles, width, height);\r\n                            setTiles([...l]);\r\n                          } else {\r\n                            if (/^\\d+$/.test(e.target.value) && e.target.value[0] !== \"0\") {\r\n                              if (e.target.value && e.target.value != 0) {\r\n                                let h = height;\r\n                                h[iProd] = e.target.value;\r\n                                setHeight([...h]);\r\n                                let l = await getEquation(tile, iProd, tiles, width, height);\r\n                                setTiles([...l]);\r\n                              } else {\r\n                                let h = height;\r\n                                h[iProd] = e.target.value;\r\n                                setHeight([...h]);\r\n                                let l = await getEquation(tile, iProd, tiles, width, height);\r\n                                setTiles([...l]);\r\n                              }\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  {/* </Grid> */}\r\n                </CardActions>\r\n              </>\r\n            }\r\n            {\r\n              tile.attributes &&\r\n              tile.attributes.map((att, iAtt, attributesArr) => (\r\n                <CardActions key={iAtt} style={{ width: '50%' }}>\r\n                  <Grid item xs={12} sm={12} md={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.form} xs={12} sm={12} md={12}>\r\n                      <InputLabel required id=\"att.name\">{att.name}</InputLabel>\r\n                      <Select\r\n                        labelId=\"artTypeLabel\"\r\n                        id=\"artType\"\r\n                        value={tile.selection && tile.selection[iAtt]}\r\n                        onChange={\r\n                          async (e) => {\r\n                            const pAtts = await setProductAtts(e.target.value, attributesArr, iProd, iAtt, productsArr, width, height);\r\n\r\n                            if (pAtts) {\r\n                              setTiles(pAtts.pAtt ? [...pAtts.pAtt] : [...pAtts.att]);\r\n                            }\r\n                          }\r\n                        }\r\n                        label={att.selection}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em></em>\r\n                        </MenuItem>\r\n                        {\r\n                          att.value &&\r\n                          att.value.map((n, i) => (\r\n                            <MenuItem key={n} value={n}>{n}</MenuItem>\r\n                          ))\r\n                        }\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </CardActions>\r\n              ))\r\n            }\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\" onClick={(e) => { window.open(utils.generateWaProductMessage(tile), '_blank'); }}>\r\n                Información <WhatsAppIcon />\r\n              </Button>\r\n            </CardActions>\r\n            <CardActions>\r\n              {\r\n                tile.variants &&\r\n                tile.variants.map((v) => {\r\n                  if (v.attributes) {\r\n                    const test = v.attributes.reduce((r, a) => {\r\n                      return (a.name in tile.attributes) === true\r\n                    }, true)\r\n                  }\r\n                })\r\n              }\r\n            </CardActions>\r\n          </Card>\r\n        )\r\n        )\r\n        :\r\n        <h1>Pronto encontrarás los productos ideales para ti.</h1>\r\n      }\r\n    </GridList>\r\n  );\r\n}\r\n","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\createVariant.jsx",["735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778"],"import React from 'react';\r\nimport {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from '../../adminMain/Title';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function CreateVariant(props) {\r\n    const classes = useStyles();\r\n    const [ active, setActive ] = useState(props.variant && props.variant.active || false);\r\n    const [ attributes, setAttributes ] = useState(props.variant && props.variant.attributes || [{ name:'', value:''}]);\r\n    const [ buttonAttState, setButtonAttState] = useState();\r\n    const [ variantName, setVariantName ] = useState(props.variant && props.variant.name || '');\r\n    const [ description, setDescription ] = useState(props.variant && props.variant.description || '');\r\n    const [ category, setCategory ] = useState(props.variant && props.variant.category || '');\r\n    const [ considerations, setConsiderations ] = useState(props.variant && props.variant.considerations || '');\r\n    const [publicPriceEq, setPublicPriceEq] = useState(props.variant && props.variant.publicPrice.equation || '');\r\n    const [fromPublicPrice, setFromPublicPrice] = useState(props.variant && props.variant.publicPrice.from || '');\r\n    const [ toPublicPrice, setToPublicPrice ] = useState(props.variant && props.variant.publicPrice.to || '');\r\n    const [ prixerPriceEq, setPrixerPriceEq ] = useState(props.variant && props.variant.prixerPrice.equation || '');\r\n    const [ fromPrixerPrice, setFromPrixerPrice ] = useState(props.variant && props.variant.prixerPrice.from || '');\r\n    const [ toPrixerPrice, setToPrixerPrice ] = useState(props.variant && props.variant.prixerPrice.to || '');\r\n    const [loading, setLoading] = useState(false);\r\n    const [buttonState, setButtonState] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const [ thumbUrl, setThumbUrl ] = useState(props.variant && props.variant.thumbUrl || '');\r\n\r\n    //Error states.\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [snackBarError, setSnackBarError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState();\r\n    const [emailError, setEmailError] = useState();\r\n\r\n    const insertVariants = (productData, variants)=> {\r\n        let updatedVariants = productData;\r\n        updatedVariants.variants = productData.variants.filter((v)=>{ if(v._id != props.variant._id) return v});\r\n        variants._id = props.variant._id\r\n        updatedVariants.variants.unshift(variants);\r\n\r\n        return updatedVariants;\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e)=> {\r\n      e.preventDefault();\r\n      if(!active && \r\n        !variantName && \r\n        !description && \r\n        !category && \r\n        !considerations && \r\n        !publicPriceEq &&\r\n        !fromPublicPrice &&\r\n        !toPublicPrice && \r\n        !prixerPriceEq &&\r\n        !fromPrixerPrice &&\r\n        !toPrixerPrice &&\r\n        !thumbUrl){\r\n        setErrorMessage('Por favor completa todos los campos requeridos.');\r\n        setSnackBarError(true);\r\n        e.preventDefault();\r\n      } else {\r\n        setLoading(true);\r\n        setButtonState(true);\r\n\r\n        const productData = props.product;\r\n\r\n        const variants = {\r\n            '_id': props.variant && props.variant._id || nanoid(),\r\n            'thumbUrl': thumbUrl,\r\n            'active' : active,\r\n            'name' : variantName,\r\n            'description' : description,\r\n            'category' : category,\r\n            'considerations' : considerations,\r\n            publicPrice: {\r\n                'from': fromPublicPrice,\r\n                'to': toPublicPrice,\r\n                'equation': publicPriceEq\r\n            },\r\n            prixerPrice: {\r\n                'from': fromPrixerPrice,\r\n                'to': toPrixerPrice,\r\n                'equation': prixerPriceEq\r\n            }\r\n        }\r\n\r\n        variants.attributes ?\r\n            variants.attributes.push(...attributes)\r\n        : variants.attributes = attributes;\r\n        let updatedWithVariants = {};\r\n        \r\n        if(props.variant) {\r\n            updatedWithVariants = insertVariants(productData, variants);\r\n        } else {\r\n            productData.variants.unshift(variants);\r\n            updatedWithVariants = productData;\r\n        }\r\n        \r\n        const base_url= process.env.REACT_APP_BACKEND_URL + \"/product/update\";\r\n        const response = await axios.post(base_url,updatedWithVariants)\r\n\r\n        if(response.data.success === false){\r\n          setLoading(false);\r\n          setButtonState(false);\r\n          setErrorMessage(response.data.message);\r\n          setSnackBarError(true);\r\n          props.setVariant('');\r\n        } else {\r\n          setErrorMessage('Actualización de producto exitoso.');\r\n          setSnackBarError(true);\r\n          setActive('');\r\n          setThumbUrl('');\r\n          setVariantName('');\r\n          setDescription('');\r\n          setCategory('');\r\n          setConsiderations('');\r\n          setPublicPriceEq('');\r\n          setFromPublicPrice('');\r\n          setToPublicPrice('');\r\n          setPrixerPriceEq('');\r\n          setFromPrixerPrice('');\r\n          setToPrixerPrice('');\r\n          props.setVariant('');\r\n          setLoading(false);\r\n          history.push({pathname:\"/admin/product/read\"});\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n    <Backdrop className={classes.backdrop} open={loading}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n    }\r\n      <Title>Variantes</Title>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            display=\"inline\"\r\n                            id=\"thumbUrl\"\r\n                            label=\"ThumbUrl\"\r\n                            name=\"thumbUrl\"\r\n                            product         value={thumbUrl}\r\n                            onChange={(e) => {setThumbUrl(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                        <Checkbox\r\n                            checked={active}\r\n                            color=\"primary\" \r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            onChange={()=>{active?setActive(false):setActive(true)}}\r\n                        /> Habilitado / Visible\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            display=\"inline\"\r\n                            id=\"variantName\"\r\n                            label=\"Nombre\"\r\n                            name=\"variantName\"\r\n                            autoComplete=\"variantName\"\r\n                            value={variantName}\r\n                            onChange={(e) => {setVariantName(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            fullWidth\r\n                            rows={2}\r\n                            id=\"description\"\r\n                            label=\"Descripción\"\r\n                            name=\"description\"\r\n                            autoComplete=\"description\"\r\n                            value={description}\r\n                            onChange={(e) => {setDescription(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            multiline\r\n                            rows={2}\r\n                            id=\"considerations\"\r\n                            label=\"Consideraciones\"\r\n                            name=\"considerations\"\r\n                            autoComplete=\"considerations\"\r\n                            value={considerations}\r\n                            onChange={(e) => {setConsiderations(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{marginTop: 20}}>\r\n                    <h3>Precios Público</h3>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"publicPriceEquation\"\r\n                            label=\"Ecuación\"\r\n                            name=\"publicPriceEquation\"\r\n                            autoComplete=\"publicPriceEquation\"\r\n                            value={publicPriceEq}\r\n                            onChange={(e) => {setPublicPriceEq(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid container xs={12} md={12} spacing={2} style={{margin:0}}>\r\n                        <Grid item xs={6} md={6}>\r\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"fromPublicPrice\"\r\n                                label=\"Desde\"\r\n                                name=\"fromPublicPrice\"\r\n                                autoComplete=\"fromPublicPrice\"\r\n                                value={fromPublicPrice}\r\n                                onChange={(e) => {setFromPublicPrice(e.target.value);}}\r\n                            />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"toPublicPrice\"\r\n                                label=\"Hasta\"\r\n                                name=\"toPublicPrice\"\r\n                                autoComplete=\"toPublicPrice\"\r\n                                value={toPublicPrice}\r\n                                onChange={(e) => {setToPublicPrice(e.target.value);}}\r\n                            />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{marginTop: 20}}>\r\n                    <h3>Precios Prixers</h3>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={4} md={4}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"prixerPriceEq\"\r\n                            label=\"Ecuación\"\r\n                            name=\"prixerPriceEq\"\r\n                            autoComplete=\"prixerPriceEq\"\r\n                            value={prixerPriceEq}\r\n                            onChange={(e) => {setPrixerPriceEq(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4} md={5}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"fromPrixerPrice\"\r\n                            label=\"Desde\"\r\n                            name=\"fromPrixerPrice\"\r\n                            autoComplete=\"fromPrixerPrice\"\r\n                            value={fromPrixerPrice}\r\n                            onChange={(e) => {setFromPrixerPrice(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4} md={5}>\r\n                        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"toPrixerPrice\"\r\n                            label=\"Hasta\"\r\n                            name=\"toPrixerPrice\"\r\n                            autoComplete=\"toPrixerPrice\"\r\n                            value={toPrixerPrice}\r\n                            onChange={(e) => {setToPrixerPrice(e.target.value);}}\r\n                        />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container xs={12} spacing={2}>\r\n                    <Grid container style={{marginTop: 20}}>\r\n                        <h3>Atributos</h3>\r\n                    </Grid>\r\n                        {   \r\n                        attributes &&\r\n                            attributes.map((att, i)=>(\r\n                            <Grid container spacing={2} xs={12} style={{marginBottom: 10}}>\r\n                                <Grid item xs={12} md={5}>\r\n                                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"attribute\"\r\n                                        label=\"Nombre\"\r\n                                        name=\"attribute\"\r\n                                        autoComplete=\"attribute\"\r\n                                        value={att.name}\r\n                                        onChange={(e) => {\r\n                                            setAttributes(attributes.slice(0,i).concat({'name': e.target.value, 'value': att.value}).concat(attributes.slice(i+1,)));\r\n                                        }}\r\n                                    />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={5}>\r\n                                    <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" xs={12} fullWidth={true}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"attributeValue\"\r\n                                        label=\"Valor\"\r\n                                        name=\"attributeValue\"\r\n                                        autoComplete=\"attributeValue\"\r\n                                        value={att.value}\r\n                                        onChange={(e) => {\r\n                                            setAttributes(attributes.slice(0,i).concat({'name': att.name, 'value': e.target.value}).concat(attributes.slice(i+1,)));\r\n                                        }}\r\n                                    />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={()=>{ setAttributes(attributes.slice(0, i).concat(attributes.slice(i+1,)))}} disabled={buttonState} style={{ marginTop: 20}}>\r\n                                    -\r\n                                </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ))\r\n                        }\r\n                    <Grid item xs={12} align=\"center\">\r\n                    <Button variant=\"contained\" color=\"default\" onClick={()=>{setAttributes(attributes.concat({ name:'', value:'' }))}} disabled={buttonState} style={{ marginTop: 20}}>\r\n                        +\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={buttonState} style={{ marginTop: 20}}>\r\n                    {props.variant && \"Actualizar\" || \"Crear\"}\r\n                </Button>\r\n            </Grid>\r\n        </form>\r\n        <Snackbar\r\n          open={snackBarError}\r\n          autoHideDuration={1000}\r\n          message={errorMessage}\r\n          className={classes.snackbar}\r\n        />\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\Usuario\\Documents\\prixelart-frontend\\src\\products\\services.js",["779","780","781","782","783","784","785","786","787","788","789","790"],"\r\n\r\nexport const setProductAtts = async (attValue, attributesArr, iProd, iAtt, productsArr, width, height)=> {\r\n    let att = productsArr;\r\n    if(att && att.length > 0 && att[iProd] && att[iProd].selection) {\r\n      att[iProd].selection[iAtt] = attValue;\r\n    }\r\n    const pAtt = await getEquation(att[iProd], iProd, att, width, height);\r\n    return { pAtt: pAtt, att: att }\r\n    // setTiles(pAtt.pAtt ? [...pAtt.pAtt] : [...pAtt.att]);\r\n\r\n  }\r\n\r\n\r\n  export const getAttributes = (products)=> {\r\n  let lol = products;\r\n  lol = products.map((p, i)=>{\r\n    let att = [];\r\n    p.variants.map((v)=>{\r\n      if(v.active){\r\n        if(att.length == 0) {\r\n        att = [...new Set(v.attributes.flatMap((a) => a))];\r\n        } else {\r\n          att.push(...new Set(v.attributes.flatMap((a) => a)));\r\n        }\r\n      }\r\n    });\r\n    const result = [...new Set(att.flatMap(({name}) => name))];\r\n    const res1 = [...new Set( \r\n      result.map( (a)=>{ \r\n        return  {\r\n          name: a, \r\n          value: [...new Set(att.map(v=> { \r\n            if( ( v.name==a ) && (v.value) ) {\r\n              return v.value;\r\n            }\r\n          }))].filter(a=>a)\r\n        }\r\n      })\r\n    )];\r\n    p.attributes = res1;\r\n    p.selection = [];\r\n    p.selection.length = p.attributes.length;\r\n\r\n    return p;\r\n  });\r\n  return lol;\r\n  \r\n}\r\n\r\nexport const structureEquation = (equation, i, width, height)=> {\r\n  let eq = '';\r\n  equation.split(/[\\s{}}]+/).map((n, j, arr)=>{\r\n    if(n=='width'){\r\n      eq = eq.concat(width[i] || 0);\r\n    } else if(n=='height'){\r\n      eq = eq.concat(height[i] || 0);\r\n    } else {\r\n      eq = eq.concat(n);\r\n    }\r\n  });\r\n  return eq;\r\n\r\n}\r\n\r\nexport const getEquation = async (product, iProd, productArr, width, height)=> {\r\n\r\n  if( product.selection ){\r\n    const filteredVars = await product.variants.filter((v, i)=>{\r\n      if( v.attributes && v.attributes.length != 0 && v.attributes.length == product.selection.length ){\r\n        return v.attributes.every(a => product.selection.includes(a.value));\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if(filteredVars.length != 0) {\r\n      if (filteredVars[0].publicPrice.equation && filteredVars[0].prixerPrice.equation ) {\r\n        productArr[iProd].needsEquation = true;\r\n        productArr[iProd].publicEquation = eval(structureEquation(filteredVars[0].publicPrice.equation, iProd, width, height) || 0);\r\n        productArr[iProd].prixerEquation = eval(structureEquation(filteredVars[0].prixerPrice.equation, iProd, width, height) || 0);\r\n      } else {\r\n        productArr[iProd].needsEquation = false;\r\n      }\r\n    } else {\r\n      productArr[iProd].needsEquation = false;\r\n    }\r\n  } else {\r\n    productArr[iProd].needsEquation = false;\r\n    productArr[iProd].publicEquation = ''; \r\n    productArr[iProd].prixerEquation = ''; \r\n  }\r\n\r\n  return productArr;\r\n\r\n}","C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\index.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\theme.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\App.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\serviceWorker.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\expire.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\userRegistration.jsx",["791","792","793","794","795","796","797","798","799"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\login\\loginPage.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\adminLogin\\adminLoginPage.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\prixerRegistration.jsx",["800","801","802","803","804","805","806","807","808","809","810","811","812","813","814"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerProfile.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\passwordReset.jsx",["815"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsCatalog.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordChange\\passwordChange.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\home\\home.jsx",["816","817"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\passwordReset\\forgotPassword.jsx",["818","819","820","821","822","823","824","825"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\fullscreenPhoto\\fullscreenPhoto.jsx",["826","827","828","829","830"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminMain.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\gallery\\gallery.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\validations.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\utils.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\grid\\grid.jsx",["831"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\Copyright\\copyright.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\artUploader.jsx",["832","833","834","835","836","837","838","839","840","841","842"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\simpleDialog\\simpleDialog.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\floatingAddButton\\floatingAddButton.jsx",["843"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\appBar\\appBar.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\Preferences.jsx",["844","845"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\paymentMethods.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orders.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\prixerGrid\\prixerGrid.jsx",["846"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\orders\\orderServices.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\updateOrder.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\createOrder.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\tabPreferences.jsx",["847","848"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\aspectRatioSelector.jsx",["849","850","851","852","853","854","855","856","857","858"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\createPaymentMethod.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\readPaymentMethods.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\paymentMethodCrud\\updatePaymentMethod.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\consumerServices.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\Title.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderDetails.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\orderCrud\\createOrder\\orderBasicInfo.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferenceTerms.jsx",["859","860"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\utils\\cropImage.js",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\preferences\\preferencesCarousel.jsx",["861","862","863","864","865","866","867","868","869","870","871","872","873"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\services.js",["874","875","876","877","878","879","880","881","882","883","884","885"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\searchBar\\searchBar.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\sharedComponents\\artUploader\\easyCropper.jsx",["886","887","888","889","890"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\consumers\\consumers.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\listItems.jsx",["891"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\products.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\dashboard.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\adminUser\\adminUser.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\products\\productsGrid.jsx",["892","893","894","895","896","897"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\register\\Terms.jsx",["898"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\prixerOptions\\prixerOptions.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\prixerProfile\\userData\\userData.jsx",["899","900"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\readConsumers.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\updateConsumer.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\consumerCrud\\createConsumer.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\chart.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\deposits.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\dashboard\\orders.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\disableProduct.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\updateAdmin.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\updateProduct.jsx",["901"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\createProduct.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\readProducts.jsx",["902"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\disableAdmin.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\createAdmin.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminCrud\\readAdmins.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\adminMain\\products\\variants.jsx",[],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\readVariants.jsx",["903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"C:\\Users\\Usuario\\documents\\prixelart-frontend\\src\\admin\\productCrud\\variants\\createVariant.jsx",["917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960"],{"ruleId":"961","replacedBy":"962"},{"ruleId":"963","replacedBy":"964"},{"ruleId":"965","severity":1,"message":"966","line":8,"column":8,"nodeType":"967","messageId":"968","endLine":8,"endColumn":17},{"ruleId":"965","severity":1,"message":"969","line":63,"column":9,"nodeType":"967","messageId":"968","endLine":63,"endColumn":16},{"ruleId":"970","severity":1,"message":"971","line":251,"column":6,"nodeType":"972","endLine":251,"endColumn":8,"suggestions":"973"},{"ruleId":"970","severity":1,"message":"974","line":292,"column":6,"nodeType":"972","endLine":292,"endColumn":20,"suggestions":"975"},{"ruleId":"976","severity":1,"message":"977","line":375,"column":68,"nodeType":"978","messageId":"979","endLine":375,"endColumn":70},{"ruleId":"970","severity":1,"message":"980","line":85,"column":3,"nodeType":"967","endLine":85,"endColumn":12,"suggestions":"981"},{"ruleId":"965","severity":1,"message":"982","line":22,"column":8,"nodeType":"967","messageId":"968","endLine":22,"endColumn":18},{"ruleId":"965","severity":1,"message":"983","line":23,"column":8,"nodeType":"967","messageId":"968","endLine":23,"endColumn":21},{"ruleId":"965","severity":1,"message":"984","line":24,"column":8,"nodeType":"967","messageId":"968","endLine":24,"endColumn":18},{"ruleId":"965","severity":1,"message":"985","line":25,"column":8,"nodeType":"967","messageId":"968","endLine":25,"endColumn":22},{"ruleId":"965","severity":1,"message":"986","line":26,"column":8,"nodeType":"967","messageId":"968","endLine":26,"endColumn":19},{"ruleId":"965","severity":1,"message":"987","line":27,"column":8,"nodeType":"967","messageId":"968","endLine":27,"endColumn":18},{"ruleId":"965","severity":1,"message":"988","line":28,"column":8,"nodeType":"967","messageId":"968","endLine":28,"endColumn":21},{"ruleId":"965","severity":1,"message":"989","line":29,"column":8,"nodeType":"967","messageId":"968","endLine":29,"endColumn":12},{"ruleId":"965","severity":1,"message":"990","line":2,"column":8,"nodeType":"967","messageId":"968","endLine":2,"endColumn":14},{"ruleId":"965","severity":1,"message":"991","line":13,"column":8,"nodeType":"967","messageId":"968","endLine":13,"endColumn":15},{"ruleId":"965","severity":1,"message":"992","line":28,"column":8,"nodeType":"967","messageId":"968","endLine":28,"endColumn":13},{"ruleId":"965","severity":1,"message":"993","line":148,"column":10,"nodeType":"967","messageId":"968","endLine":148,"endColumn":16},{"ruleId":"965","severity":1,"message":"994","line":148,"column":18,"nodeType":"967","messageId":"968","endLine":148,"endColumn":27},{"ruleId":"965","severity":1,"message":"995","line":149,"column":10,"nodeType":"967","messageId":"968","endLine":149,"endColumn":19},{"ruleId":"965","severity":1,"message":"996","line":149,"column":21,"nodeType":"967","messageId":"968","endLine":149,"endColumn":33},{"ruleId":"965","severity":1,"message":"997","line":150,"column":10,"nodeType":"967","messageId":"968","endLine":150,"endColumn":21},{"ruleId":"965","severity":1,"message":"998","line":151,"column":22,"nodeType":"967","messageId":"968","endLine":151,"endColumn":35},{"ruleId":"965","severity":1,"message":"999","line":157,"column":10,"nodeType":"967","messageId":"968","endLine":157,"endColumn":16},{"ruleId":"965","severity":1,"message":"1000","line":157,"column":18,"nodeType":"967","messageId":"968","endLine":157,"endColumn":27},{"ruleId":"965","severity":1,"message":"1001","line":158,"column":9,"nodeType":"967","messageId":"968","endLine":158,"endColumn":18},{"ruleId":"965","severity":1,"message":"1002","line":163,"column":9,"nodeType":"967","messageId":"968","endLine":163,"endColumn":22},{"ruleId":"965","severity":1,"message":"1003","line":171,"column":9,"nodeType":"967","messageId":"968","endLine":171,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1005","line":476,"column":13,"nodeType":"1006","endLine":484,"endColumn":14},{"ruleId":"965","severity":1,"message":"1007","line":31,"column":10,"nodeType":"967","messageId":"968","endLine":31,"endColumn":26},{"ruleId":"965","severity":1,"message":"1008","line":32,"column":8,"nodeType":"967","messageId":"968","endLine":32,"endColumn":16},{"ruleId":"965","severity":1,"message":"1009","line":33,"column":8,"nodeType":"967","messageId":"968","endLine":33,"endColumn":13},{"ruleId":"965","severity":1,"message":"997","line":97,"column":10,"nodeType":"967","messageId":"968","endLine":97,"endColumn":21},{"ruleId":"965","severity":1,"message":"1010","line":101,"column":17,"nodeType":"967","messageId":"968","endLine":101,"endColumn":25},{"ruleId":"965","severity":1,"message":"1001","line":103,"column":9,"nodeType":"967","messageId":"968","endLine":103,"endColumn":18},{"ruleId":"965","severity":1,"message":"1011","line":105,"column":9,"nodeType":"967","messageId":"968","endLine":105,"endColumn":23},{"ruleId":"965","severity":1,"message":"1012","line":114,"column":9,"nodeType":"967","messageId":"968","endLine":114,"endColumn":13},{"ruleId":"970","severity":1,"message":"1013","line":181,"column":3,"nodeType":"967","endLine":181,"endColumn":12,"suggestions":"1014"},{"ruleId":"965","severity":1,"message":"1015","line":1,"column":27,"nodeType":"967","messageId":"968","endLine":1,"endColumn":35},{"ruleId":"1016","severity":1,"message":"1017","line":234,"column":12,"nodeType":"1018","messageId":"979","endLine":234,"endColumn":22},{"ruleId":"970","severity":1,"message":"1019","line":110,"column":6,"nodeType":"972","endLine":110,"endColumn":19,"suggestions":"1020"},{"ruleId":"965","severity":1,"message":"1021","line":4,"column":8,"nodeType":"967","messageId":"968","endLine":4,"endColumn":13},{"ruleId":"965","severity":1,"message":"1022","line":1,"column":28,"nodeType":"967","messageId":"968","endLine":1,"endColumn":39},{"ruleId":"965","severity":1,"message":"1023","line":19,"column":8,"nodeType":"967","messageId":"968","endLine":19,"endColumn":15},{"ruleId":"965","severity":1,"message":"1024","line":150,"column":10,"nodeType":"967","messageId":"968","endLine":150,"endColumn":22},{"ruleId":"965","severity":1,"message":"1025","line":150,"column":24,"nodeType":"967","messageId":"968","endLine":150,"endColumn":39},{"ruleId":"965","severity":1,"message":"1026","line":154,"column":20,"nodeType":"967","messageId":"968","endLine":154,"endColumn":31},{"ruleId":"970","severity":1,"message":"1027","line":179,"column":6,"nodeType":"972","endLine":179,"endColumn":83,"suggestions":"1028"},{"ruleId":"976","severity":1,"message":"977","line":240,"column":12,"nodeType":"978","messageId":"979","endLine":240,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":252,"column":25,"nodeType":"978","messageId":"979","endLine":252,"endColumn":27},{"ruleId":"965","severity":1,"message":"1029","line":307,"column":12,"nodeType":"967","messageId":"968","endLine":307,"endColumn":22},{"ruleId":"965","severity":1,"message":"1030","line":354,"column":9,"nodeType":"967","messageId":"968","endLine":354,"endColumn":20},{"ruleId":"1031","severity":1,"message":"1032","line":355,"column":23,"nodeType":"1033","messageId":"1034","endLine":355,"endColumn":25},{"ruleId":"965","severity":1,"message":"1035","line":116,"column":10,"nodeType":"967","messageId":"968","endLine":116,"endColumn":15},{"ruleId":"965","severity":1,"message":"1036","line":1,"column":17,"nodeType":"967","messageId":"968","endLine":1,"endColumn":25},{"ruleId":"965","severity":1,"message":"1037","line":1,"column":27,"nodeType":"967","messageId":"968","endLine":1,"endColumn":36},{"ruleId":"965","severity":1,"message":"1037","line":1,"column":27,"nodeType":"967","messageId":"968","endLine":1,"endColumn":36},{"ruleId":"965","severity":1,"message":"992","line":9,"column":8,"nodeType":"967","messageId":"968","endLine":9,"endColumn":13},{"ruleId":"965","severity":1,"message":"1038","line":1,"column":28,"nodeType":"967","messageId":"968","endLine":1,"endColumn":47},{"ruleId":"965","severity":1,"message":"1039","line":70,"column":12,"nodeType":"967","messageId":"968","endLine":70,"endColumn":24},{"ruleId":"965","severity":1,"message":"1040","line":70,"column":26,"nodeType":"967","messageId":"968","endLine":70,"endColumn":41},{"ruleId":"965","severity":1,"message":"1041","line":71,"column":12,"nodeType":"967","messageId":"968","endLine":71,"endColumn":26},{"ruleId":"965","severity":1,"message":"1042","line":71,"column":28,"nodeType":"967","messageId":"968","endLine":71,"endColumn":45},{"ruleId":"965","severity":1,"message":"1043","line":72,"column":12,"nodeType":"967","messageId":"968","endLine":72,"endColumn":25},{"ruleId":"965","severity":1,"message":"1044","line":72,"column":27,"nodeType":"967","messageId":"968","endLine":72,"endColumn":43},{"ruleId":"970","severity":1,"message":"1045","line":100,"column":6,"nodeType":"972","endLine":100,"endColumn":25,"suggestions":"1046"},{"ruleId":"976","severity":1,"message":"977","line":120,"column":41,"nodeType":"978","messageId":"979","endLine":120,"endColumn":43},{"ruleId":"1047","severity":1,"message":"1048","line":166,"column":21,"nodeType":"1049","endLine":166,"endColumn":41},{"ruleId":"965","severity":1,"message":"1036","line":2,"column":10,"nodeType":"967","messageId":"968","endLine":2,"endColumn":18},{"ruleId":"965","severity":1,"message":"1050","line":39,"column":11,"nodeType":"967","messageId":"968","endLine":39,"endColumn":19},{"ruleId":"965","severity":1,"message":"984","line":4,"column":18,"nodeType":"967","messageId":"968","endLine":4,"endColumn":28},{"ruleId":"965","severity":1,"message":"1051","line":9,"column":3,"nodeType":"967","messageId":"968","endLine":9,"endColumn":12},{"ruleId":"965","severity":1,"message":"1052","line":10,"column":3,"nodeType":"967","messageId":"968","endLine":10,"endColumn":14},{"ruleId":"965","severity":1,"message":"1053","line":11,"column":3,"nodeType":"967","messageId":"968","endLine":11,"endColumn":8},{"ruleId":"965","severity":1,"message":"1054","line":12,"column":3,"nodeType":"967","messageId":"968","endLine":12,"endColumn":12},{"ruleId":"965","severity":1,"message":"1055","line":95,"column":10,"nodeType":"967","messageId":"968","endLine":95,"endColumn":14},{"ruleId":"965","severity":1,"message":"1056","line":119,"column":9,"nodeType":"967","messageId":"968","endLine":119,"endColumn":20},{"ruleId":"965","severity":1,"message":"1057","line":162,"column":9,"nodeType":"967","messageId":"968","endLine":162,"endColumn":12},{"ruleId":"965","severity":1,"message":"1057","line":196,"column":11,"nodeType":"967","messageId":"968","endLine":196,"endColumn":14},{"ruleId":"965","severity":1,"message":"1057","line":216,"column":9,"nodeType":"967","messageId":"968","endLine":216,"endColumn":12},{"ruleId":"976","severity":1,"message":"1058","line":315,"column":31,"nodeType":"978","messageId":"979","endLine":315,"endColumn":33},{"ruleId":"1059","severity":1,"message":"1060","line":482,"column":21,"nodeType":"1006","endLine":482,"endColumn":69},{"ruleId":"1061","severity":1,"message":"1062","line":483,"column":23,"nodeType":"1006","endLine":487,"endColumn":24},{"ruleId":"965","severity":1,"message":"1037","line":1,"column":17,"nodeType":"967","messageId":"968","endLine":1,"endColumn":26},{"ruleId":"965","severity":1,"message":"1063","line":10,"column":19,"nodeType":"967","messageId":"968","endLine":10,"endColumn":21},{"ruleId":"965","severity":1,"message":"1064","line":11,"column":11,"nodeType":"967","messageId":"968","endLine":11,"endColumn":18},{"ruleId":"965","severity":1,"message":"1065","line":12,"column":20,"nodeType":"967","messageId":"968","endLine":12,"endColumn":29},{"ruleId":"970","severity":1,"message":"1066","line":17,"column":28,"nodeType":"967","endLine":17,"endColumn":39},{"ruleId":"1067","severity":1,"message":"1068","line":141,"column":11,"nodeType":"1069","messageId":"1070","endLine":141,"endColumn":12},{"ruleId":"965","severity":1,"message":"1071","line":5,"column":7,"nodeType":"967","messageId":"968","endLine":5,"endColumn":16},{"ruleId":"965","severity":1,"message":"1072","line":17,"column":8,"nodeType":"967","messageId":"968","endLine":17,"endColumn":19},{"ruleId":"965","severity":1,"message":"1073","line":4,"column":10,"nodeType":"967","messageId":"968","endLine":4,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1005","line":147,"column":17,"nodeType":"1006","endLine":147,"endColumn":50},{"ruleId":"965","severity":1,"message":"1074","line":4,"column":8,"nodeType":"967","messageId":"968","endLine":4,"endColumn":12},{"ruleId":"965","severity":1,"message":"1075","line":11,"column":8,"nodeType":"967","messageId":"968","endLine":11,"endColumn":13},{"ruleId":"965","severity":1,"message":"1076","line":13,"column":8,"nodeType":"967","messageId":"968","endLine":13,"endColumn":24},{"ruleId":"965","severity":1,"message":"1077","line":14,"column":8,"nodeType":"967","messageId":"968","endLine":14,"endColumn":16},{"ruleId":"965","severity":1,"message":"1078","line":18,"column":8,"nodeType":"967","messageId":"968","endLine":18,"endColumn":14},{"ruleId":"965","severity":1,"message":"1064","line":27,"column":11,"nodeType":"967","messageId":"968","endLine":27,"endColumn":18},{"ruleId":"970","severity":1,"message":"1079","line":41,"column":3,"nodeType":"972","endLine":41,"endColumn":5,"suggestions":"1080"},{"ruleId":"976","severity":1,"message":"977","line":45,"column":12,"nodeType":"978","messageId":"979","endLine":45,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":46,"column":34,"nodeType":"978","messageId":"1083","endLine":46,"endColumn":35},{"ruleId":"976","severity":1,"message":"977","line":47,"column":12,"nodeType":"978","messageId":"979","endLine":47,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":48,"column":34,"nodeType":"978","messageId":"1083","endLine":48,"endColumn":35},{"ruleId":"976","severity":1,"message":"977","line":49,"column":12,"nodeType":"978","messageId":"979","endLine":49,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":50,"column":34,"nodeType":"978","messageId":"1083","endLine":50,"endColumn":35},{"ruleId":"1061","severity":1,"message":"1062","line":79,"column":41,"nodeType":"1006","endLine":79,"endColumn":102},{"ruleId":"976","severity":1,"message":"1058","line":116,"column":89,"nodeType":"978","messageId":"979","endLine":116,"endColumn":91},{"ruleId":"976","severity":1,"message":"1058","line":120,"column":89,"nodeType":"978","messageId":"979","endLine":120,"endColumn":91},{"ruleId":"976","severity":1,"message":"1058","line":154,"column":68,"nodeType":"978","messageId":"979","endLine":154,"endColumn":70},{"ruleId":"976","severity":1,"message":"1058","line":194,"column":68,"nodeType":"978","messageId":"979","endLine":194,"endColumn":70},{"ruleId":"1031","severity":1,"message":"1032","line":262,"column":39,"nodeType":"1033","messageId":"1034","endLine":262,"endColumn":41},{"ruleId":"965","severity":1,"message":"1084","line":264,"column":27,"nodeType":"967","messageId":"968","endLine":264,"endColumn":31},{"ruleId":"965","severity":1,"message":"982","line":13,"column":8,"nodeType":"967","messageId":"968","endLine":13,"endColumn":18},{"ruleId":"965","severity":1,"message":"983","line":14,"column":8,"nodeType":"967","messageId":"968","endLine":14,"endColumn":21},{"ruleId":"965","severity":1,"message":"984","line":15,"column":8,"nodeType":"967","messageId":"968","endLine":15,"endColumn":18},{"ruleId":"965","severity":1,"message":"985","line":16,"column":8,"nodeType":"967","messageId":"968","endLine":16,"endColumn":22},{"ruleId":"965","severity":1,"message":"987","line":18,"column":8,"nodeType":"967","messageId":"968","endLine":18,"endColumn":18},{"ruleId":"965","severity":1,"message":"988","line":19,"column":8,"nodeType":"967","messageId":"968","endLine":19,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1086","line":36,"column":58,"nodeType":"1087","messageId":"1088","endLine":36,"endColumn":60},{"ruleId":"1085","severity":1,"message":"1086","line":36,"column":82,"nodeType":"1087","messageId":"1088","endLine":36,"endColumn":84},{"ruleId":"1085","severity":1,"message":"1086","line":37,"column":66,"nodeType":"1087","messageId":"1088","endLine":37,"endColumn":68},{"ruleId":"1085","severity":1,"message":"1086","line":37,"column":94,"nodeType":"1087","messageId":"1088","endLine":37,"endColumn":96},{"ruleId":"965","severity":1,"message":"1089","line":38,"column":13,"nodeType":"967","messageId":"968","endLine":38,"endColumn":27},{"ruleId":"965","severity":1,"message":"1090","line":38,"column":29,"nodeType":"967","messageId":"968","endLine":38,"endColumn":46},{"ruleId":"1085","severity":1,"message":"1086","line":39,"column":68,"nodeType":"1087","messageId":"1088","endLine":39,"endColumn":70},{"ruleId":"1085","severity":1,"message":"1086","line":39,"column":90,"nodeType":"1087","messageId":"1088","endLine":39,"endColumn":92},{"ruleId":"1085","severity":1,"message":"1086","line":40,"column":68,"nodeType":"1087","messageId":"1088","endLine":40,"endColumn":70},{"ruleId":"1085","severity":1,"message":"1086","line":40,"column":97,"nodeType":"1087","messageId":"1088","endLine":40,"endColumn":99},{"ruleId":"1085","severity":1,"message":"1086","line":41,"column":62,"nodeType":"1087","messageId":"1088","endLine":41,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1086","line":41,"column":88,"nodeType":"1087","messageId":"1088","endLine":41,"endColumn":90},{"ruleId":"1085","severity":1,"message":"1086","line":42,"column":74,"nodeType":"1087","messageId":"1088","endLine":42,"endColumn":76},{"ruleId":"1085","severity":1,"message":"1086","line":42,"column":106,"nodeType":"1087","messageId":"1088","endLine":42,"endColumn":108},{"ruleId":"1085","severity":1,"message":"1086","line":43,"column":70,"nodeType":"1087","messageId":"1088","endLine":43,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1086","line":43,"column":108,"nodeType":"1087","messageId":"1088","endLine":43,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1086","line":44,"column":74,"nodeType":"1087","messageId":"1088","endLine":44,"endColumn":76},{"ruleId":"1085","severity":1,"message":"1086","line":44,"column":108,"nodeType":"1087","messageId":"1088","endLine":44,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1086","line":45,"column":72,"nodeType":"1087","messageId":"1088","endLine":45,"endColumn":74},{"ruleId":"1085","severity":1,"message":"1086","line":45,"column":104,"nodeType":"1087","messageId":"1088","endLine":45,"endColumn":106},{"ruleId":"1085","severity":1,"message":"1086","line":46,"column":72,"nodeType":"1087","messageId":"1088","endLine":46,"endColumn":74},{"ruleId":"1085","severity":1,"message":"1086","line":46,"column":110,"nodeType":"1087","messageId":"1088","endLine":46,"endColumn":112},{"ruleId":"1085","severity":1,"message":"1086","line":47,"column":76,"nodeType":"1087","messageId":"1088","endLine":47,"endColumn":78},{"ruleId":"1085","severity":1,"message":"1086","line":47,"column":110,"nodeType":"1087","messageId":"1088","endLine":47,"endColumn":112},{"ruleId":"1085","severity":1,"message":"1086","line":48,"column":72,"nodeType":"1087","messageId":"1088","endLine":48,"endColumn":74},{"ruleId":"1085","severity":1,"message":"1086","line":48,"column":104,"nodeType":"1087","messageId":"1088","endLine":48,"endColumn":106},{"ruleId":"1085","severity":1,"message":"1086","line":53,"column":62,"nodeType":"1087","messageId":"1088","endLine":53,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1086","line":53,"column":88,"nodeType":"1087","messageId":"1088","endLine":53,"endColumn":90},{"ruleId":"965","severity":1,"message":"1091","line":58,"column":12,"nodeType":"967","messageId":"968","endLine":58,"endColumn":25},{"ruleId":"965","severity":1,"message":"1092","line":58,"column":27,"nodeType":"967","messageId":"968","endLine":58,"endColumn":43},{"ruleId":"965","severity":1,"message":"1093","line":59,"column":12,"nodeType":"967","messageId":"968","endLine":59,"endColumn":22},{"ruleId":"965","severity":1,"message":"1094","line":59,"column":24,"nodeType":"967","messageId":"968","endLine":59,"endColumn":37},{"ruleId":"1031","severity":1,"message":"1095","line":63,"column":67,"nodeType":"1033","messageId":"1096","endLine":63,"endColumn":69},{"ruleId":"976","severity":1,"message":"1058","line":63,"column":80,"nodeType":"978","messageId":"979","endLine":63,"endColumn":82},{"ruleId":"1085","severity":1,"message":"1086","line":95,"column":34,"nodeType":"1087","messageId":"1088","endLine":95,"endColumn":36},{"ruleId":"1085","severity":1,"message":"1086","line":95,"column":55,"nodeType":"1087","messageId":"1088","endLine":95,"endColumn":57},{"ruleId":"1085","severity":1,"message":"1086","line":401,"column":36,"nodeType":"1087","messageId":"1088","endLine":401,"endColumn":38},{"ruleId":"1085","severity":1,"message":"1086","line":401,"column":52,"nodeType":"1087","messageId":"1088","endLine":401,"endColumn":54},{"ruleId":"1031","severity":1,"message":"1032","line":19,"column":23,"nodeType":"1033","messageId":"1034","endLine":19,"endColumn":25},{"ruleId":"976","severity":1,"message":"977","line":21,"column":23,"nodeType":"978","messageId":"979","endLine":21,"endColumn":25},{"ruleId":"1031","severity":1,"message":"1097","line":33,"column":39,"nodeType":"1033","messageId":"1096","endLine":33,"endColumn":41},{"ruleId":"976","severity":1,"message":"977","line":34,"column":25,"nodeType":"978","messageId":"979","endLine":34,"endColumn":27},{"ruleId":"1031","severity":1,"message":"1032","line":53,"column":45,"nodeType":"1033","messageId":"1034","endLine":53,"endColumn":47},{"ruleId":"976","severity":1,"message":"977","line":54,"column":9,"nodeType":"978","messageId":"979","endLine":54,"endColumn":11},{"ruleId":"976","severity":1,"message":"977","line":56,"column":16,"nodeType":"978","messageId":"979","endLine":56,"endColumn":18},{"ruleId":"976","severity":1,"message":"1058","line":70,"column":47,"nodeType":"978","messageId":"979","endLine":70,"endColumn":49},{"ruleId":"976","severity":1,"message":"977","line":70,"column":75,"nodeType":"978","messageId":"979","endLine":70,"endColumn":77},{"ruleId":"976","severity":1,"message":"1058","line":76,"column":28,"nodeType":"978","messageId":"979","endLine":76,"endColumn":30},{"ruleId":"1098","severity":1,"message":"1099","line":79,"column":44,"nodeType":"1100","messageId":"979","endLine":79,"endColumn":48},{"ruleId":"1098","severity":1,"message":"1099","line":80,"column":44,"nodeType":"1100","messageId":"979","endLine":80,"endColumn":48},{"ruleId":"965","severity":1,"message":"1007","line":31,"column":10,"nodeType":"967","messageId":"968","endLine":31,"endColumn":26},{"ruleId":"965","severity":1,"message":"1008","line":32,"column":8,"nodeType":"967","messageId":"968","endLine":32,"endColumn":16},{"ruleId":"965","severity":1,"message":"1009","line":33,"column":8,"nodeType":"967","messageId":"968","endLine":33,"endColumn":13},{"ruleId":"965","severity":1,"message":"997","line":97,"column":10,"nodeType":"967","messageId":"968","endLine":97,"endColumn":21},{"ruleId":"965","severity":1,"message":"1010","line":101,"column":17,"nodeType":"967","messageId":"968","endLine":101,"endColumn":25},{"ruleId":"965","severity":1,"message":"1001","line":103,"column":9,"nodeType":"967","messageId":"968","endLine":103,"endColumn":18},{"ruleId":"965","severity":1,"message":"1011","line":105,"column":9,"nodeType":"967","messageId":"968","endLine":105,"endColumn":23},{"ruleId":"965","severity":1,"message":"1012","line":114,"column":9,"nodeType":"967","messageId":"968","endLine":114,"endColumn":13},{"ruleId":"970","severity":1,"message":"1013","line":181,"column":3,"nodeType":"967","endLine":181,"endColumn":12,"suggestions":"1101"},{"ruleId":"965","severity":1,"message":"990","line":2,"column":8,"nodeType":"967","messageId":"968","endLine":2,"endColumn":14},{"ruleId":"965","severity":1,"message":"991","line":13,"column":8,"nodeType":"967","messageId":"968","endLine":13,"endColumn":15},{"ruleId":"965","severity":1,"message":"992","line":28,"column":8,"nodeType":"967","messageId":"968","endLine":28,"endColumn":13},{"ruleId":"965","severity":1,"message":"993","line":148,"column":10,"nodeType":"967","messageId":"968","endLine":148,"endColumn":16},{"ruleId":"965","severity":1,"message":"994","line":148,"column":18,"nodeType":"967","messageId":"968","endLine":148,"endColumn":27},{"ruleId":"965","severity":1,"message":"995","line":149,"column":10,"nodeType":"967","messageId":"968","endLine":149,"endColumn":19},{"ruleId":"965","severity":1,"message":"996","line":149,"column":21,"nodeType":"967","messageId":"968","endLine":149,"endColumn":33},{"ruleId":"965","severity":1,"message":"997","line":150,"column":10,"nodeType":"967","messageId":"968","endLine":150,"endColumn":21},{"ruleId":"965","severity":1,"message":"998","line":151,"column":22,"nodeType":"967","messageId":"968","endLine":151,"endColumn":35},{"ruleId":"965","severity":1,"message":"999","line":157,"column":10,"nodeType":"967","messageId":"968","endLine":157,"endColumn":16},{"ruleId":"965","severity":1,"message":"1000","line":157,"column":18,"nodeType":"967","messageId":"968","endLine":157,"endColumn":27},{"ruleId":"965","severity":1,"message":"1001","line":158,"column":9,"nodeType":"967","messageId":"968","endLine":158,"endColumn":18},{"ruleId":"965","severity":1,"message":"1002","line":163,"column":9,"nodeType":"967","messageId":"968","endLine":163,"endColumn":22},{"ruleId":"965","severity":1,"message":"1003","line":171,"column":9,"nodeType":"967","messageId":"968","endLine":171,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1005","line":476,"column":13,"nodeType":"1006","endLine":484,"endColumn":14},{"ruleId":"970","severity":1,"message":"980","line":85,"column":3,"nodeType":"967","endLine":85,"endColumn":12,"suggestions":"1102"},{"ruleId":"965","severity":1,"message":"1015","line":1,"column":27,"nodeType":"967","messageId":"968","endLine":1,"endColumn":35},{"ruleId":"1016","severity":1,"message":"1017","line":234,"column":12,"nodeType":"1018","messageId":"979","endLine":234,"endColumn":22},{"ruleId":"965","severity":1,"message":"982","line":22,"column":8,"nodeType":"967","messageId":"968","endLine":22,"endColumn":18},{"ruleId":"965","severity":1,"message":"983","line":23,"column":8,"nodeType":"967","messageId":"968","endLine":23,"endColumn":21},{"ruleId":"965","severity":1,"message":"984","line":24,"column":8,"nodeType":"967","messageId":"968","endLine":24,"endColumn":18},{"ruleId":"965","severity":1,"message":"985","line":25,"column":8,"nodeType":"967","messageId":"968","endLine":25,"endColumn":22},{"ruleId":"965","severity":1,"message":"986","line":26,"column":8,"nodeType":"967","messageId":"968","endLine":26,"endColumn":19},{"ruleId":"965","severity":1,"message":"987","line":27,"column":8,"nodeType":"967","messageId":"968","endLine":27,"endColumn":18},{"ruleId":"965","severity":1,"message":"988","line":28,"column":8,"nodeType":"967","messageId":"968","endLine":28,"endColumn":21},{"ruleId":"965","severity":1,"message":"989","line":29,"column":8,"nodeType":"967","messageId":"968","endLine":29,"endColumn":12},{"ruleId":"965","severity":1,"message":"966","line":8,"column":8,"nodeType":"967","messageId":"968","endLine":8,"endColumn":17},{"ruleId":"965","severity":1,"message":"969","line":63,"column":9,"nodeType":"967","messageId":"968","endLine":63,"endColumn":16},{"ruleId":"970","severity":1,"message":"971","line":251,"column":6,"nodeType":"972","endLine":251,"endColumn":8,"suggestions":"1103"},{"ruleId":"970","severity":1,"message":"974","line":292,"column":6,"nodeType":"972","endLine":292,"endColumn":20,"suggestions":"1104"},{"ruleId":"976","severity":1,"message":"977","line":375,"column":68,"nodeType":"978","messageId":"979","endLine":375,"endColumn":70},{"ruleId":"970","severity":1,"message":"1019","line":110,"column":6,"nodeType":"972","endLine":110,"endColumn":19,"suggestions":"1105"},{"ruleId":"965","severity":1,"message":"1022","line":1,"column":28,"nodeType":"967","messageId":"968","endLine":1,"endColumn":39},{"ruleId":"965","severity":1,"message":"1023","line":19,"column":8,"nodeType":"967","messageId":"968","endLine":19,"endColumn":15},{"ruleId":"965","severity":1,"message":"1024","line":150,"column":10,"nodeType":"967","messageId":"968","endLine":150,"endColumn":22},{"ruleId":"965","severity":1,"message":"1025","line":150,"column":24,"nodeType":"967","messageId":"968","endLine":150,"endColumn":39},{"ruleId":"965","severity":1,"message":"1026","line":154,"column":20,"nodeType":"967","messageId":"968","endLine":154,"endColumn":31},{"ruleId":"970","severity":1,"message":"1027","line":179,"column":6,"nodeType":"972","endLine":179,"endColumn":83,"suggestions":"1106"},{"ruleId":"976","severity":1,"message":"977","line":240,"column":12,"nodeType":"978","messageId":"979","endLine":240,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":252,"column":25,"nodeType":"978","messageId":"979","endLine":252,"endColumn":27},{"ruleId":"965","severity":1,"message":"1029","line":307,"column":12,"nodeType":"967","messageId":"968","endLine":307,"endColumn":22},{"ruleId":"965","severity":1,"message":"1030","line":354,"column":9,"nodeType":"967","messageId":"968","endLine":354,"endColumn":20},{"ruleId":"1031","severity":1,"message":"1032","line":355,"column":23,"nodeType":"1033","messageId":"1034","endLine":355,"endColumn":25},{"ruleId":"965","severity":1,"message":"1021","line":4,"column":8,"nodeType":"967","messageId":"968","endLine":4,"endColumn":13},{"ruleId":"965","severity":1,"message":"1036","line":1,"column":17,"nodeType":"967","messageId":"968","endLine":1,"endColumn":25},{"ruleId":"965","severity":1,"message":"1037","line":1,"column":27,"nodeType":"967","messageId":"968","endLine":1,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1068","line":141,"column":11,"nodeType":"1069","messageId":"1070","endLine":141,"endColumn":12},{"ruleId":"965","severity":1,"message":"1037","line":1,"column":27,"nodeType":"967","messageId":"968","endLine":1,"endColumn":36},{"ruleId":"965","severity":1,"message":"992","line":9,"column":8,"nodeType":"967","messageId":"968","endLine":9,"endColumn":13},{"ruleId":"965","severity":1,"message":"1038","line":1,"column":28,"nodeType":"967","messageId":"968","endLine":1,"endColumn":47},{"ruleId":"965","severity":1,"message":"1039","line":70,"column":12,"nodeType":"967","messageId":"968","endLine":70,"endColumn":24},{"ruleId":"965","severity":1,"message":"1040","line":70,"column":26,"nodeType":"967","messageId":"968","endLine":70,"endColumn":41},{"ruleId":"965","severity":1,"message":"1041","line":71,"column":12,"nodeType":"967","messageId":"968","endLine":71,"endColumn":26},{"ruleId":"965","severity":1,"message":"1042","line":71,"column":28,"nodeType":"967","messageId":"968","endLine":71,"endColumn":45},{"ruleId":"965","severity":1,"message":"1043","line":72,"column":12,"nodeType":"967","messageId":"968","endLine":72,"endColumn":25},{"ruleId":"965","severity":1,"message":"1044","line":72,"column":27,"nodeType":"967","messageId":"968","endLine":72,"endColumn":43},{"ruleId":"970","severity":1,"message":"1045","line":100,"column":6,"nodeType":"972","endLine":100,"endColumn":25,"suggestions":"1107"},{"ruleId":"976","severity":1,"message":"977","line":120,"column":41,"nodeType":"978","messageId":"979","endLine":120,"endColumn":43},{"ruleId":"1047","severity":1,"message":"1048","line":166,"column":21,"nodeType":"1049","endLine":166,"endColumn":41},{"ruleId":"965","severity":1,"message":"1036","line":2,"column":10,"nodeType":"967","messageId":"968","endLine":2,"endColumn":18},{"ruleId":"965","severity":1,"message":"1050","line":39,"column":11,"nodeType":"967","messageId":"968","endLine":39,"endColumn":19},{"ruleId":"965","severity":1,"message":"984","line":4,"column":18,"nodeType":"967","messageId":"968","endLine":4,"endColumn":28},{"ruleId":"965","severity":1,"message":"1051","line":9,"column":3,"nodeType":"967","messageId":"968","endLine":9,"endColumn":12},{"ruleId":"965","severity":1,"message":"1052","line":10,"column":3,"nodeType":"967","messageId":"968","endLine":10,"endColumn":14},{"ruleId":"965","severity":1,"message":"1053","line":11,"column":3,"nodeType":"967","messageId":"968","endLine":11,"endColumn":8},{"ruleId":"965","severity":1,"message":"1054","line":12,"column":3,"nodeType":"967","messageId":"968","endLine":12,"endColumn":12},{"ruleId":"965","severity":1,"message":"1055","line":95,"column":10,"nodeType":"967","messageId":"968","endLine":95,"endColumn":14},{"ruleId":"965","severity":1,"message":"1056","line":119,"column":9,"nodeType":"967","messageId":"968","endLine":119,"endColumn":20},{"ruleId":"965","severity":1,"message":"1057","line":162,"column":9,"nodeType":"967","messageId":"968","endLine":162,"endColumn":12},{"ruleId":"965","severity":1,"message":"1057","line":196,"column":11,"nodeType":"967","messageId":"968","endLine":196,"endColumn":14},{"ruleId":"965","severity":1,"message":"1057","line":216,"column":9,"nodeType":"967","messageId":"968","endLine":216,"endColumn":12},{"ruleId":"976","severity":1,"message":"1058","line":315,"column":31,"nodeType":"978","messageId":"979","endLine":315,"endColumn":33},{"ruleId":"1059","severity":1,"message":"1060","line":482,"column":21,"nodeType":"1006","endLine":482,"endColumn":69},{"ruleId":"1061","severity":1,"message":"1062","line":483,"column":23,"nodeType":"1006","endLine":487,"endColumn":24},{"ruleId":"1031","severity":1,"message":"1032","line":19,"column":23,"nodeType":"1033","messageId":"1034","endLine":19,"endColumn":25},{"ruleId":"976","severity":1,"message":"977","line":21,"column":23,"nodeType":"978","messageId":"979","endLine":21,"endColumn":25},{"ruleId":"1031","severity":1,"message":"1097","line":33,"column":39,"nodeType":"1033","messageId":"1096","endLine":33,"endColumn":41},{"ruleId":"976","severity":1,"message":"977","line":34,"column":25,"nodeType":"978","messageId":"979","endLine":34,"endColumn":27},{"ruleId":"1031","severity":1,"message":"1032","line":53,"column":45,"nodeType":"1033","messageId":"1034","endLine":53,"endColumn":47},{"ruleId":"976","severity":1,"message":"977","line":54,"column":9,"nodeType":"978","messageId":"979","endLine":54,"endColumn":11},{"ruleId":"976","severity":1,"message":"977","line":56,"column":16,"nodeType":"978","messageId":"979","endLine":56,"endColumn":18},{"ruleId":"976","severity":1,"message":"1058","line":70,"column":47,"nodeType":"978","messageId":"979","endLine":70,"endColumn":49},{"ruleId":"976","severity":1,"message":"977","line":70,"column":75,"nodeType":"978","messageId":"979","endLine":70,"endColumn":77},{"ruleId":"976","severity":1,"message":"1058","line":76,"column":28,"nodeType":"978","messageId":"979","endLine":76,"endColumn":30},{"ruleId":"1098","severity":1,"message":"1099","line":79,"column":44,"nodeType":"1100","messageId":"979","endLine":79,"endColumn":48},{"ruleId":"1098","severity":1,"message":"1099","line":80,"column":44,"nodeType":"1100","messageId":"979","endLine":80,"endColumn":48},{"ruleId":"965","severity":1,"message":"1037","line":1,"column":17,"nodeType":"967","messageId":"968","endLine":1,"endColumn":26},{"ruleId":"965","severity":1,"message":"1063","line":10,"column":19,"nodeType":"967","messageId":"968","endLine":10,"endColumn":21},{"ruleId":"965","severity":1,"message":"1064","line":11,"column":11,"nodeType":"967","messageId":"968","endLine":11,"endColumn":18},{"ruleId":"965","severity":1,"message":"1065","line":12,"column":20,"nodeType":"967","messageId":"968","endLine":12,"endColumn":29},{"ruleId":"970","severity":1,"message":"1066","line":17,"column":28,"nodeType":"967","endLine":17,"endColumn":39},{"ruleId":"965","severity":1,"message":"1072","line":17,"column":8,"nodeType":"967","messageId":"968","endLine":17,"endColumn":19},{"ruleId":"976","severity":1,"message":"1058","line":116,"column":89,"nodeType":"978","messageId":"979","endLine":116,"endColumn":91},{"ruleId":"976","severity":1,"message":"1058","line":120,"column":89,"nodeType":"978","messageId":"979","endLine":120,"endColumn":91},{"ruleId":"976","severity":1,"message":"1058","line":154,"column":68,"nodeType":"978","messageId":"979","endLine":154,"endColumn":70},{"ruleId":"976","severity":1,"message":"1058","line":194,"column":68,"nodeType":"978","messageId":"979","endLine":194,"endColumn":70},{"ruleId":"1031","severity":1,"message":"1032","line":262,"column":39,"nodeType":"1033","messageId":"1034","endLine":262,"endColumn":41},{"ruleId":"965","severity":1,"message":"1084","line":264,"column":27,"nodeType":"967","messageId":"968","endLine":264,"endColumn":31},{"ruleId":"965","severity":1,"message":"1071","line":5,"column":7,"nodeType":"967","messageId":"968","endLine":5,"endColumn":16},{"ruleId":"965","severity":1,"message":"1035","line":116,"column":10,"nodeType":"967","messageId":"968","endLine":116,"endColumn":15},{"ruleId":"1059","severity":1,"message":"1060","line":347,"column":19,"nodeType":"1006","endLine":351,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1005","line":147,"column":17,"nodeType":"1006","endLine":147,"endColumn":50},{"ruleId":"965","severity":1,"message":"1073","line":4,"column":10,"nodeType":"967","messageId":"968","endLine":4,"endColumn":20},{"ruleId":"965","severity":1,"message":"1074","line":4,"column":8,"nodeType":"967","messageId":"968","endLine":4,"endColumn":12},{"ruleId":"965","severity":1,"message":"1075","line":11,"column":8,"nodeType":"967","messageId":"968","endLine":11,"endColumn":13},{"ruleId":"965","severity":1,"message":"1076","line":13,"column":8,"nodeType":"967","messageId":"968","endLine":13,"endColumn":24},{"ruleId":"965","severity":1,"message":"1077","line":14,"column":8,"nodeType":"967","messageId":"968","endLine":14,"endColumn":16},{"ruleId":"965","severity":1,"message":"1078","line":18,"column":8,"nodeType":"967","messageId":"968","endLine":18,"endColumn":14},{"ruleId":"965","severity":1,"message":"1064","line":27,"column":11,"nodeType":"967","messageId":"968","endLine":27,"endColumn":18},{"ruleId":"970","severity":1,"message":"1079","line":41,"column":3,"nodeType":"972","endLine":41,"endColumn":5,"suggestions":"1108"},{"ruleId":"976","severity":1,"message":"977","line":45,"column":12,"nodeType":"978","messageId":"979","endLine":45,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":46,"column":34,"nodeType":"978","messageId":"1083","endLine":46,"endColumn":35},{"ruleId":"976","severity":1,"message":"977","line":47,"column":12,"nodeType":"978","messageId":"979","endLine":47,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":48,"column":34,"nodeType":"978","messageId":"1083","endLine":48,"endColumn":35},{"ruleId":"976","severity":1,"message":"977","line":49,"column":12,"nodeType":"978","messageId":"979","endLine":49,"endColumn":14},{"ruleId":"1081","severity":1,"message":"1082","line":50,"column":34,"nodeType":"978","messageId":"1083","endLine":50,"endColumn":35},{"ruleId":"1061","severity":1,"message":"1062","line":79,"column":41,"nodeType":"1006","endLine":79,"endColumn":102},{"ruleId":"965","severity":1,"message":"982","line":13,"column":8,"nodeType":"967","messageId":"968","endLine":13,"endColumn":18},{"ruleId":"965","severity":1,"message":"983","line":14,"column":8,"nodeType":"967","messageId":"968","endLine":14,"endColumn":21},{"ruleId":"965","severity":1,"message":"984","line":15,"column":8,"nodeType":"967","messageId":"968","endLine":15,"endColumn":18},{"ruleId":"965","severity":1,"message":"985","line":16,"column":8,"nodeType":"967","messageId":"968","endLine":16,"endColumn":22},{"ruleId":"965","severity":1,"message":"987","line":18,"column":8,"nodeType":"967","messageId":"968","endLine":18,"endColumn":18},{"ruleId":"965","severity":1,"message":"988","line":19,"column":8,"nodeType":"967","messageId":"968","endLine":19,"endColumn":21},{"ruleId":"1085","severity":1,"message":"1086","line":36,"column":58,"nodeType":"1087","messageId":"1088","endLine":36,"endColumn":60},{"ruleId":"1085","severity":1,"message":"1086","line":36,"column":82,"nodeType":"1087","messageId":"1088","endLine":36,"endColumn":84},{"ruleId":"1085","severity":1,"message":"1086","line":37,"column":66,"nodeType":"1087","messageId":"1088","endLine":37,"endColumn":68},{"ruleId":"1085","severity":1,"message":"1086","line":37,"column":94,"nodeType":"1087","messageId":"1088","endLine":37,"endColumn":96},{"ruleId":"965","severity":1,"message":"1089","line":38,"column":13,"nodeType":"967","messageId":"968","endLine":38,"endColumn":27},{"ruleId":"965","severity":1,"message":"1090","line":38,"column":29,"nodeType":"967","messageId":"968","endLine":38,"endColumn":46},{"ruleId":"1085","severity":1,"message":"1086","line":39,"column":68,"nodeType":"1087","messageId":"1088","endLine":39,"endColumn":70},{"ruleId":"1085","severity":1,"message":"1086","line":39,"column":90,"nodeType":"1087","messageId":"1088","endLine":39,"endColumn":92},{"ruleId":"1085","severity":1,"message":"1086","line":40,"column":68,"nodeType":"1087","messageId":"1088","endLine":40,"endColumn":70},{"ruleId":"1085","severity":1,"message":"1086","line":40,"column":97,"nodeType":"1087","messageId":"1088","endLine":40,"endColumn":99},{"ruleId":"1085","severity":1,"message":"1086","line":41,"column":62,"nodeType":"1087","messageId":"1088","endLine":41,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1086","line":41,"column":88,"nodeType":"1087","messageId":"1088","endLine":41,"endColumn":90},{"ruleId":"1085","severity":1,"message":"1086","line":42,"column":74,"nodeType":"1087","messageId":"1088","endLine":42,"endColumn":76},{"ruleId":"1085","severity":1,"message":"1086","line":42,"column":106,"nodeType":"1087","messageId":"1088","endLine":42,"endColumn":108},{"ruleId":"1085","severity":1,"message":"1086","line":43,"column":70,"nodeType":"1087","messageId":"1088","endLine":43,"endColumn":72},{"ruleId":"1085","severity":1,"message":"1086","line":43,"column":108,"nodeType":"1087","messageId":"1088","endLine":43,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1086","line":44,"column":74,"nodeType":"1087","messageId":"1088","endLine":44,"endColumn":76},{"ruleId":"1085","severity":1,"message":"1086","line":44,"column":108,"nodeType":"1087","messageId":"1088","endLine":44,"endColumn":110},{"ruleId":"1085","severity":1,"message":"1086","line":45,"column":72,"nodeType":"1087","messageId":"1088","endLine":45,"endColumn":74},{"ruleId":"1085","severity":1,"message":"1086","line":45,"column":104,"nodeType":"1087","messageId":"1088","endLine":45,"endColumn":106},{"ruleId":"1085","severity":1,"message":"1086","line":46,"column":72,"nodeType":"1087","messageId":"1088","endLine":46,"endColumn":74},{"ruleId":"1085","severity":1,"message":"1086","line":46,"column":110,"nodeType":"1087","messageId":"1088","endLine":46,"endColumn":112},{"ruleId":"1085","severity":1,"message":"1086","line":47,"column":76,"nodeType":"1087","messageId":"1088","endLine":47,"endColumn":78},{"ruleId":"1085","severity":1,"message":"1086","line":47,"column":110,"nodeType":"1087","messageId":"1088","endLine":47,"endColumn":112},{"ruleId":"1085","severity":1,"message":"1086","line":48,"column":72,"nodeType":"1087","messageId":"1088","endLine":48,"endColumn":74},{"ruleId":"1085","severity":1,"message":"1086","line":48,"column":104,"nodeType":"1087","messageId":"1088","endLine":48,"endColumn":106},{"ruleId":"1085","severity":1,"message":"1086","line":53,"column":62,"nodeType":"1087","messageId":"1088","endLine":53,"endColumn":64},{"ruleId":"1085","severity":1,"message":"1086","line":53,"column":88,"nodeType":"1087","messageId":"1088","endLine":53,"endColumn":90},{"ruleId":"965","severity":1,"message":"1091","line":58,"column":12,"nodeType":"967","messageId":"968","endLine":58,"endColumn":25},{"ruleId":"965","severity":1,"message":"1092","line":58,"column":27,"nodeType":"967","messageId":"968","endLine":58,"endColumn":43},{"ruleId":"965","severity":1,"message":"1093","line":59,"column":12,"nodeType":"967","messageId":"968","endLine":59,"endColumn":22},{"ruleId":"965","severity":1,"message":"1094","line":59,"column":24,"nodeType":"967","messageId":"968","endLine":59,"endColumn":37},{"ruleId":"1031","severity":1,"message":"1095","line":63,"column":67,"nodeType":"1033","messageId":"1096","endLine":63,"endColumn":69},{"ruleId":"976","severity":1,"message":"1058","line":63,"column":80,"nodeType":"978","messageId":"979","endLine":63,"endColumn":82},{"ruleId":"1085","severity":1,"message":"1086","line":95,"column":34,"nodeType":"1087","messageId":"1088","endLine":95,"endColumn":36},{"ruleId":"1085","severity":1,"message":"1086","line":95,"column":55,"nodeType":"1087","messageId":"1088","endLine":95,"endColumn":57},{"ruleId":"1085","severity":1,"message":"1086","line":401,"column":36,"nodeType":"1087","messageId":"1088","endLine":401,"endColumn":38},{"ruleId":"1085","severity":1,"message":"1086","line":401,"column":52,"nodeType":"1087","messageId":"1088","endLine":401,"endColumn":54},"no-native-reassign",["1109"],"no-negated-in-lhs",["1110"],"no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.match.params.artId', 'props.match.params.username', and 'tiles'. Either include them or remove the dependency array.","ArrayExpression",["1111"],"React Hook useEffect has missing dependencies: 'updatedTile._id', 'updatedTile.artId', 'updatedTile.artLocation', 'updatedTile.artType', 'updatedTile.category', 'updatedTile.description', 'updatedTile.imageUrl', 'updatedTile.license', 'updatedTile.originalPhotoHeight', 'updatedTile.originalPhotoIso', 'updatedTile.originalPhotoPpi', 'updatedTile.originalPhotoWidth', 'updatedTile.prixerUsername', 'updatedTile.publicId', 'updatedTile.status', 'updatedTile.tags', 'updatedTile.thumbnailUrl', 'updatedTile.title', 'updatedTile.use', and 'updatedTile.userId'. Either include them or remove the dependency array.",["1112"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect contains a call to 'setErrorMessage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["1113"],"'IconButton' is defined but never used.","'OutlinedInput' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'clsx' is defined but never used.","'Avatar' is defined but never used.","'AddIcon' is defined but never used.","'Terms' is defined but never used.","'avatar' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","'avatarObj' is assigned a value but never used.","'setAvatarObj' is assigned a value but never used.","'buttonState' is assigned a value but never used.","'setTermsAgree' is assigned a value but never used.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'isDesktop' is assigned a value but never used.","'setCheckedBox' is assigned a value but never used.","'acceptTerms' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'setValue' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'body' is assigned a value but never used.","React Hook useEffect contains a call to 'setButtonState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [email, username, password] as a second argument to the useEffect Hook.",["1114"],"'Suspense' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","React Hook useEffect has missing dependencies: 'globalParams' and 'props.prixerUsername'. Either include them or remove the dependency array.",["1115"],"'axios' is defined but never used.","'useCallback' is defined but never used.","'Cropper' is defined but never used.","'thumbnailUrl' is assigned a value but never used.","'setThumbnailUrl' is assigned a value but never used.","'setPublicId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'artType' and 'handleMaxPrintCalc'. Either include them or remove the dependency array.",["1116"],"'blobToFile' is defined but never used.","'removeCrops' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ready' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useImperativeHandle' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'snackBarAction' is assigned a value but never used.","'setSnackBarAction' is assigned a value but never used.","'snackBarError' is assigned a value but never used.","'setSnackBarError' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'art', 'croppedArtTemp', and 'setCroppedArt'. Either include them or remove the dependency array.",["1117"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'response' is assigned a value but never used.","'FormGroup' is defined but never used.","'FilledInput' is defined but never used.","'Input' is defined but never used.","'TextField' is defined but never used.","'Open' is assigned a value but never used.","'createOpenF' is assigned a value but never used.","'res' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ar' is assigned a value but never used.","'classes' is assigned a value but never used.","'setAspect' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useStyles' is assigned a value but never used.","'Preferences' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","'Title' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'base_url' and 'props.product'. Either include them or remove the dependency array.",["1118"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'test' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'buttonAttState' is assigned a value but never used.","'setButtonAttState' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'emailError' is assigned a value but never used.","'setEmailError' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","no-eval","eval can be harmful.","CallExpression",["1119"],["1120"],["1121"],["1122"],["1123"],["1124"],["1125"],["1126"],"no-global-assign","no-unsafe-negation",{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1133","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1141","fix":"1142"},{"desc":"1133","fix":"1143"},{"desc":"1131","fix":"1144"},{"desc":"1127","fix":"1145"},{"desc":"1129","fix":"1146"},{"desc":"1135","fix":"1147"},{"desc":"1137","fix":"1148"},{"desc":"1139","fix":"1149"},{"desc":"1141","fix":"1150"},"Update the dependencies array to be: [props.match.params.artId, props.match.params.username, tiles]",{"range":"1151","text":"1152"},"Update the dependencies array to be: [artDataState, updatedTile._id, updatedTile.artId, updatedTile.artLocation, updatedTile.artType, updatedTile.category, updatedTile.description, updatedTile.imageUrl, updatedTile.license, updatedTile.originalPhotoHeight, updatedTile.originalPhotoIso, updatedTile.originalPhotoPpi, updatedTile.originalPhotoWidth, updatedTile.prixerUsername, updatedTile.publicId, updatedTile.status, updatedTile.tags, updatedTile.thumbnailUrl, updatedTile.title, updatedTile.use, updatedTile.userId]",{"range":"1153","text":"1154"},"Add dependencies array: [token]",{"range":"1155","text":"1156"},"Add dependencies array: [email, username, password]",{"range":"1157","text":"1158"},"Update the dependencies array to be: [globalParams, props.prixerUsername, searchValue]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso, artType, handleMaxPrintCalc]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [art, croppedAreaPixels, croppedArtTemp, setCroppedArt]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [base_url, props.product]",{"range":"1165","text":"1166"},{"range":"1167","text":"1158"},{"range":"1168","text":"1156"},{"range":"1169","text":"1152"},{"range":"1170","text":"1154"},{"range":"1171","text":"1160"},{"range":"1172","text":"1162"},{"range":"1173","text":"1164"},{"range":"1174","text":"1166"},[7111,7113],"[props.match.params.artId, props.match.params.username, tiles]",[8693,8707],"[artDataState, updatedTile._id, updatedTile.artId, updatedTile.artLocation, updatedTile.artType, updatedTile.category, updatedTile.description, updatedTile.imageUrl, updatedTile.license, updatedTile.originalPhotoHeight, updatedTile.originalPhotoIso, updatedTile.originalPhotoPpi, updatedTile.originalPhotoWidth, updatedTile.prixerUsername, updatedTile.publicId, updatedTile.status, updatedTile.tags, updatedTile.thumbnailUrl, updatedTile.title, updatedTile.use, updatedTile.userId]",[3479,3479],", [token]",[6343,6343],", [email, username, password]",[3552,3565],"[globalParams, props.prixerUsername, searchValue]",[5481,5558],"[originalPhotoWidth, originalPhotoHeight, originalPhotoPpi, originalPhotoIso, artType, handleMaxPrintCalc]",[2941,2960],"[art, croppedAreaPixels, croppedArtTemp, setCroppedArt]",[1461,1463],"[base_url, props.product]",[6343,6343],[3479,3479],[7111,7113],[8693,8707],[3552,3565],[5481,5558],[2941,2960],[1461,1463]]